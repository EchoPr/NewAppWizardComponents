{
  "functions": [
    {
      "name": "active_field_get",
      "level": "1",
      "desc_ru": "Запрос данных об активном поле.",
      "desc_en": "Request for active field data.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": [
        {
          "name": "field",
          "desc_ru": "Название активного поля.",
          "desc_en": "Active field name.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Источник поля.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "field_type",
          "desc_ru": "Тип поля в зависимости от предназначения.",
          "desc_en": "Field type depending on purpose.",
          "type": "Integer"
        },
        {
          "name": "field_target",
          "desc_ru": "Активный выбранный тип полей.",
          "desc_en": "Active selected field type.",
          "type": "Integer"
        },
        {
          "name": "source_object",
          "desc_ru": "Номер объекта, к которому относится поле.",
          "desc_en": "The number of the object to which the field belongs.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Номер операции, к которой относится поле.",
          "desc_en": "The number of the operation to which the field belongs.",
          "type": "Integer"
        },
        {
          "name": "field_min",
          "desc_ru": "Минимальное значение поля.",
          "desc_en": "Minimum field value.",
          "type": "Float"
        },
        {
          "name": "field_max",
          "desc_ru": "Максимальное значение поля.",
          "desc_en": "Maximum field value.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "active_field_reset",
      "level": "1",
      "desc_ru": "Сброс данных активного поля.",
      "desc_en": "Clear active field data.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "active_field_set",
      "level": "1",
      "desc_ru": "Добавление активного поля из интерфейса.",
      "desc_en": "Adding an active field from the interface.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "field",
          "desc_ru": "Название активного поля.",
          "desc_en": "Active field name.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Источник поля.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "field_type",
          "desc_ru": "Тип поля в зависимости от предназначения.",
          "desc_en": "Field type depending on purpose.",
          "type": "Integer"
        },
        {
          "name": "field_target",
          "desc_ru": "Активный выбранный тип полей.",
          "desc_en": "Active selected field type.",
          "type": "Integer"
        },
        {
          "name": "source_object",
          "desc_ru": "Номер объекта, к которому относится поле.",
          "desc_en": "The number of the object to which the field belongs.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Номер операции, к которой относится поле.",
          "desc_en": "The number of the operation to which the field belongs.",
          "type": "Integer"
        },
        {
          "name": "field_min",
          "desc_ru": "Минимальное значение поля.",
          "desc_en": "Minimum field value.",
          "type": "Float"
        },
        {
          "name": "field_max",
          "desc_ru": "Максимальное значение поля.",
          "desc_en": "Maximum field value.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units of measure.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "assembled_tool_create",
      "level": "1",
      "desc_ru": "Создание одного составного интрумента из нескольких.",
      "desc_en": "Creation of one assembly tool from several tools.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id инструмента.",
          "desc_en": "Tool id.",
          "type": "Integer"
        },
        {
          "name": "parts",
          "desc_ru": "Массив номеров обьектов, входящих в состав инструмента.",
          "desc_en": "Array of object numbers included in the tool.",
          "type": "Integer array"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id составного инструмента.",
          "desc_en": "Assembly tool id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "assembled_tool_get",
      "level": "1",
      "desc_ru": "Запрос данных об объектах, из которых состоит составной инструмент.",
      "desc_en": "Request for data about the objects that make up the assembled tool.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id составного инструмента.",
          "desc_en": "Assembly tool id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id инструмента.",
          "desc_en": "Tool id.",
          "type": "Integer"
        },
        {
          "name": "parts",
          "desc_ru": "Массив номеров обьектов, входящих в состав инструмента.",
          "desc_en": "Array of object numbers included in the tool.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "assembled_tool_split",
      "level": "1",
      "desc_ru": "Разделение составного инструмента на отдельные.",
      "desc_en": "Division of an assembled tool into separate tools.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id составного инструмента.",
          "desc_en": "Assembly tool id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "assembled_tools_get",
      "level": "1",
      "desc_ru": "Запрос данных о количестве составных инструментов.",
      "desc_en": "Request for data on the amount of compound tools.",
      "group": [
        "Геометрия",
        "Списки"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив инструментов, входящих в составной.",
          "desc_en": "Array of tools included in the compound.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "async_calculate_tools",
      "level": "1",
      "desc_ru": "Расчет инстурментов.",
      "desc_en": "Calculation of tools.",
      "group": [
        "Расчет"
      ],
      "input": [
        {
          "name": "objects",
          "desc_ru": "Массив инструментов.",
          "desc_en": "Array of tools.",
          "type": "Enum (ObjectId) array"
        }
      ],
      "output": [
        {
          "name": "status",
          "desc_ru": "Состояние расчета.",
          "desc_en": "Calculation status.",
          "type": "Enum (StatusCode)"
        }
      ]
    },
    {
      "name": "async_calculate_tools_coupled",
      "level": "1",
      "desc_ru": "Постпроцессорный расчет инструментов.",
      "desc_en": "Postprocessor calculation of tools.",
      "group": [
        "Расчет"
      ],
      "input": [],
      "output": [
        {
          "name": "status",
          "desc_ru": "Состояние расчета.",
          "desc_en": "Calculation status.",
          "type": "Enum (StatusCode)"
        }
      ]
    },
    {
      "name": "async_execute_subroutines",
      "level": "1",
      "desc_ru": "Выполнение подпрограмм.",
      "desc_en": "Execution of subroutines.",
      "group": [
        "Подпрограммы",
        "Расчет"
      ],
      "input": [
        {
          "name": "calculation_mode",
          "desc_ru": "Режим расчета подпрограмм.",
          "desc_en": "Subroutines calculation mode.",
          "type": "Enum (CalculationUnit)"
        }
      ],
      "output": []
    },
    {
      "name": "async_execute_tracking",
      "level": "1",
      "desc_ru": "Расчет трассируемых объектов.",
      "desc_en": "Calculation of tracking objects.",
      "group": [
        "Расчет",
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "calculation_mode",
          "desc_ru": "Режим расчета трассировки.",
          "desc_en": "Tracking calculation mode.",
          "type": "Enum (CalculationUnit)"
        },
        {
          "name": "forward",
          "desc_ru": "Трассировка вперед.",
          "desc_en": "Track forward.",
          "type": "Boolean"
        },
        {
          "name": "backward",
          "desc_ru": "Трассировка назад.",
          "desc_en": "Track forward.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "async_start_simulation",
      "level": "1",
      "desc_ru": "Запуск расчета.",
      "desc_en": "Start the simulation.",
      "group": [
        "Расчет"
      ],
      "input": [
        {
          "name": "start_from_record",
          "desc_ru": "Номер шага, с которого нужно начать расчет.",
          "desc_en": "Step number to start calculation from.",
          "type": "Integer"
        },
        {
          "name": "remesh_tools",
          "desc_ru": "Переразбить инструменты.",
          "desc_en": "To remesh tools.",
          "type": "Boolean"
        },
        {
          "name": "stop_at_record",
          "desc_ru": "Номер шага, на котором нужно остановиться.",
          "desc_en": "Step number to stop simulation at.",
          "type": "Integer"
        },
        {
          "name": "max_records",
          "desc_ru": "Максимальное количество шагов расчета.",
          "desc_en": "Maximum number of simulation steps.",
          "type": "Integer"
        },
        {
          "name": "stop_at_process_time",
          "desc_ru": "Время расчета процесса, когда произойдет остановка симуляции.",
          "desc_en": "Process calculation time when the simulation will stop.",
          "type": "Float"
        },
        {
          "name": "max_process_time",
          "desc_ru": "Максимальное время расчета процесса.",
          "desc_en": "Maximum process calculation time.",
          "type": "Float"
        },
        {
          "name": "max_calculation_time",
          "desc_ru": "Максимальное время расчета моделирования.",
          "desc_en": "Maximum calculation time of the simulation.",
          "type": "Integer"
        },
        {
          "name": "calculation_mode",
          "desc_ru": "Режим расчета.",
          "desc_en": "Calculation mode.",
          "type": "Enum (CalculationMode)"
        }
      ],
      "output": []
    },
    {
      "name": "async_state",
      "level": "1",
      "desc_ru": "Получение информации о расчете.",
      "desc_en": "Getting information about the calculation.",
      "group": [
        "Расчет"
      ],
      "input": [],
      "output": [
        {
          "name": "working",
          "desc_ru": "Активность расчета.",
          "desc_en": "Calculation active.",
          "type": "Boolean"
        },
        {
          "name": "simulation_stage",
          "desc_ru": "Состояние расчета.",
          "desc_en": "Calculation status.",
          "type": "Enum (SimulationStage)"
        },
        {
          "name": "stage_time",
          "desc_ru": "Длительность стадии запущенного расчета.",
          "desc_en": "Duration of the running calculation stage.",
          "type": "Integer"
        },
        {
          "name": "stage_counter",
          "desc_ru": "Номер стадии запущенного расчета.",
          "desc_en": "The running calculation stage number.",
          "type": "Integer"
        },
        {
          "name": "record",
          "desc_ru": "Количество шагов в расчете.",
          "desc_en": "Number of steps in the calculation.",
          "type": "Float"
        },
        {
          "name": "operation",
          "desc_ru": "Номер операции.",
          "desc_en": "Operation number.",
          "type": "Integer"
        },
        {
          "name": "blow",
          "desc_ru": "Номер удара.",
          "desc_en": "Blow number.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "async_stop_simulation",
      "level": "1",
      "desc_ru": "Остановка расчета.",
      "desc_en": "Stop the calculation.",
      "group": [
        "Расчет"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "async_wait",
      "level": "1",
      "desc_ru": "Ожидание.",
      "desc_en": "Waitng.",
      "group": [
        "Расчет"
      ],
      "input": [
        {
          "name": "timeout",
          "desc_ru": "Длительность ожидания.",
          "desc_en": "Waiting time.",
          "type": "Integer"
        },
        {
          "name": "with_simulation_stage_events",
          "desc_ru": "С событиями этапов расчета.",
          "desc_en": "With simulation stage rvents.",
          "type": "Boolean"
        },
        {
          "name": "with_diagnostic_events",
          "desc_ru": "С событиями диагностики.",
          "desc_en": "With diagnostic events.",
          "type": "Boolean"
        },
        {
          "name": "with_iteration_events",
          "desc_ru": "С событиями расчета.",
          "desc_en": "With iteration events.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "working",
          "desc_ru": "Состояние выполнения расчета.",
          "desc_en": "Calculation status.",
          "type": "Boolean"
        },
        {
          "name": "type",
          "desc_ru": "Тип ожидания.",
          "desc_en": "Waiting type.",
          "type": "Enum (AsyncEventType)"
        },
        {
          "name": "finished_calculation_unit",
          "desc_ru": "Готовый расчетный блок.",
          "desc_en": "Finished calculation unit.",
          "type": "Enum (CalculationUnit)"
        },
        {
          "name": "simulation_stage",
          "desc_ru": "Стадия расчета.",
          "desc_en": "Simulation stage.",
          "type": "Enum (SimulationStage)"
        },
        {
          "name": "stage_time",
          "desc_ru": "Время стадии расчета.",
          "desc_en": "Stage time.",
          "type": "Integer"
        },
        {
          "name": "stage_counter",
          "desc_ru": "Счетсик стадии.",
          "desc_en": "Stage counter.",
          "type": "Integer"
        },
        {
          "name": "record",
          "desc_ru": "Запись.",
          "desc_en": "Record.",
          "type": "Float"
        },
        {
          "name": "progress",
          "desc_ru": "Прогресс.",
          "desc_en": "Progress.",
          "type": "Float"
        },
        {
          "name": "process_time",
          "desc_ru": "Время шага.",
          "desc_en": "Progress time.",
          "type": "Float"
        },
        {
          "name": "diagnostic_msg",
          "desc_ru": "Диагностическое сообщение.",
          "desc_en": "Diagnostic message.",
          "type": "String"
        },
        {
          "name": "diagnostic_msg_type",
          "desc_ru": "Тип диагностического сообщения.",
          "desc_en": "Diagnostic message type.",
          "type": "Enum (MessageType)"
        },
        {
          "name": "diagnostic_msg_code",
          "desc_ru": "Код диагностического сообщения.",
          "desc_en": "Diagnostic message code.",
          "type": "Integer"
        },
        {
          "name": "iteration",
          "desc_ru": "Шаг расчета.",
          "desc_en": "Iteration.",
          "type": "Integer"
        },
        {
          "name": "iteration_velocity_norm",
          "desc_ru": "Cкорость шага расчета.",
          "desc_en": "Iteration velocity.",
          "type": "Float"
        },
        {
          "name": "iteration_mean_stress_norm",
          "desc_ru": "Шаг расчета средних напряжений.",
          "desc_en": "Iteration mean stress.",
          "type": "Float"
        },
        {
          "name": "iteration_separated_nodes",
          "desc_ru": "Шаг расчета раздельных узлов.",
          "desc_en": "Iteration separated nodes.",
          "type": "Integer"
        },
        {
          "name": "iteration_sticked_nodes",
          "desc_ru": "Шаг расчета связанных узлов.",
          "desc_en": "Iteration sticked nodes.",
          "type": "Integer"
        },
        {
          "name": "operation",
          "desc_ru": "Операция.",
          "desc_en": "Operation.",
          "type": "Integer"
        },
        {
          "name": "blow",
          "desc_ru": "Удар.",
          "desc_en": "Blow.",
          "type": "Integer"
        },
        {
          "name": "backward",
          "desc_ru": "Назад.",
          "desc_en": "Backward.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Объекты.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "axis_calculate",
      "level": "1",
      "desc_ru": "Расчет оси.",
      "desc_en": "Axis calculation.",
      "group": [
        "Оси"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип обьекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "defined",
          "desc_ru": "Определенность.",
          "desc_en": "Defined or not.",
          "type": "Boolean"
        },
        {
          "name": "inherited",
          "desc_ru": "Параметр не используется.",
          "desc_en": "The parameter is not used.",
          "type": "Boolean"
        },
        {
          "name": "point1_x",
          "desc_ru": "Координата точки первого конца оси по x.",
          "desc_en": "Coordinate of the point of the first end of the axis in x.",
          "type": "Float"
        },
        {
          "name": "point1_y",
          "desc_ru": "Координата точки первого конца оси по y.",
          "desc_en": "Coordinate of the point of the first end of the axis in y.",
          "type": "Float"
        },
        {
          "name": "point1_z",
          "desc_ru": "Координата точки первого конца оси по z.",
          "desc_en": "Coordinate of the point of the first end of the axis in z.",
          "type": "Float"
        },
        {
          "name": "point2_x",
          "desc_ru": "Координата точки второго конца оси по x.",
          "desc_en": "Coordinate of the point of the second end of the axis in x.",
          "type": "Float"
        },
        {
          "name": "point2_y",
          "desc_ru": "Координата точки второго конца оси по y.",
          "desc_en": "Coordinate of the point of the second end of the axis in y.",
          "type": "Float"
        },
        {
          "name": "point2_z",
          "desc_ru": "Координата точки второго конца оси по z.",
          "desc_en": "Coordinate of the point of the second end of the axis in z.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "axis_delete",
      "level": "1",
      "desc_ru": "Удаление оси.",
      "desc_en": "Axis deleting.",
      "group": [
        "Оси"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип обьекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "axis",
          "desc_ru": "Тип оси.",
          "desc_en": "Axis type.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "axis_get",
      "level": "1",
      "desc_ru": "Запрос данных об оси в объекте.",
      "desc_en": "Requesting data about the axis in the object.",
      "group": [
        "Оси"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "axis",
          "desc_ru": "Тип оси.",
          "desc_en": "Axis type.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "defined",
          "desc_ru": "Определенность.",
          "desc_en": "Defined or not.",
          "type": "Boolean"
        },
        {
          "name": "inherited",
          "desc_ru": "Наследственность из другого процесса.",
          "desc_en": "Inherited from the other process or not.",
          "type": "Boolean"
        },
        {
          "name": "point1_x",
          "desc_ru": "Координата точки первого конца оси по x.",
          "desc_en": "Coordinate of the point of the first end of the axis in x.",
          "type": "Float"
        },
        {
          "name": "point1_y",
          "desc_ru": "Координата точки первого конца оси по y.",
          "desc_en": "Coordinate of the point of the first end of the axis in y.",
          "type": "Float"
        },
        {
          "name": "point1_z",
          "desc_ru": "Координата точки первого конца оси по z.",
          "desc_en": "Coordinate of the point of the first end of the axis in z.",
          "type": "Float"
        },
        {
          "name": "point2_x",
          "desc_ru": "Координата точки второго конца оси по x.",
          "desc_en": "Coordinate of the point of the second end of the axis in x.",
          "type": "Float"
        },
        {
          "name": "point2_y",
          "desc_ru": "Координата точки второго конца оси по y.",
          "desc_en": "Coordinate of the point of the second end of the axis in y.",
          "type": "Float"
        },
        {
          "name": "point2_z",
          "desc_ru": "Координата точки второго конца оси по z.",
          "desc_en": "Coordinate of the point of the second end of the axis in z.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "axis_inherit",
      "level": "1",
      "desc_ru": "Наследование оси в объекте.",
      "desc_en": "Axis inheritance in the object.",
      "group": [
        "Оси"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "axis",
          "desc_ru": "Тип оси.",
          "desc_en": "Axis type.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "axis_set",
      "level": "1",
      "desc_ru": "Задание оси в объекте.",
      "desc_en": "Specifying an axis in the object.",
      "group": [
        "Оси"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "axis",
          "desc_ru": "Тип оси.",
          "desc_en": "Axis type.",
          "type": "Integer"
        },
        {
          "name": "point1_x",
          "desc_ru": "Координата точки первого конца оси по x.",
          "desc_en": "Coordinate of the point of the first end of the axis in x.",
          "type": "Float"
        },
        {
          "name": "point1_y",
          "desc_ru": "Координата точки первого конца оси по y.",
          "desc_en": "Coordinate of the point of the first end of the axis in y.",
          "type": "Float"
        },
        {
          "name": "point1_z",
          "desc_ru": "Координата точки первого конца оси по z.",
          "desc_en": "Coordinate of the point of the first end of the axis in z.",
          "type": "Float"
        },
        {
          "name": "point2_x",
          "desc_ru": "Координата точки второго конца оси по x.",
          "desc_en": "Coordinate of the point of the second end of the axis in x.",
          "type": "Float"
        },
        {
          "name": "point2_y",
          "desc_ru": "Координата точки второго конца оси по y.",
          "desc_en": "Coordinate of the point of the second end of the axis in y.",
          "type": "Float"
        },
        {
          "name": "point2_z",
          "desc_ru": "Координата точки второго конца оси по z.",
          "desc_en": "Coordinate of the point of the second end of the axis in z.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "axis_set_calculated",
      "level": "1",
      "desc_ru": "Задание предварительно посчитанной оси в объекте.",
      "desc_en": "Specifying previously calculated axis in the object.",
      "group": [
        "Оси"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "defined",
          "desc_ru": "Определенность.",
          "desc_en": "Defined or not.",
          "type": "Boolean"
        },
        {
          "name": "inherited",
          "desc_ru": "Наследственность из другого процесса (?).",
          "desc_en": "Inherited from the other process or not (?).",
          "type": "Boolean"
        },
        {
          "name": "point1_x",
          "desc_ru": "Координата точки первого конца оси по x.",
          "desc_en": "Coordinate of the point of the first end of the axis in x.",
          "type": "Float"
        },
        {
          "name": "point1_y",
          "desc_ru": "Координата точки первого конца оси по y.",
          "desc_en": "Coordinate of the point of the first end of the axis in y.",
          "type": "Float"
        },
        {
          "name": "point1_z",
          "desc_ru": "Координата точки первого конца оси по z.",
          "desc_en": "Coordinate of the point of the first end of the axis in z.",
          "type": "Float"
        },
        {
          "name": "point2_x",
          "desc_ru": "Координата точки второго конца оси по x.",
          "desc_en": "Coordinate of the point of the second end of the axis in x.",
          "type": "Float"
        },
        {
          "name": "point2_y",
          "desc_ru": "Координата точки второго конца оси по y.",
          "desc_en": "Coordinate of the point of the second end of the axis in y.",
          "type": "Float"
        },
        {
          "name": "point2_z",
          "desc_ru": "Координата точки второго конца оси по z.",
          "desc_en": "Coordinate of the point of the second end of the axis in z.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "billet_count_get",
      "level": "1",
      "desc_ru": "Запрос данных о количестве слитков.",
      "desc_en": "Request for data on the billets count.",
      "group": [
        "Слиток"
      ],
      "input": [],
      "output": [
        {
          "name": "count",
          "desc_ru": "Количество слитков.",
          "desc_en": "Number of billets.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "billet_count_set",
      "level": "1",
      "desc_ru": "Задание количества слитков.",
      "desc_en": "Setting the billets count.",
      "group": [
        "Слиток"
      ],
      "input": [
        {
          "name": "count",
          "desc_ru": "Количество слитков.",
          "desc_en": "Number of billets.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "billet_get_current",
      "level": "1",
      "desc_ru": "Запрос данных о текущем слитке.",
      "desc_en": "Request data about the current billet.",
      "group": [
        "Слиток"
      ],
      "input": [],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id слитка.",
          "desc_en": "Billet id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "billet_parameter_get",
      "level": "1",
      "desc_ru": "Запрос данных о параметре слитка.",
      "desc_en": "Request for billet parameter data.",
      "group": [
        "Слиток",
        "Свойства"
      ],
      "input": [
        {
          "name": "billet",
          "desc_ru": "Номер слитка.",
          "desc_en": "Billet number.",
          "type": "Integer"
        },
        {
          "name": "param",
          "desc_ru": "Получаемый параметр.",
          "desc_en": "Parameter data.",
          "type": "Enum (BilletParam)"
        },
        {
          "name": "value",
          "desc_ru": "Числовое значение параметра.",
          "desc_en": "Value of the parameter.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Числовое значение параметра.",
          "desc_en": "Value of the parameter.",
          "type": "Float"
        },
        {
          "name": "is_null",
          "desc_ru": "Проверка правильности заполнения параметра.",
          "desc_en": "Is_null check.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units of measure.",
          "type": "String"
        }
      ]
    },
    {
      "name": "billet_parameter_set",
      "level": "1",
      "desc_ru": "Установка параметра слитка.",
      "desc_en": "Setting the billet parameter.",
      "group": [
        "Слиток",
        "Свойства"
      ],
      "input": [
        {
          "name": "billet",
          "desc_ru": "Номер слитка.",
          "desc_en": "Billet number.",
          "type": "Integer"
        },
        {
          "name": "param",
          "desc_ru": "Устанавливаемый параметр.",
          "desc_en": "Set parameter.",
          "type": "Enum (BilletParam)"
        },
        {
          "name": "value",
          "desc_ru": "Числовое значение параметра.",
          "desc_en": "Value of the parameter.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "billet_set_current",
      "level": "1",
      "desc_ru": "Установка текущего слитка.",
      "desc_en": "Setting the current billet.",
      "group": [
        "Слиток"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id текущего слитка.",
          "desc_en": "Current billet id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "blow_count_get",
      "level": "1",
      "desc_ru": "Показ количества ударов.",
      "desc_en": "Showing the amount of blows.",
      "group": [
        "Удары"
      ],
      "input": [],
      "output": [
        {
          "name": "count",
          "desc_ru": "Количество ударов.",
          "desc_en": "Amount of blows.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "blow_count_set",
      "level": "1",
      "desc_ru": "Задание количества ударов.",
      "desc_en": "Setting the amount of blows.",
      "group": [
        "Удары"
      ],
      "input": [
        {
          "name": "count",
          "desc_ru": "Количество ударов.",
          "desc_en": "Amount of blows.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "blow_get_current",
      "level": "1",
      "desc_ru": "Показ текущего удара.",
      "desc_en": "Display of the current blow.",
      "group": [
        "Удары"
      ],
      "input": [],
      "output": [
        {
          "name": "id",
          "desc_ru": "Номер текущего удара.",
          "desc_en": "Current blow id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "blow_parameter_get",
      "level": "1",
      "desc_ru": "Запрос данных о параметре удара.",
      "desc_en": "Blow parameter data request.",
      "group": [
        "Удары",
        "Свойства"
      ],
      "input": [
        {
          "name": "blow",
          "desc_ru": "Номер удара.",
          "desc_en": "Blow number.",
          "type": "Integer"
        },
        {
          "name": "param",
          "desc_ru": "Запрашиваемый параметр.",
          "desc_en": "Requested parameter.",
          "type": "Enum (BlowParam)"
        },
        {
          "name": "stop_condition",
          "desc_ru": "Условие остановки.",
          "desc_en": "Stop condition.",
          "type": "Integer"
        },
        {
          "name": "value",
          "desc_ru": "Значение.",
          "desc_en": "Value.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Числовое значение параметра.",
          "desc_en": "Value of the parameter.",
          "type": "Float"
        },
        {
          "name": "is_null",
          "desc_ru": "Проверка на отсутствие.",
          "desc_en": "Checking for availability.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units of measure.",
          "type": "String"
        }
      ]
    },
    {
      "name": "blow_parameter_set",
      "level": "1",
      "desc_ru": "Установка параметра удара.",
      "desc_en": "Blow parameter setting.",
      "group": [
        "Удары",
        "Свойства"
      ],
      "input": [
        {
          "name": "blow",
          "desc_ru": "Номер удара.",
          "desc_en": "Blow number.",
          "type": "Integer"
        },
        {
          "name": "param",
          "desc_ru": "Устанавливаемый параметр.",
          "desc_en": "Set parameter.",
          "type": "Enum (BlowParam)"
        },
        {
          "name": "stop_condition",
          "desc_ru": "Условие остановки.",
          "desc_en": "Stop condition.",
          "type": "Integer"
        },
        {
          "name": "value",
          "desc_ru": "Числовое значение параметра.",
          "desc_en": "Value of the parameter.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "blow_set_current",
      "level": "1",
      "desc_ru": "Установка удара текущим.",
      "desc_en": "Setting blow current.",
      "group": [
        "Удары"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Номер удара.",
          "desc_en": "Current blow id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_create",
      "level": "1",
      "desc_ru": "Создание граничного условия.",
      "desc_en": "Creating a boundary condition.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id создаваемого граничного условия.",
          "desc_en": "Id of the boundary condition being created.",
          "type": "Integer"
        },
        {
          "name": "type",
          "desc_ru": "Тип создаваемого граничного условия.",
          "desc_en": "Type of boundary condition being created.",
          "type": "Enum (BCond)"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип обьекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id обьекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id создаваемого граничного условия.",
          "desc_en": "Id of the boundary condition being created.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "bound_cond_delete",
      "level": "1",
      "desc_ru": "Удаление граничного условия.",
      "desc_en": "Removal of the boundary condition.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id удаляемого граничного условия.",
          "desc_en": "Id of the boundary condition being deleted.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_set_body",
      "level": "1",
      "desc_ru": "Задание граничного условия в виде наследуюмой формы.",
      "desc_en": "Setting the boundary condition in the form of an inherited object.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id ограничаемого тела.",
          "desc_en": "Body id.",
          "type": "Integer"
        },
        {
          "name": "source_body_type",
          "desc_ru": "Тип наследуемой формы.",
          "desc_en": "Type of inherited form.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "source_body_id",
          "desc_ru": "Id наследуемой формы.",
          "desc_en": "Id of the inherited form.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_set_brick",
      "level": "1",
      "desc_ru": "Задание граничного условия в виде параллелепипеда.",
      "desc_en": "Setting the parallelepiped boundary condition.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id ограничаемого тела.",
          "desc_en": "Body id.",
          "type": "Integer"
        },
        {
          "name": "size1_x",
          "desc_ru": "Первая координата размера параллелепипеда по оси x.",
          "desc_en": "The first coordinate of the parallelepiped size in x axis.",
          "type": "Float"
        },
        {
          "name": "size1_y",
          "desc_ru": "Первая координата размера параллелепипеда по оси y.",
          "desc_en": "The first coordinate of the parallelepiped size in y axis.",
          "type": "Float"
        },
        {
          "name": "size1_z",
          "desc_ru": "Первая координата размера параллелепипеда по оси z.",
          "desc_en": "The first coordinate of the parallelepiped size in z axis.",
          "type": "Float"
        },
        {
          "name": "size2_x",
          "desc_ru": "Вторая координата размера параллелепипеда по оси x.",
          "desc_en": "The second coordinate of the parallelepiped size in x axis.",
          "type": "Float"
        },
        {
          "name": "size2_y",
          "desc_ru": "Вторая координата размера параллелепипеда по оси y.",
          "desc_en": "The second coordinate of the parallelepiped size in y axis.",
          "type": "Float"
        },
        {
          "name": "size2_z",
          "desc_ru": "Вторая координата размера параллелепипеда по оси z.",
          "desc_en": "The second coordinate of the parallelepiped size in z axis.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_set_circle",
      "level": "1",
      "desc_ru": "Задание граничного  условия в виде круга/кольца.",
      "desc_en": "Setting the circle/rings boundary condition.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id ограничаемого тела.",
          "desc_en": "Body id.",
          "type": "Integer"
        },
        {
          "name": "r",
          "desc_ru": "Внешний радиус круга/кольца.",
          "desc_en": "Outer radius of the circle/ring.",
          "type": "Float"
        },
        {
          "name": "inner_r",
          "desc_ru": "Внутренний радиус круга/кольца.",
          "desc_en": "Inner radius of the circle/ring.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_set_cone",
      "level": "1",
      "desc_ru": "Задание граничного  условия в виде конуса.",
      "desc_en": "Setting the cone boundary condition.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id ограничаемого тела.",
          "desc_en": "Body id.",
          "type": "Integer"
        },
        {
          "name": "angle",
          "desc_ru": "Угол конуса.",
          "desc_en": "Cone angle.",
          "type": "Float"
        },
        {
          "name": "d",
          "desc_ru": "Диаметр основания конуса.",
          "desc_en": "Diameter of the cone base.",
          "type": "Float"
        },
        {
          "name": "h",
          "desc_ru": "Высота конуса.",
          "desc_en": "Cone height.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_set_cylinder",
      "level": "1",
      "desc_ru": "Задание граничного  условия в виде цилиндра.",
      "desc_en": "Setting a cylinder boundary condition.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id ограничаемого тела.",
          "desc_en": "Body id.",
          "type": "Integer"
        },
        {
          "name": "r",
          "desc_ru": "Внешний радиус цилиндра.",
          "desc_en": "Outer radius of the cylinder.",
          "type": "Float"
        },
        {
          "name": "inner_r",
          "desc_ru": "Внутренний радиус цилиндр.",
          "desc_en": "Inner radius of the cylinder.",
          "type": "Float"
        },
        {
          "name": "h1",
          "desc_ru": "Первая координата высоты цилиндра.",
          "desc_en": "The first coordinate of the cylinder height.",
          "type": "Float"
        },
        {
          "name": "h2",
          "desc_ru": "Вторая координата высоты цилиндра.",
          "desc_en": "The second coordinate of the cylinder height.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_set_rect",
      "level": "1",
      "desc_ru": "Задание граничного условия в виде прямоугольника.",
      "desc_en": "Setting a rectangle boundary condition.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id ограничаемого тела.",
          "desc_en": "Body id.",
          "type": "Integer"
        },
        {
          "name": "size1_x",
          "desc_ru": "Первая координата размера прямоугольника по оси x.",
          "desc_en": "The first coordinate of the rectangle size in x axis.",
          "type": "Float"
        },
        {
          "name": "size1_z",
          "desc_ru": "Первая координата размера прямоугольника по оси z.",
          "desc_en": "The first coordinate of the rectangle size in z axis.",
          "type": "Float"
        },
        {
          "name": "size2_x",
          "desc_ru": "Вторая координата размера прямоугольника по оси x.",
          "desc_en": "The second coordinate of the rectangle size in x axis.",
          "type": "Float"
        },
        {
          "name": "size2_z",
          "desc_ru": "Вторая координата размера прямоугольника по оси z.",
          "desc_en": "The second coordinate of the rectangle size in z axis.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_set_sphere",
      "level": "1",
      "desc_ru": "Задание граничного  условия в виде сферы.",
      "desc_en": "Specifying a sphere boundary condition.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id ограничаемого тела.",
          "desc_en": "Body id.",
          "type": "Integer"
        },
        {
          "name": "r",
          "desc_ru": "Внешний радиус сферы.",
          "desc_en": "The outer radius of the sphere.",
          "type": "Float"
        },
        {
          "name": "inner_r",
          "desc_ru": "Внутренний радиус сферы.",
          "desc_en": "The inner radius of the sphere.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_set_surface_by_color",
      "level": "1",
      "desc_ru": "Задание граничного условия в виде поверхности, определяемой набором значений RGB.",
      "desc_en": "Specifying the boundary condition as a plain surface defined by a set of RGB values.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id ограничаемого тела.",
          "desc_en": "Body id.",
          "type": "Integer"
        },
        {
          "name": "color_R",
          "desc_ru": "Значение R.",
          "desc_en": "R value.",
          "type": "Integer"
        },
        {
          "name": "color_G",
          "desc_ru": "Значение G.",
          "desc_en": "G value.",
          "type": "Integer"
        },
        {
          "name": "color_B",
          "desc_ru": "Значение B.",
          "desc_en": "B value.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_type",
      "level": "1",
      "desc_ru": "Запрос типа граничного условия.",
      "desc_en": "Boundary condition type query.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id ограничаемого тела.",
          "desc_en": "Body id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "type",
          "desc_ru": "Тип граничного условия.",
          "desc_en": "Type of boundary condition.",
          "type": "Enum (BCond)"
        }
      ]
    },
    {
      "name": "calculate_tools",
      "level": "1",
      "desc_ru": "Расчет инструментов.",
      "desc_en": "Tools simulation.",
      "group": [
        "Расчет"
      ],
      "input": [
        {
          "name": "objects",
          "desc_ru": "Массив расчитываемых инструментов.",
          "desc_en": "Array of calculated tools.",
          "type": "Enum (ObjectId) array"
        }
      ],
      "output": [
        {
          "name": "status",
          "desc_ru": "Статус расчета инструментов.",
          "desc_en": "Status of calculation of instruments.",
          "type": "Enum (StatusCode)"
        }
      ]
    },
    {
      "name": "calculate_tools_coupled",
      "level": "1",
      "desc_ru": "Совместный расчет инструментов.",
      "desc_en": "Coupled tools simulation.",
      "group": [
        "Расчет"
      ],
      "input": [],
      "output": [
        {
          "name": "status",
          "desc_ru": "Статус расчета инструментов.",
          "desc_en": "Status of instruments calculation.",
          "type": "Enum (StatusCode)"
        }
      ]
    },
    {
      "name": "chart_get",
      "level": "1",
      "desc_ru": "Запрос данных о графике.",
      "desc_en": "Request for data about chart.",
      "group": [
        "Результаты расчета"
      ],
      "input": [
        {
          "name": "arg_object_type",
          "desc_ru": "Тип объекта аргумента.",
          "desc_en": "Argument object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "arg_object_id",
          "desc_ru": "Идентификационный номер объекта аргумента.",
          "desc_en": "Arument object id.",
          "type": "Integer"
        },
        {
          "name": "arg_subobject",
          "desc_ru": "Подобъект аргумента.",
          "desc_en": "Argument subobject.",
          "type": "Integer"
        },
        {
          "name": "arg_id",
          "desc_ru": "Идентификационный номер аргумента.",
          "desc_en": "Argument id.",
          "type": "Integer"
        },
        {
          "name": "func_object_type",
          "desc_ru": "Тип объекта функции.",
          "desc_en": "Function object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "func_object_id",
          "desc_ru": "Идентификационный номер объекта функции.",
          "desc_en": "Function object id.",
          "type": "Integer"
        },
        {
          "name": "func_subobject",
          "desc_ru": "Подобъект функции.",
          "desc_en": "Function subobject.",
          "type": "Integer"
        },
        {
          "name": "func_id",
          "desc_ru": "Идентификационный номер функции.",
          "desc_en": "Function id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "arg_value",
          "desc_ru": "Значение аргумента.",
          "desc_en": "Argument value.",
          "type": "Float array"
        },
        {
          "name": "arg_has_value",
          "desc_ru": "Массив результатов проверки наличия значений аргумента.",
          "desc_en": "Collection of results of checking argument values.",
          "type": "Boolean array"
        },
        {
          "name": "func_value",
          "desc_ru": "Значение функции.",
          "desc_en": "Function value.",
          "type": "Float array"
        },
        {
          "name": "func_has_value",
          "desc_ru": "Массив результатов проверки наличия значений аргумента.",
          "desc_en": "Collection of results of checking function values.",
          "type": "Boolean array"
        },
        {
          "name": "func_units",
          "desc_ru": "Единицы измерения функции.",
          "desc_en": "Function units.",
          "type": "String"
        },
        {
          "name": "arg_units",
          "desc_ru": "Единицы измерения аргумента.",
          "desc_en": "Argument units.",
          "type": "String"
        },
        {
          "name": "arg_name",
          "desc_ru": "Название аргумента.",
          "desc_en": "Argument name.",
          "type": "String"
        },
        {
          "name": "func_name",
          "desc_ru": "Название функции.",
          "desc_en": "Function name.",
          "type": "String"
        }
      ]
    },
    {
      "name": "chart_value_get",
      "level": "1",
      "desc_ru": "Запрос на получение значений графика.",
      "desc_en": "Request for data about chart value.",
      "group": [
        "Результаты расчета"
      ],
      "input": [
        {
          "name": "arg_object_type",
          "desc_ru": "Тип объекта аргумента.",
          "desc_en": "Argument object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "arg_object_id",
          "desc_ru": "Идентификационный номер объекта аргумента.",
          "desc_en": "Arument object id.",
          "type": "Integer"
        },
        {
          "name": "arg_subobject",
          "desc_ru": "Подобъект аргумента.",
          "desc_en": "Argument subobject.",
          "type": "Integer"
        },
        {
          "name": "arg_id",
          "desc_ru": "Идентификационный номер аргумента.",
          "desc_en": "Argument id.",
          "type": "Integer"
        },
        {
          "name": "func_object_type",
          "desc_ru": "Тип объекта функции.",
          "desc_en": "Function object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "func_object_id",
          "desc_ru": "Идентификационный номер объекта функции.",
          "desc_en": "Function object id.",
          "type": "Integer"
        },
        {
          "name": "func_subobject",
          "desc_ru": "Подобъект функции.",
          "desc_en": "Function subobject.",
          "type": "Integer"
        },
        {
          "name": "func_id",
          "desc_ru": "Идентификационный номер функции.",
          "desc_en": "Function id.",
          "type": "Integer"
        },
        {
          "name": "record",
          "desc_ru": "Номер шага рачета.",
          "desc_en": "Step number.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "arg_value",
          "desc_ru": "Значение аргумента.",
          "desc_en": "Argument value.",
          "type": "Float"
        },
        {
          "name": "func_value",
          "desc_ru": "Значение функции.",
          "desc_en": "Function value.",
          "type": "Float"
        },
        {
          "name": "arg_has_value",
          "desc_ru": "Проверка наличия значения аргумента.",
          "desc_en": "Checking argument value exists.",
          "type": "Boolean"
        },
        {
          "name": "func_has_value",
          "desc_ru": "Проверка наличия значения функции.",
          "desc_en": "Checking function value exists.",
          "type": "Boolean"
        },
        {
          "name": "record",
          "desc_ru": "Номер шаг расчета.",
          "desc_en": "Step number.",
          "type": "Float"
        },
        {
          "name": "func_units",
          "desc_ru": "Единицы измерения функции.",
          "desc_en": "Function units.",
          "type": "String"
        },
        {
          "name": "arg_units",
          "desc_ru": "Единицы измерения аргумента.",
          "desc_en": "Argument units.",
          "type": "String"
        },
        {
          "name": "arg_name",
          "desc_ru": "Название аргумента.",
          "desc_en": "Argument name.",
          "type": "String"
        },
        {
          "name": "func_name",
          "desc_ru": "Название функции.",
          "desc_en": "Function name.",
          "type": "String"
        }
      ]
    },
    {
      "name": "client_server_get",
      "level": "1",
      "desc_ru": "Получение информации о клиент-серверном соединении.",
      "desc_en": "Getting client-server connection data.",
      "group": [
        "QForm"
      ],
      "input": [],
      "output": [
        {
          "name": "url",
          "desc_ru": "Адрес автономного сервера.",
          "desc_en": "Self-hosted server endpoint.",
          "type": "String"
        }
      ]
    },
    {
      "name": "client_server_set",
      "level": "1",
      "desc_ru": "Установка клиент-серверного соединения.",
      "desc_en": "Setting client-server connection.",
      "group": [
        "QForm"
      ],
      "input": [
        {
          "name": "url",
          "desc_ru": "Адрес автономного сервера.",
          "desc_en": "Self-hosted server endpoint.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "client_server_test_connection",
      "level": "1",
      "desc_ru": "Проверка клиент-серверного соединения.",
      "desc_en": "Testing client-server connection.",
      "group": [
        "QForm"
      ],
      "input": [
        {
          "name": "url",
          "desc_ru": "Адрес автономного сервера.",
          "desc_en": "Self-hosted server endpoint.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "successful",
          "desc_ru": "Соединение успешно.",
          "desc_en": "Connection successful.",
          "type": "Boolean"
        },
        {
          "name": "msg",
          "desc_ru": "Сообщение.",
          "desc_en": "Message.",
          "type": "String"
        }
      ]
    },
    {
      "name": "collection_clear",
      "level": "1",
      "desc_ru": "Очистка массива.",
      "desc_en": "Collection clear.",
      "group": [
        "Списки"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "collection",
          "desc_ru": "Массив.",
          "desc_en": "Collection.",
          "type": "Enum (CollectionType) array"
        }
      ],
      "output": []
    },
    {
      "name": "collection_items",
      "level": "1",
      "desc_ru": "Элементы массива.",
      "desc_en": "Collection items.",
      "group": [
        "Списки"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "collection",
          "desc_ru": "Массив.",
          "desc_en": "Collection.",
          "type": "Enum (CollectionType) array"
        }
      ],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Объекты массива.",
          "desc_en": "Collection objects.",
          "type": "Enum (ObjectId) array"
        }
      ]
    },
    {
      "name": "contact_area",
      "level": "2",
      "desc_ru": "Расчет площади контакта.",
      "desc_en": "Contact area calculation.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "contact_area",
          "desc_ru": "Площадь контакта объекта.",
          "desc_en": "Object contact area.",
          "type": "Float"
        },
        {
          "name": "total_area",
          "desc_ru": "Суммарная площадь поверхности объекта.",
          "desc_en": "Total surface area of the object.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "contact_field",
      "level": "2",
      "desc_ru": "Поле контакта.",
      "desc_en": "Contact field.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "in_elements",
          "desc_ru": "Расположение поля в элементах.",
          "desc_en": "Element location.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "values",
          "desc_ru": "Массив значений.",
          "desc_en": "Values.",
          "type": "Float array"
        },
        {
          "name": "has_data",
          "desc_ru": "Массив проверок наличия данных.",
          "desc_en": "Collection of data checks.",
          "type": "Boolean array"
        },
        {
          "name": "only_on_surface",
          "desc_ru": "Поле только на поверхности.",
          "desc_en": "Field only on surface.",
          "type": "Boolean"
        },
        {
          "name": "in_elements",
          "desc_ru": "Поле в элементах.",
          "desc_en": "Field in elements.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "db_fetch_items",
      "level": "1",
      "desc_ru": "Получение списка элементов базы данных.",
      "desc_en": "Getting a list of the database elements.",
      "group": [
        "База данных"
      ],
      "input": [
        {
          "name": "db_name",
          "desc_ru": "Название базы данных.",
          "desc_en": "Name of the database.",
          "type": "String"
        },
        {
          "name": "db_standart",
          "desc_ru": "Название стандартизации.",
          "desc_en": "Standart name.",
          "type": "Enum (DbStandart)"
        }
      ],
      "output": [
        {
          "name": "name",
          "desc_ru": "Название списка элементов.",
          "desc_en": "Name of the list of elements.",
          "type": "String"
        },
        {
          "name": "db_path",
          "desc_ru": "Расположение базы данных.",
          "desc_en": "Database path.",
          "type": "String"
        },
        {
          "name": "childs",
          "desc_ru": "Массив элементов базы данных.",
          "desc_en": "Array of database elements.",
          "type": "Enum (DbItem) array"
        }
      ]
    },
    {
      "name": "db_object_create",
      "level": "1",
      "desc_ru": "Создание объекта в базе данных.",
      "desc_en": "Creating an object in the database.",
      "group": [
        "База данных"
      ],
      "input": [
        {
          "name": "path",
          "desc_ru": "Расположение создаваемого обьекта.",
          "desc_en": "Path of the object.",
          "type": "String"
        },
        {
          "name": "drive_type",
          "desc_ru": "Тип создаваемого обьекта.",
          "desc_en": "Type of the object.",
          "type": "Enum (DriveType)"
        }
      ],
      "output": []
    },
    {
      "name": "db_object_export",
      "level": "1",
      "desc_ru": "Экспорт объекта из базы данных.",
      "desc_en": "Export object from the database.",
      "group": [
        "База данных",
        "Экспорт"
      ],
      "input": [
        {
          "name": "source_path",
          "desc_ru": "Расположение экспортируемого обьекта.",
          "desc_en": "Path of the exported object.",
          "type": "String"
        },
        {
          "name": "target_path",
          "desc_ru": "Каталог для сохранения.",
          "desc_en": "Directory to save.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "db_object_import",
      "level": "1",
      "desc_ru": "Импорт объекта в базу данных.",
      "desc_en": "Importing an object into the database.",
      "group": [
        "База данных",
        "Экспорт"
      ],
      "input": [
        {
          "name": "source_path",
          "desc_ru": "Расположение импортируего обьекта.",
          "desc_en": "Path of the imported object.",
          "type": "String"
        },
        {
          "name": "target_path",
          "desc_ru": "Каталог для сохранения.",
          "desc_en": "Directory to save.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "db_object_save",
      "level": "1",
      "desc_ru": "Сохранение объекта в базе данных.",
      "desc_en": "Saving an object in the database.",
      "group": [
        "База данных"
      ],
      "input": [
        {
          "name": "source_path",
          "desc_ru": "Path of the object being saved.",
          "desc_en": "Path of the object being saved.",
          "type": "String"
        },
        {
          "name": "target_path",
          "desc_ru": "Каталог для сохранения.",
          "desc_en": "Directory to save.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "db_objects_copy_to_project_file",
      "level": "1",
      "desc_ru": "Копирование объектов базы данных в файл проекта.",
      "desc_en": "Copying the database objects to the project file.",
      "group": [
        "База данных",
        "Проект"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "db_objects_save_all",
      "level": "1",
      "desc_ru": "Сохранение всех объектов базы данных.",
      "desc_en": "Saving all database objects.",
      "group": [
        "База данных",
        "Проект"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "db_property_get",
      "level": "1",
      "desc_ru": "Получение информации о свойстве из базы данных.",
      "desc_en": "Getting information about a property from database.",
      "group": [
        "База данных",
        "Свойства"
      ],
      "input": [
        {
          "name": "db_path",
          "desc_ru": "Расположение базы данных.",
          "desc_en": "Database path.",
          "type": "String"
        },
        {
          "name": "prop_path",
          "desc_ru": "Расположение свойств базы данных.",
          "desc_en": "Database properties path.",
          "type": "String"
        },
        {
          "name": "value",
          "desc_ru": "Значение получаемого свойства.",
          "desc_en": "Value of the property.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "property_type",
          "desc_ru": "Тип свойства.",
          "desc_en": "Property Type.",
          "type": "Enum (PropertyType)"
        },
        {
          "name": "value",
          "desc_ru": "Значение получаемого свойства.",
          "desc_en": "Value of the property.",
          "type": "String"
        },
        {
          "name": "units",
          "desc_ru": "Еденицы измерения.",
          "desc_en": "Units of measure.",
          "type": "String"
        }
      ]
    },
    {
      "name": "db_property_set",
      "level": "1",
      "desc_ru": "Установление свойства базы данных.",
      "desc_en": "Setting the database property.",
      "group": [
        "База данных",
        "Свойства"
      ],
      "input": [
        {
          "name": "db_path",
          "desc_ru": "Расположение базы данных.",
          "desc_en": "Database path.",
          "type": "String"
        },
        {
          "name": "prop_path",
          "desc_ru": "Расположение свойства базы данных.",
          "desc_en": "Database property path.",
          "type": "String"
        },
        {
          "name": "value",
          "desc_ru": "Числовое значение устанавливаемого свойства.",
          "desc_en": "Value of the property.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "db_property_table_get",
      "level": "1",
      "desc_ru": "Получение данных свойств из базы данных с помощью таблиц.",
      "desc_en": "Getting property data from a database using tables.",
      "group": [
        "База данных",
        "Свойства"
      ],
      "input": [
        {
          "name": "db_path",
          "desc_ru": "Путь к базе данных.",
          "desc_en": "Database path.",
          "type": "String"
        },
        {
          "name": "prop_path",
          "desc_ru": "Путь  к свойству.",
          "desc_en": "Property path.",
          "type": "String"
        },
        {
          "name": "value",
          "desc_ru": "Значение.",
          "desc_en": "Value.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "db_path",
          "desc_ru": "Путь к базе данных.",
          "desc_en": "Database path.",
          "type": "String"
        },
        {
          "name": "prop_path",
          "desc_ru": "Путь  к свойству.",
          "desc_en": "Property path.",
          "type": "String"
        },
        {
          "name": "row_arg_values",
          "desc_ru": "Зачения заголовков строк.",
          "desc_en": "Row headers values.",
          "type": "Float array"
        },
        {
          "name": "column_arg_values",
          "desc_ru": "Значения заголовков столбцов.",
          "desc_en": "Column headers values.",
          "type": "Float array"
        },
        {
          "name": "layer_arg_values",
          "desc_ru": "Значения заголовков вкладок.",
          "desc_en": "Layer headers values.",
          "type": "Float array"
        },
        {
          "name": "row_arg",
          "desc_ru": "Тип данных в строках.",
          "desc_en": "Data type in rows.",
          "type": "Enum (DbTableArg)"
        },
        {
          "name": "column_arg",
          "desc_ru": "Тип данных в столбцах.",
          "desc_en": "Data type in columns.",
          "type": "Enum (DbTableArg)"
        },
        {
          "name": "layer_arg",
          "desc_ru": "Тип данных в вкладке.",
          "desc_en": "Data type in layers.",
          "type": "Enum (DbTableArg)"
        },
        {
          "name": "values",
          "desc_ru": "Значения в таблице.",
          "desc_en": "Values in table.",
          "type": "Float array"
        },
        {
          "name": "units",
          "desc_ru": "Размерность строк, вкладок, значений.",
          "desc_en": "Units of columns, rows, layers, values.",
          "type": "String"
        }
      ]
    },
    {
      "name": "db_property_table_set",
      "level": "1",
      "desc_ru": "Установление свойства таблицы в базе данных.",
      "desc_en": "Setting a table property in the database.",
      "group": [
        "База данных",
        "Свойства"
      ],
      "input": [
        {
          "name": "db_path",
          "desc_ru": "Путь к базе данных.",
          "desc_en": "Database path.",
          "type": "String"
        },
        {
          "name": "prop_path",
          "desc_ru": "Путь к свойству.",
          "desc_en": "Property path.",
          "type": "String"
        },
        {
          "name": "row_arg_values",
          "desc_ru": "Зачения заголовков строк.",
          "desc_en": "Row headers values.",
          "type": "Float array"
        },
        {
          "name": "column_arg_values",
          "desc_ru": "Значения заголовков столбцов.",
          "desc_en": "Column headers values.",
          "type": "Float array"
        },
        {
          "name": "layer_arg_values",
          "desc_ru": "Значения заголовков вкладок.",
          "desc_en": "Layer headers values.",
          "type": "Float array"
        },
        {
          "name": "row_arg",
          "desc_ru": "Тип данных в строках.",
          "desc_en": "Data type in rows.",
          "type": "Enum (DbTableArg)"
        },
        {
          "name": "column_arg",
          "desc_ru": "Тип данных в столбцах.",
          "desc_en": "Data type in columns.",
          "type": "Enum (DbTableArg)"
        },
        {
          "name": "layer_arg",
          "desc_ru": "Тип данных в вкладке.",
          "desc_en": "Data type in layers.",
          "type": "Enum (DbTableArg)"
        },
        {
          "name": "values",
          "desc_ru": "Значения в таблице.",
          "desc_en": "Values in table.",
          "type": "Float array"
        },
        {
          "name": "units",
          "desc_ru": "Размерность строк, вкладок, значений.",
          "desc_en": "Units of columns, rows, layers, values.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "do_batch",
      "level": "1",
      "desc_ru": "Обработка задачи в пакетном режиме.",
      "desc_en": "Processing a task in batch mode.",
      "group": [
        "QForm"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к пакетному файлу.",
          "desc_en": "Path to the batch file.",
          "type": "String"
        },
        {
          "name": "log_file",
          "desc_ru": "Путь к файлу журнала.",
          "desc_en": "Path to the log file.",
          "type": "String"
        },
        {
          "name": "log_format",
          "desc_ru": "Формат файла журнала.",
          "desc_en": "The log file format.",
          "type": "Enum (LogFormat)"
        },
        {
          "name": "log_input",
          "desc_ru": "Ввод записей в файл журнала активен.",
          "desc_en": "Log file entry is active.",
          "type": "Boolean"
        },
        {
          "name": "log_output",
          "desc_ru": "Вывод записей из файла журнала активен.",
          "desc_en": "Output of records from the log file is active.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "domain_create",
      "level": "1",
      "desc_ru": "Cоздание граничного условия.",
      "desc_en": "Domain creation.",
      "group": [
        "Области"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        },
        {
          "name": "type",
          "desc_ru": "Тип граничного условия.",
          "desc_en": "Domain type.",
          "type": "Enum (Domain)"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "domain_delete",
      "level": "1",
      "desc_ru": "Удаление граничного условия.",
      "desc_en": "Deleting a domain.",
      "group": [
        "Области"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "domain_set_body",
      "level": "1",
      "desc_ru": "Установка граничного условия в виде наследуемой формы.",
      "desc_en": "Setting the domain in the form of an inherited object.",
      "group": [
        "Области"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        },
        {
          "name": "source_body_type",
          "desc_ru": "Тип наследуемой формы.",
          "desc_en": "Inherited object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "source_body_id",
          "desc_ru": "Id наследуемого объекта.",
          "desc_en": "Inherited object id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "domain_set_brick",
      "level": "1",
      "desc_ru": "Создание граничного условия в виде параллелепипеда.",
      "desc_en": "Setting the parallelepiped domain.",
      "group": [
        "Области"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        },
        {
          "name": "size1_x",
          "desc_ru": "Первая координата размера параллелепипеда по оси x.",
          "desc_en": "The first coordinate of the parallelepiped size in x axis.",
          "type": "Float"
        },
        {
          "name": "size1_y",
          "desc_ru": "Первая координата размера параллелепипеда по оси y.",
          "desc_en": "The first coordinate of the parallelepiped size in y axis.",
          "type": "Float"
        },
        {
          "name": "size1_z",
          "desc_ru": "Первая координата размера параллелепипеда по оси z.",
          "desc_en": "The first coordinate of the parallelepiped size in z axis.",
          "type": "Float"
        },
        {
          "name": "size2_x",
          "desc_ru": "Вторая координата размера параллелепипеда по оси x.",
          "desc_en": "The second coordinate of the parallelepiped size in x axis.",
          "type": "Float"
        },
        {
          "name": "size2_y",
          "desc_ru": "Вторая координата размера параллелепипеда по оси y.",
          "desc_en": "The second coordinate of the parallelepiped size in y axis.",
          "type": "Float"
        },
        {
          "name": "size2_z",
          "desc_ru": "Вторая координата размера параллелепипеда по оси z.",
          "desc_en": "The second coordinate of the parallelepiped size in z axis.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "domain_set_circle",
      "level": "1",
      "desc_ru": "Создание граничного условия в виде кольца.",
      "desc_en": "Creating a ring domain.",
      "group": [
        "Области"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        },
        {
          "name": "r",
          "desc_ru": "Внешний радиус кольца.",
          "desc_en": "Outer radius of the circle.",
          "type": "Float"
        },
        {
          "name": "inner_r",
          "desc_ru": "Внутренний радиус кольца.",
          "desc_en": "Inner radius of the circle.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "domain_set_cone",
      "level": "1",
      "desc_ru": "Cоздание граничного условия в виде конуса.",
      "desc_en": "Creating a cone domain.",
      "group": [
        "Области"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        },
        {
          "name": "angle",
          "desc_ru": "Угол разбрызгивания.",
          "desc_en": "Spray angle.",
          "type": "Float"
        },
        {
          "name": "d",
          "desc_ru": "Диаметр сопла.",
          "desc_en": "Nozzle diameter.",
          "type": "Float"
        },
        {
          "name": "h",
          "desc_ru": "Высота конуса.",
          "desc_en": "Cone height.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "domain_set_cylinder",
      "level": "1",
      "desc_ru": "Cоздание граничного условия в виде цилиндра.",
      "desc_en": "Creating a cylinder domain.",
      "group": [
        "Области"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        },
        {
          "name": "r",
          "desc_ru": "Внешний радиус цилиндра.",
          "desc_en": "Outer radius of the cylinder.",
          "type": "Float"
        },
        {
          "name": "inner_r",
          "desc_ru": "Внутренний радиус цилиндра.",
          "desc_en": "Inner radius of the cylinder.",
          "type": "Float"
        },
        {
          "name": "h1",
          "desc_ru": "Первая координата высоты цилиндра.",
          "desc_en": "The first coordinate of the cylinder height.",
          "type": "Float"
        },
        {
          "name": "h2",
          "desc_ru": "Вторая координата высоты цилиндра.",
          "desc_en": "The second coordinate of the cylinder height.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "domain_set_rect",
      "level": "1",
      "desc_ru": "Cоздание граничного условия в виде прямоугольника.",
      "desc_en": "Creating a rectangle domain.",
      "group": [
        "Области"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        },
        {
          "name": "size1_x",
          "desc_ru": "Первая координата размера прямоугольника по оси x.",
          "desc_en": "The first coordinate of the rectangle size in x axis.",
          "type": "Float"
        },
        {
          "name": "size1_z",
          "desc_ru": "Первая координата размера прямоугольника по оси z.",
          "desc_en": "The first coordinate of the rectangle size in z axis.",
          "type": "Float"
        },
        {
          "name": "size2_x",
          "desc_ru": "Вторая координата размера прямоугольника по оси x.",
          "desc_en": "The second coordinate of the rectangle size in x axis.",
          "type": "Float"
        },
        {
          "name": "size2_z",
          "desc_ru": "Вторая координата размера прямоугольника по оси z.",
          "desc_en": "The second coordinate of the rectangle size in z axis.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "domain_set_sphere",
      "level": "1",
      "desc_ru": "Создание граничного условия в виде сферы.",
      "desc_en": "Creating a sphere domain.",
      "group": [
        "Области"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        },
        {
          "name": "r",
          "desc_ru": "Внешний радиус сферы.",
          "desc_en": "Outer radius of the sphere.",
          "type": "Float"
        },
        {
          "name": "inner_r",
          "desc_ru": "Внутренний.",
          "desc_en": "Inner radius of the sphere.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "domain_set_surface_by_color",
      "level": "1",
      "desc_ru": "Создание граничного условия по поверхности, определяемой набором значений RGB.",
      "desc_en": "Creating a domain on a surface defined by a set of RGB values.",
      "group": [
        "Области"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        },
        {
          "name": "color_R",
          "desc_ru": "Интенсивность красной составляющей цвета.",
          "desc_en": "The intensity of the color red component.",
          "type": "Integer"
        },
        {
          "name": "color_G",
          "desc_ru": "Интенсивность зеленой составляющей цвета.",
          "desc_en": "The intensity of the color green component.",
          "type": "Integer"
        },
        {
          "name": "color_B",
          "desc_ru": "Интенсивность синей составляющей цвета.",
          "desc_en": "The intensity of the color blue component.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "domain_type",
      "level": "1",
      "desc_ru": "Запрос данных о типе граничного условия.",
      "desc_en": "Request for domain type data.",
      "group": [
        "Области"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Domain id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "type",
          "desc_ru": "Тип граничного условия.",
          "desc_en": "Domain type.",
          "type": "Enum (Domain)"
        }
      ]
    },
    {
      "name": "dxf_parse_contours",
      "level": "1",
      "desc_ru": "Парсер файлов геометрии .dxf.",
      "desc_en": "Geometry parser .dxf.",
      "group": [
        "Утилиты"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу.",
          "desc_en": "File path.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "contours",
          "desc_ru": "Коллекция точек контура.",
          "desc_en": "Collection of contour points.",
          "type": "Enum (Contour) array"
        }
      ]
    },
    {
      "name": "execute_subroutines",
      "level": "1",
      "desc_ru": "Запуск подпрограмм.",
      "desc_en": "Execute subroutines.",
      "group": [
        "Подпрограммы",
        "Расчет"
      ],
      "input": [],
      "output": [
        {
          "name": "status",
          "desc_ru": "Статус расчета подпрограмм.",
          "desc_en": "Subroutines calculation status.",
          "type": "Enum (StatusCode)"
        }
      ]
    },
    {
      "name": "execute_subroutines_advanced",
      "level": "1",
      "desc_ru": "Расширенный запуск подпрограмм.",
      "desc_en": "Advanced subroutines execution.",
      "group": [
        "Подпрограммы",
        "Расчет"
      ],
      "input": [
        {
          "name": "calculation_mode",
          "desc_ru": "Режим расчета.",
          "desc_en": "Calculation mode.",
          "type": "Enum (CalculationUnit)"
        }
      ],
      "output": [
        {
          "name": "status",
          "desc_ru": "Статус расчета подпрограмм.",
          "desc_en": "Subroutines calculation status.",
          "type": "Enum (StatusCode)"
        }
      ]
    },
    {
      "name": "execute_tracking",
      "level": "1",
      "desc_ru": "Запуск трассировки.",
      "desc_en": "Execute tracking.",
      "group": [
        "Расчет",
        "Трассируемые точки"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "execute_tracking_advanced",
      "level": "1",
      "desc_ru": "Расширенный запуск трассировки.",
      "desc_en": "Advanced tracking execution.",
      "group": [
        "Расчет",
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "calculation_mode",
          "desc_ru": "Режим расчета.",
          "desc_en": "Calculation mode.",
          "type": "Enum (CalculationUnit)"
        },
        {
          "name": "forward",
          "desc_ru": "Трассировка вперед.",
          "desc_en": "Track forward.",
          "type": "Boolean"
        },
        {
          "name": "backward",
          "desc_ru": "Трассировка назад.",
          "desc_en": "Track backward.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "status",
          "desc_ru": "Статус расчета трассировки.",
          "desc_en": "Tracing calculation status.",
          "type": "Enum (StatusCode)"
        }
      ]
    },
    {
      "name": "export_bearing_contours",
      "level": "2",
      "desc_ru": "Экспорт контуров поясков.",
      "desc_en": "Export bearing contours.",
      "group": [
        "Экспорт"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу.",
          "desc_en": "File path.",
          "type": "String"
        },
        {
          "name": "format",
          "desc_ru": "Формат файла.",
          "desc_en": "File format.",
          "type": "Enum (BearingContoursFormat)"
        }
      ],
      "output": []
    },
    {
      "name": "export_field_isolines",
      "level": "2",
      "desc_ru": "Экспорт изолиний поля.",
      "desc_en": "Export field isolines.",
      "group": [
        "Экспорт"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поля.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        },
        {
          "name": "field_value",
          "desc_ru": "Значение поля.",
          "desc_en": "Field value.",
          "type": "Float"
        },
        {
          "name": "file",
          "desc_ru": "Путь к файлу.",
          "desc_en": "File path.",
          "type": "String"
        },
        {
          "name": "format",
          "desc_ru": "Формат файла.",
          "desc_en": "File format.",
          "type": "Enum (IsolinesFormat)"
        }
      ],
      "output": []
    },
    {
      "name": "export_field_isosurface",
      "level": "2",
      "desc_ru": "Экспорт поля изоповерхностей.",
      "desc_en": "Export field isosurface.",
      "group": [
        "Экспорт"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        },
        {
          "name": "field_value",
          "desc_ru": "Значение поля.",
          "desc_en": "Field value.",
          "type": "Float"
        },
        {
          "name": "file",
          "desc_ru": "Путь к файлу.",
          "desc_en": "File path.",
          "type": "String"
        },
        {
          "name": "format",
          "desc_ru": "Формат файла.",
          "desc_en": "File format.",
          "type": "Enum (SectionFormat)"
        },
        {
          "name": "mesh_units",
          "desc_ru": "Размерность элементов сетки.",
          "desc_en": "Mesh units.",
          "type": "Enum (LengthUnit)"
        }
      ],
      "output": []
    },
    {
      "name": "export_fields_at_tracking_points",
      "level": "2",
      "desc_ru": "Экспорт полей в трассируемых точках.",
      "desc_en": "Export fields in tracked points.",
      "group": [
        "Экспорт",
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу.",
          "desc_en": "File path.",
          "type": "String"
        },
        {
          "name": "file_format",
          "desc_ru": "Формат файла.",
          "desc_en": "File format.",
          "type": "Enum (TrackingFieldsFormat)"
        },
        {
          "name": "values_on_sheet",
          "desc_ru": "Выводить на листе значения.",
          "desc_en": "Output the values on the sheet.",
          "type": "Enum (ValuesOnSheet)"
        },
        {
          "name": "with_workpiece_points",
          "desc_ru": "Выводить точки заготовки.",
          "desc_en": "To output workpiece points.",
          "type": "Boolean"
        },
        {
          "name": "with_tool_points",
          "desc_ru": "Выводить точки инструмента.",
          "desc_en": "To output tool points.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "export_mesh",
      "level": "2",
      "desc_ru": "Экспорт сетки объекта.",
      "desc_en": "Object mesh export.",
      "group": [
        "Экспорт"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "file",
          "desc_ru": "Путь к файлу.",
          "desc_en": "File path.",
          "type": "String"
        },
        {
          "name": "format",
          "desc_ru": "Формат файла.",
          "desc_en": "File format.",
          "type": "Enum (MeshFormat)"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "export_profile_section",
      "level": "2",
      "desc_ru": "Экспорт файла экструзии с сечением профиля.",
      "desc_en": "Exporting an extrusion file with a profile section.",
      "group": [
        "Экспорт"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу.",
          "desc_en": "File path.",
          "type": "String"
        },
        {
          "name": "format",
          "desc_ru": "Формат файла.",
          "desc_en": "File format.",
          "type": "Enum (ProfileSectionFormat)"
        }
      ],
      "output": []
    },
    {
      "name": "export_screenshot",
      "level": "1",
      "desc_ru": "Экспорт скриншота моделирования.",
      "desc_en": "Simulation screenshot export.",
      "group": [
        "Экспорт"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу.",
          "desc_en": "File path.",
          "type": "String"
        },
        {
          "name": "width",
          "desc_ru": "Ширина изображения.",
          "desc_en": "Image width.",
          "type": "Integer"
        },
        {
          "name": "height",
          "desc_ru": "Высота изображения.",
          "desc_en": "Image height.",
          "type": "Integer"
        },
        {
          "name": "keep_aspect_ratio",
          "desc_ru": "Сохранять пропорции.",
          "desc_en": "To keep aspect ratio.",
          "type": "Boolean"
        },
        {
          "name": "display_operation_name",
          "desc_ru": "Отображать название операции.",
          "desc_en": "To diplay operation name.",
          "type": "Boolean"
        },
        {
          "name": "display_blow_number",
          "desc_ru": "Отображать номер удара.",
          "desc_en": "To display blow number.",
          "type": "Boolean"
        },
        {
          "name": "display_record_number",
          "desc_ru": "Отображать номер шага расчета.",
          "desc_en": "To display simulation step number.",
          "type": "Boolean"
        },
        {
          "name": "display_time",
          "desc_ru": "Отображать текущее время операции.",
          "desc_en": "To display current time of operation.",
          "type": "Boolean"
        },
        {
          "name": "display_time_step",
          "desc_ru": "Отображать величину шага расчета по времени.",
          "desc_en": "To display the time step value.",
          "type": "Boolean"
        },
        {
          "name": "zoom_to_fit",
          "desc_ru": "Масштабировать вид по размеру окна.",
          "desc_en": "Zoom to fit.",
          "type": "Boolean"
        },
        {
          "name": "display_legend",
          "desc_ru": "Отображать шкалу активного поля.",
          "desc_en": "To display scale of active field.",
          "type": "Boolean"
        },
        {
          "name": "legend_width",
          "desc_ru": "Ширина шкалы активного поля.",
          "desc_en": "Width of the active field scale.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "export_section_mesh",
      "level": "2",
      "desc_ru": "Экспорт сетки в сечении.",
      "desc_en": "Mesh export in section plane.",
      "group": [
        "Экспорт"
      ],
      "input": [
        {
          "name": "point_x",
          "desc_ru": "Координата X точки сетки.",
          "desc_en": "Mesh point X-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата Y точки сетки.",
          "desc_en": "Mesh point Y-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата Z точки сетки.",
          "desc_en": "Mesh point Z-coordinate.",
          "type": "Float"
        },
        {
          "name": "normal_x",
          "desc_ru": "Направление вектора нормали вдоль оси X.",
          "desc_en": "Direction of the normal vector along the X-axis.",
          "type": "Float"
        },
        {
          "name": "normal_y",
          "desc_ru": "Направление вектора нормали вдоль оси Y.",
          "desc_en": "Direction of the normal vector along the Y-axis.",
          "type": "Float"
        },
        {
          "name": "normal_z",
          "desc_ru": "Направление вектора нормали вдоль оси Z.",
          "desc_en": "Direction of the normal vector along the Z-axis.",
          "type": "Float"
        },
        {
          "name": "defined",
          "desc_ru": "Параметр не используется.",
          "desc_en": "The parameter is not used.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Параметр не используется.",
          "desc_en": "The parameter is not used.",
          "type": "String"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс типа сетки.",
          "desc_en": "Mesh type index.",
          "type": "Integer"
        },
        {
          "name": "u_vector_defined",
          "desc_ru": "Вектор, задающий локальную систему координат, задан.",
          "desc_en": "The vector defining the local coordinate system is set.",
          "type": "Boolean"
        },
        {
          "name": "u_vector_x",
          "desc_ru": "Направление вектора локальной системы координат по нормали вдоль оси X.",
          "desc_en": "Direction of the local coordinate system vector in normal direction along the X-axis.",
          "type": "Float"
        },
        {
          "name": "u_vector_y",
          "desc_ru": "Направление вектора локальной системы координат по нормали вдоль оси Y.",
          "desc_en": "Direction of the local coordinate system vector in normal direction along the Y-axis.",
          "type": "Float"
        },
        {
          "name": "u_vector_z",
          "desc_ru": "Направление вектора локальной системы координат по нормали вдоль оси Z.",
          "desc_en": "Direction of the local coordinate system vector in normal direction along the Z-axis.",
          "type": "Float"
        },
        {
          "name": "file",
          "desc_ru": "Путь к файлу.",
          "desc_en": "File path.",
          "type": "String"
        },
        {
          "name": "format",
          "desc_ru": "Формат файла.",
          "desc_en": "File format.",
          "type": "Enum (SectionFormat)"
        },
        {
          "name": "mesh_units",
          "desc_ru": "Единицы измерения в сетке.",
          "desc_en": "Mesh units.",
          "type": "Enum (LengthUnit)"
        }
      ],
      "output": []
    },
    {
      "name": "export_video",
      "level": "1",
      "desc_ru": "Экспорт анимации моделирования.",
      "desc_en": "Export the animation of simulation.",
      "group": [
        "Экспорт"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу.",
          "desc_en": "File path.",
          "type": "String"
        },
        {
          "name": "width",
          "desc_ru": "Ширина изображения.",
          "desc_en": "Image width.",
          "type": "Integer"
        },
        {
          "name": "height",
          "desc_ru": "Высота изображения.",
          "desc_en": "Image height.",
          "type": "Integer"
        },
        {
          "name": "keep_aspect_ratio",
          "desc_ru": "Сохранять пропорции.",
          "desc_en": "To keep aspect ratio.",
          "type": "Boolean"
        },
        {
          "name": "display_operation_name",
          "desc_ru": "Отображать название операции.",
          "desc_en": "To display operation name.",
          "type": "Boolean"
        },
        {
          "name": "display_blow_number",
          "desc_ru": "Отображать номер удара.",
          "desc_en": "To display blow number.",
          "type": "Boolean"
        },
        {
          "name": "display_record_number",
          "desc_ru": "Отображать номер шага расчета.",
          "desc_en": "To display simulation step number.",
          "type": "Boolean"
        },
        {
          "name": "display_time",
          "desc_ru": "Отображать текущее время операции.",
          "desc_en": "To display current time of operation.",
          "type": "Boolean"
        },
        {
          "name": "display_time_step",
          "desc_ru": "Отображать величину шага расчета по времени.",
          "desc_en": "To display the time step value.",
          "type": "Boolean"
        },
        {
          "name": "zoom_to_fit",
          "desc_ru": "Масштабировать вид по размеру окна.",
          "desc_en": "Zoom to fit.",
          "type": "Boolean"
        },
        {
          "name": "display_legend",
          "desc_ru": "Отображать шкалу активного поля.",
          "desc_en": "To display scale of active field.",
          "type": "Boolean"
        },
        {
          "name": "legend_width",
          "desc_ru": "Ширина шкалы активного поля.",
          "desc_en": "Width of the active field scale.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "extrusion_trace_count",
      "level": "2",
      "desc_ru": "Трассируемые точки при экструзии.",
      "desc_en": "Extrusion trace count.",
      "group": [
        "Трассируемые точки"
      ],
      "input": [],
      "output": [
        {
          "name": "count",
          "desc_ru": "Количество.",
          "desc_en": "Count.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "extrusion_trace_get",
      "level": "2",
      "desc_ru": "Получение данных трассируемых точек при экструзии.",
      "desc_en": "Get extrusion trace.",
      "group": [
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "pick_by",
          "desc_ru": "Выбирать по.",
          "desc_en": "Pick by.",
          "type": "Enum (PickTraceBy)"
        },
        {
          "name": "number",
          "desc_ru": "Номер.",
          "desc_en": "Number.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "number",
          "desc_ru": "Номер.",
          "desc_en": "Number.",
          "type": "Integer"
        },
        {
          "name": "subroutine_fields",
          "desc_ru": "Массив полей подпрограмм.",
          "desc_en": "Collection subroutine fields.",
          "type": "Enum (TraceSubroutineField) array"
        },
        {
          "name": "points",
          "desc_ru": "Массив точек.",
          "desc_en": "Collections of points.",
          "type": "Enum (TracePoint) array"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_at_mesh_point",
      "level": "2",
      "desc_ru": "Возвращает значение поля в точке сетки.",
      "desc_en": "Returns the value of the field at a mesh point.",
      "group": [
        "Поля",
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поля.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        },
        {
          "name": "node",
          "desc_ru": "Коллекция узлов в точке.",
          "desc_en": "Node collection.",
          "type": "Integer array"
        },
        {
          "name": "node_weight",
          "desc_ru": "Коллекция веса узла.",
          "desc_en": "Node weight collection.",
          "type": "Float array"
        },
        {
          "name": "on_surface",
          "desc_ru": "Точка на поверхности.",
          "desc_en": "The point is on the surface.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Значение.",
          "desc_en": "Value.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_at_mesh_point_vector",
      "level": "2",
      "desc_ru": "Возвращает значение векторного поля в точке сетки.",
      "desc_en": "Returns the value of the vector field at a mesh point.",
      "group": [
        "Поля",
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        },
        {
          "name": "node",
          "desc_ru": "Узел.",
          "desc_en": "Node.",
          "type": "Integer array"
        },
        {
          "name": "node_weight",
          "desc_ru": "Вес узла.",
          "desc_en": "Node weight.",
          "type": "Float array"
        },
        {
          "name": "on_surface",
          "desc_ru": "Точка на поверхности.",
          "desc_en": "The point is on the surface.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "x",
          "desc_ru": "Координата x.",
          "desc_en": "X.",
          "type": "Float"
        },
        {
          "name": "y",
          "desc_ru": "Координата y.",
          "desc_en": "Y.",
          "type": "Float"
        },
        {
          "name": "z",
          "desc_ru": "Координата z.",
          "desc_en": "Z.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_at_point",
      "level": "2",
      "desc_ru": "Возвращает значение поля в точке.",
      "desc_en": "Returns the value of the field at a point.",
      "group": [
        "Поля"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        },
        {
          "name": "x",
          "desc_ru": "Координата х.",
          "desc_en": "X.",
          "type": "Float"
        },
        {
          "name": "y",
          "desc_ru": "Координата y.",
          "desc_en": "Y.",
          "type": "Float"
        },
        {
          "name": "z",
          "desc_ru": "Координата z.",
          "desc_en": "Z.",
          "type": "Float"
        },
        {
          "name": "on_surface",
          "desc_ru": "Точка на поверхности.",
          "desc_en": "The point is on the surface.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Значение.",
          "desc_en": "Value.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_at_point_vector",
      "level": "2",
      "desc_ru": "Возвращает значение векторного поля в точке.",
      "desc_en": "Returns the value of the vector field at a mesh point.",
      "group": [
        "Поля"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        },
        {
          "name": "x",
          "desc_ru": "Координата x.",
          "desc_en": "X.",
          "type": "Float"
        },
        {
          "name": "y",
          "desc_ru": "Координата y.",
          "desc_en": "Y.",
          "type": "Float"
        },
        {
          "name": "z",
          "desc_ru": "Координата z.",
          "desc_en": "Z.",
          "type": "Float"
        },
        {
          "name": "on_surface",
          "desc_ru": "Точка на поверхности.",
          "desc_en": "The point is on the surface.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "x",
          "desc_ru": "Координата x.",
          "desc_en": "X.",
          "type": "Float"
        },
        {
          "name": "y",
          "desc_ru": "Координата y.",
          "desc_en": "Y.",
          "type": "Float"
        },
        {
          "name": "z",
          "desc_ru": "Координата z.",
          "desc_en": "Z.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_at_tracking_line",
      "level": "2",
      "desc_ru": "Возвращает значения поля в трассирующей линии.",
      "desc_en": "Returns the field values ​​in the trace line.",
      "group": [
        "Поля",
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "object_operation",
          "desc_ru": "Операция.",
          "desc_en": "Object operation.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "values",
          "desc_ru": "Значения.",
          "desc_en": "Values.",
          "type": "Float array"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_at_tracking_line_vector",
      "level": "2",
      "desc_ru": "Возвращает значения векторного поля в трассирующей линии.",
      "desc_en": "Returns the vector field values ​​in the trace line.",
      "group": [
        "Поля",
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "object_operation",
          "desc_ru": "Объект операции.",
          "desc_en": "Object operation.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "x",
          "desc_ru": "Координата x.",
          "desc_en": "X.",
          "type": "Float array"
        },
        {
          "name": "y",
          "desc_ru": "Координата y.",
          "desc_en": "Y.",
          "type": "Float array"
        },
        {
          "name": "z",
          "desc_ru": "Координата z.",
          "desc_en": "Z.",
          "type": "Float array"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_at_tracking_point",
      "level": "2",
      "desc_ru": "Возвращает значение поля в трассируемой точке.",
      "desc_en": "Returns the value of the field at a tracking point.",
      "group": [
        "Поля",
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "object_operation",
          "desc_ru": "Операция.",
          "desc_en": "Object operation.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Значение.",
          "desc_en": "Value.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_at_tracking_point_vector",
      "level": "2",
      "desc_ru": "Возвращает значение векторного поля в трассируемой точке.",
      "desc_en": "Returns the value of the vector field at a tracking point.",
      "group": [
        "Поля",
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "object_operation",
          "desc_ru": "Операция.",
          "desc_en": "Object operation.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "x",
          "desc_ru": "Координата x.",
          "desc_en": "X.",
          "type": "Float"
        },
        {
          "name": "y",
          "desc_ru": "Координата y.",
          "desc_en": "Y.",
          "type": "Float"
        },
        {
          "name": "z",
          "desc_ru": "Координата z.",
          "desc_en": "Z.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_get",
      "level": "2",
      "desc_ru": "Получение значений поля.",
      "desc_en": "Getting field values.",
      "group": [
        "Сетка",
        "Поля"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "values",
          "desc_ru": "Значения.",
          "desc_en": "Values.",
          "type": "Float array"
        },
        {
          "name": "has_data",
          "desc_ru": "Массив проверок наличия данных.",
          "desc_en": "Data availability checks.",
          "type": "Boolean array"
        },
        {
          "name": "only_on_surface",
          "desc_ru": "Только на поверхности.",
          "desc_en": "Only on surface.",
          "type": "Boolean"
        },
        {
          "name": "in_elements",
          "desc_ru": "В элементах.",
          "desc_en": "In elements.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_get_vector",
      "level": "2",
      "desc_ru": "Возвращает значение векторного поля.",
      "desc_en": "Returns the value of the vector field.",
      "group": [
        "Сетка",
        "Поля"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "x",
          "desc_ru": "Координата x.",
          "desc_en": "X.",
          "type": "Float array"
        },
        {
          "name": "y",
          "desc_ru": "Координата y.",
          "desc_en": "Y.",
          "type": "Float array"
        },
        {
          "name": "z",
          "desc_ru": "Координата z.",
          "desc_en": "Z.",
          "type": "Float array"
        },
        {
          "name": "has_data",
          "desc_ru": "Массив проверок наличия данных.",
          "desc_en": "Data availability checks.",
          "type": "Boolean array"
        },
        {
          "name": "only_on_surface",
          "desc_ru": "Только на поверхности.",
          "desc_en": "Only on surface.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_isolines",
      "level": "2",
      "desc_ru": "Возвращает массив изолиний по значению поля.",
      "desc_en": "Returns a collection of isolines based on the field value.",
      "group": [
        "Поля"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        },
        {
          "name": "field_value",
          "desc_ru": "Значение поля.",
          "desc_en": "Field value.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "isolines",
          "desc_ru": "Массив изолиний.",
          "desc_en": "Collection of isolines.",
          "type": "Enum (Isoline) array"
        }
      ]
    },
    {
      "name": "field_isosurface",
      "level": "2",
      "desc_ru": "Возвращает массив изопеверхностей по значению поля.",
      "desc_en": "Returns a collection of isosurface based on the field value.",
      "group": [
        "Поля"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        },
        {
          "name": "field_value",
          "desc_ru": "Значение поля.",
          "desc_en": "Field value.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "isosurfaces",
          "desc_ru": "Массив изолиний.",
          "desc_en": "Isosurfaces collection.",
          "type": "Enum (Isosurface) array"
        }
      ]
    },
    {
      "name": "field_min_max",
      "level": "2",
      "desc_ru": "Возрвщает минимальные и максимальные значения поля.",
      "desc_en": "Returns the minimum and maximum values ​​of a field.",
      "group": [
        "Поля"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        },
        {
          "name": "on_surface",
          "desc_ru": "На поверхности.",
          "desc_en": "On surface.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "min_value",
          "desc_ru": "Минимальное значение.",
          "desc_en": "Minimum value.",
          "type": "Float"
        },
        {
          "name": "min_x",
          "desc_ru": "Минимальное значение по оси x.",
          "desc_en": "Minimum x-axis value.",
          "type": "Float"
        },
        {
          "name": "min_y",
          "desc_ru": "Минимальное значение по оси y.",
          "desc_en": "Minimum y-axis value.",
          "type": "Float"
        },
        {
          "name": "min_z",
          "desc_ru": "Минимальное значение по оси z.",
          "desc_en": "Minimum z-axis value.",
          "type": "Float"
        },
        {
          "name": "min_node",
          "desc_ru": "Узел с минимальным значением поля.",
          "desc_en": "Node with minimum field value.",
          "type": "Integer"
        },
        {
          "name": "max_value",
          "desc_ru": "Максимальное значение.",
          "desc_en": "Maximum value.",
          "type": "Float"
        },
        {
          "name": "max_x",
          "desc_ru": "Максимальное значение по оси x.",
          "desc_en": "Maximum x-axis value.",
          "type": "Float"
        },
        {
          "name": "max_y",
          "desc_ru": "Максимальное значение по оси y.",
          "desc_en": "Maximum y-axis value.",
          "type": "Float"
        },
        {
          "name": "max_z",
          "desc_ru": "Максимальное значение по оси z.",
          "desc_en": "Maximum z-axis value.",
          "type": "Float"
        },
        {
          "name": "max_node",
          "desc_ru": "Узел с максимальным значением поля.",
          "desc_en": "Node with maximum field value.",
          "type": "Integer"
        },
        {
          "name": "has_values",
          "desc_ru": "Проверка наличия значений.",
          "desc_en": "Checking for values.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_mode_get",
      "level": "1",
      "desc_ru": "Запрос данных о режиме отображения заливки шкалы поля.",
      "desc_en": "Requesting data about the field scale fill type display mode.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": [
        {
          "name": "mode",
          "desc_ru": "Заливка шкалы поля.",
          "desc_en": "Scale fill type.",
          "type": "Enum (FillMode)"
        }
      ]
    },
    {
      "name": "field_mode_set",
      "level": "1",
      "desc_ru": "Установка режима отображения заливки шкалы поля.",
      "desc_en": "Setting the field scale fill type display mode.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "mode",
          "desc_ru": "Заливка шкалы поля.",
          "desc_en": "Scale fill type.",
          "type": "Enum (FillMode)"
        }
      ],
      "output": []
    },
    {
      "name": "field_palette_get",
      "level": "1",
      "desc_ru": "Запрос данных о цветовой палитре поля.",
      "desc_en": "Requesting field color palette data.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": [
        {
          "name": "palette",
          "desc_ru": "Цветовая палитра поля.",
          "desc_en": "Field color palette.",
          "type": "Enum (Colormap)"
        },
        {
          "name": "inverse",
          "desc_ru": "Инвертированная палитра включена.",
          "desc_en": "Inverted palette is on.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "field_palette_set",
      "level": "1",
      "desc_ru": "Установка цветовой палитры поля.",
      "desc_en": "Setting the field color palette.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "palette",
          "desc_ru": "Цветовая палитра поля.",
          "desc_en": "Field color palette.",
          "type": "Enum (Colormap)"
        },
        {
          "name": "inverse",
          "desc_ru": "Инвертированная палитра включена.",
          "desc_en": "Inverted palette is on.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "field_stat",
      "level": "2",
      "desc_ru": "Возвращает статистические данные поля.",
      "desc_en": "Returns field statistics.",
      "group": [
        "Поля"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        },
        {
          "name": "interval_count",
          "desc_ru": "Количество интервалов.",
          "desc_en": "Interval count.",
          "type": "Integer"
        },
        {
          "name": "histogram_by",
          "desc_ru": "Объекты по которым сделана гистограмма.",
          "desc_en": "Objects for which the histogram was made.",
          "type": "Enum (HistogramBy)"
        },
        {
          "name": "percentile_1_level",
          "desc_ru": "Процентиль первого уровня.",
          "desc_en": "Percentile 1 level.",
          "type": "Float"
        },
        {
          "name": "percentile_2_level",
          "desc_ru": "Процентиль второго уровня.",
          "desc_en": "Percentile 2 level.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "area",
          "desc_ru": "Площадь.",
          "desc_en": "Area.",
          "type": "Float"
        },
        {
          "name": "volume",
          "desc_ru": "Объем.",
          "desc_en": "Volume.",
          "type": "Float"
        },
        {
          "name": "min_value",
          "desc_ru": "Минимальное значение.",
          "desc_en": "Minimum value.",
          "type": "Float"
        },
        {
          "name": "max_value",
          "desc_ru": "Максимальное значение.",
          "desc_en": "Maximum value.",
          "type": "Float"
        },
        {
          "name": "mean_value",
          "desc_ru": "Среднее значение.",
          "desc_en": "Mean value.",
          "type": "Float"
        },
        {
          "name": "standart_deviation",
          "desc_ru": "Стандартное отклонение.",
          "desc_en": "Standart deviation.",
          "type": "Float"
        },
        {
          "name": "median",
          "desc_ru": "Медианное значение.",
          "desc_en": "Median value.",
          "type": "Float"
        },
        {
          "name": "coefficient_of_skewness",
          "desc_ru": "Коэффициент перекоса.",
          "desc_en": "Coefficient of skewness.",
          "type": "Float"
        },
        {
          "name": "excess_kurtosis",
          "desc_ru": "Избыточный эксцесс.",
          "desc_en": "Excess kurtosis.",
          "type": "Float"
        },
        {
          "name": "percentile_1",
          "desc_ru": "Процентиль первого уровня.",
          "desc_en": "Percentile 1 level.",
          "type": "Float"
        },
        {
          "name": "percentile_2",
          "desc_ru": "Процентиль второго уровня.",
          "desc_en": "Percentile 2 level.",
          "type": "Float"
        },
        {
          "name": "histogram_field",
          "desc_ru": "Массив значений гистограммы поля.",
          "desc_en": "Collection of field histogram values.",
          "type": "Float array"
        },
        {
          "name": "histogram_level",
          "desc_ru": "Массив значений уровня гистограммы.",
          "desc_en": "Collection of level histogram values.",
          "type": "Float array"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "field_stat_at_section",
      "level": "2",
      "desc_ru": "Возвращает статистические данные поля в сечении.",
      "desc_en": "Returns field statistics at section.",
      "group": [
        "Поля"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "field",
          "desc_ru": "Поле.",
          "desc_en": "Field.",
          "type": "String"
        },
        {
          "name": "field_source",
          "desc_ru": "Исходное поле.",
          "desc_en": "Field source.",
          "type": "Enum (FieldSource)"
        },
        {
          "name": "source_object",
          "desc_ru": "Исходный объект.",
          "desc_en": "Source object.",
          "type": "Integer"
        },
        {
          "name": "source_operation",
          "desc_ru": "Исходная операция.",
          "desc_en": "Source operation.",
          "type": "Integer"
        },
        {
          "name": "section_point_x",
          "desc_ru": "Точка сечения по оси x.",
          "desc_en": "Section point x.",
          "type": "Float"
        },
        {
          "name": "section_point_y",
          "desc_ru": "Точка сечения по оси y.",
          "desc_en": "Section point y.",
          "type": "Float"
        },
        {
          "name": "section_point_z",
          "desc_ru": "Точка сечения по оси z.",
          "desc_en": "Section point z.",
          "type": "Float"
        },
        {
          "name": "section_normal_x",
          "desc_ru": "Направление нормали по оси x.",
          "desc_en": "X-axis normal direction.",
          "type": "Float"
        },
        {
          "name": "section_normal_y",
          "desc_ru": "Направление нормали по оси y.",
          "desc_en": "Y-axis normal direction.",
          "type": "Float"
        },
        {
          "name": "section_normal_z",
          "desc_ru": "Направление нормали по оси z.",
          "desc_en": "Z-axis normal direction.",
          "type": "Float"
        },
        {
          "name": "interval_count",
          "desc_ru": "Количество интервалов.",
          "desc_en": "Interval count.",
          "type": "Integer"
        },
        {
          "name": "percentile_1_level",
          "desc_ru": "Процентиль первого уровня.",
          "desc_en": "Percentile 1 level.",
          "type": "Float"
        },
        {
          "name": "percentile_2_level",
          "desc_ru": "Процентиль второго уровня.",
          "desc_en": "Percentile 2 level.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "area",
          "desc_ru": "Площадь.",
          "desc_en": "Area.",
          "type": "Float"
        },
        {
          "name": "volume",
          "desc_ru": "Объем.",
          "desc_en": "Volume.",
          "type": "Float"
        },
        {
          "name": "min_value",
          "desc_ru": "Минимальное значение.",
          "desc_en": "Minimum value.",
          "type": "Float"
        },
        {
          "name": "max_value",
          "desc_ru": "Максимальное значение.",
          "desc_en": "Maximum value.",
          "type": "Float"
        },
        {
          "name": "mean_value",
          "desc_ru": "Среднее значение.",
          "desc_en": "Mean value.",
          "type": "Float"
        },
        {
          "name": "standart_deviation",
          "desc_ru": "Стандартное отклонение.",
          "desc_en": "Standart deviation.",
          "type": "Float"
        },
        {
          "name": "median",
          "desc_ru": "Медианное значение.",
          "desc_en": "Median value.",
          "type": "Float"
        },
        {
          "name": "coefficient_of_skewness",
          "desc_ru": "Коэффициент перекоса.",
          "desc_en": "Coefficient of skewness.",
          "type": "Float"
        },
        {
          "name": "excess_kurtosis",
          "desc_ru": "Избыточный эксцесс.",
          "desc_en": "Excess kurtosis.",
          "type": "Float"
        },
        {
          "name": "percentile_1",
          "desc_ru": "Процентиль первого уровня.",
          "desc_en": "Percentile 1 level.",
          "type": "Float"
        },
        {
          "name": "percentile_2",
          "desc_ru": "Процентиль второго уровня.",
          "desc_en": "Percentile 2 level.",
          "type": "Float"
        },
        {
          "name": "histogram_field",
          "desc_ru": "Массив значений гистограммы поля.",
          "desc_en": "Collection of field histogram values.",
          "type": "Float array"
        },
        {
          "name": "histogram_level",
          "desc_ru": "Массив значений уровня гистограммы.",
          "desc_en": "Collection of level histogram values.",
          "type": "Float array"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "file_dialog",
      "level": "1",
      "desc_ru": "Вызов диалогового окна.",
      "desc_en": "Calling a dialog box.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [
        {
          "name": "open_mode",
          "desc_ru": "Режим открытия.",
          "desc_en": "Open mode.",
          "type": "Boolean"
        },
        {
          "name": "file_name",
          "desc_ru": "Имя файла.",
          "desc_en": "File name.",
          "type": "String"
        },
        {
          "name": "file_ext",
          "desc_ru": "Расширения файла.",
          "desc_en": "File extension.",
          "type": "String"
        },
        {
          "name": "filters",
          "desc_ru": "Фильтры.",
          "desc_en": "Filters.",
          "type": "String array"
        },
        {
          "name": "current_filter",
          "desc_ru": "Текущий фильтр.",
          "desc_en": "Current filter.",
          "type": "Integer"
        },
        {
          "name": "current_folder",
          "desc_ru": "Текущая папка.",
          "desc_en": "Current folder.",
          "type": "String"
        },
        {
          "name": "allow_multiple_files",
          "desc_ru": "Включено ли размножение файлов.",
          "desc_en": "Allow multiply files.",
          "type": "Boolean"
        },
        {
          "name": "settings_key",
          "desc_ru": "Ключ настроек.",
          "desc_en": "Settings key.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "items",
          "desc_ru": "Объекты.",
          "desc_en": "Items.",
          "type": "String array"
        }
      ]
    },
    {
      "name": "geometry_convert_to_3d",
      "level": "1",
      "desc_ru": "Преобразовать 2D геометрию в 3D.",
      "desc_en": "Convert geometry from 2D to 3D.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "thickness",
          "desc_ru": "Толщина объекта.",
          "desc_en": "Object thickness.",
          "type": "Float"
        },
        {
          "name": "layer_count",
          "desc_ru": "Количество слоев.",
          "desc_en": "Number of layers.",
          "type": "Integer"
        },
        {
          "name": "dir_x",
          "desc_ru": "Направление вектора нормали к плоскости вдоль оси X.",
          "desc_en": "Direction of the normal vector to the plane along the X-axis.",
          "type": "Float"
        },
        {
          "name": "dir_y",
          "desc_ru": "Направление вектора нормали к плоскости вдоль оси Y.",
          "desc_en": "Direction of the normal vector to the plane along the Y-axis.",
          "type": "Float"
        },
        {
          "name": "dir_z",
          "desc_ru": "Направление вектора нормали к плоскости вдоль оси Z.",
          "desc_en": "Direction of the normal vector to the plane along the Z-axis.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "geometry_create_brick",
      "level": "1",
      "desc_ru": "Создание геометрии в виде параллелепипеда.",
      "desc_en": "Creating a parallelepiped geometry.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "offset_x",
          "desc_ru": "Смещение по оси x относительно начала координат.",
          "desc_en": "Offset along the x-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "offset_y",
          "desc_ru": "Смещение по оси y относительно начала координат.",
          "desc_en": "Offset along the y-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "offset_z",
          "desc_ru": "Смещение по оси z относительно начала координат.",
          "desc_en": "Offset along the z-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "size_x",
          "desc_ru": "Размер объекта по оси x.",
          "desc_en": "Object dimension along the x axis.",
          "type": "Float"
        },
        {
          "name": "size_y",
          "desc_ru": "Размер объекта по оси y.",
          "desc_en": "Object dimension along the y axis.",
          "type": "Float"
        },
        {
          "name": "size_z",
          "desc_ru": "Размер объекта по оси z.",
          "desc_en": "Object dimension along the z axis.",
          "type": "Float"
        },
        {
          "name": "hexahedral_mesh",
          "desc_ru": "Гексаэдральная сетка.",
          "desc_en": "Hexahedral mesh.",
          "type": "Boolean"
        },
        {
          "name": "elem_count_x",
          "desc_ru": "Количество гексаэдров вдоль оси X.",
          "desc_en": "Hexahedrons count along the X axis.",
          "type": "Integer"
        },
        {
          "name": "elem_count_y",
          "desc_ru": "Количество гексаэдров вдоль оси Y.",
          "desc_en": "Hexahedrons count along the Y axis.",
          "type": "Integer"
        },
        {
          "name": "elem_count_z",
          "desc_ru": "Количество гексаэдров вдоль оси Z.",
          "desc_en": "Hexahedrons count along the Z axis.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "geometry_create_rect",
      "level": "1",
      "desc_ru": "Создание геометрии в виде прямоугольника.",
      "desc_en": "Creating a rectangle geometry.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "offset_x",
          "desc_ru": "Смещение по оси x относительно начала координат.",
          "desc_en": "Offset along the x-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "offset_y",
          "desc_ru": "Смещение по оси y относительно начала координат.",
          "desc_en": "Offset along the y-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "offset_z",
          "desc_ru": "Смещение по оси z относительно начала координат.",
          "desc_en": "Offset along the z-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "size_x",
          "desc_ru": "Размер объекта по оси x.",
          "desc_en": "Object dimension along the x axis.",
          "type": "Float"
        },
        {
          "name": "size_z",
          "desc_ru": "Размер объекта по оси z.",
          "desc_en": "Object dimension along the z axis.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "geometry_create_sphere",
      "level": "1",
      "desc_ru": "Создание геометрии в виде сферы.",
      "desc_en": "Creating a sphere geometry.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "offset_x",
          "desc_ru": "Смещение по оси x относительно начала координат.",
          "desc_en": "Offset along the x-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "offset_y",
          "desc_ru": "Смещение по оси y относительно начала координат.",
          "desc_en": "Offset along the y-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "offset_z",
          "desc_ru": "Смещение по оси z относительно начала координат.",
          "desc_en": "Offset along the z-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "r",
          "desc_ru": "Внешний адиус сферы.",
          "desc_en": "Outer sphere radius.",
          "type": "Float"
        },
        {
          "name": "inner_r",
          "desc_ru": "Внутренний радиус сферы.",
          "desc_en": "Inner sphere radius.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "geometry_create_tube",
      "level": "1",
      "desc_ru": "Создание геометрии в виде трубы.",
      "desc_en": "Creating a tube geometry.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "offset_x",
          "desc_ru": "Смещение по оси x относительно начала координат.",
          "desc_en": "Offset along the x-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "offset_y",
          "desc_ru": "Смещение по оси y относительно начала координат.",
          "desc_en": "Offset along the y-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "offset_z",
          "desc_ru": "Смещение по оси z относительно начала координат.",
          "desc_en": "Offset along the z-axis from the origin.",
          "type": "Float"
        },
        {
          "name": "r",
          "desc_ru": "Внешний радиус трубы.",
          "desc_en": "Outer tube radius.",
          "type": "Float"
        },
        {
          "name": "inner_r",
          "desc_ru": "Внутренний радиус трубы.",
          "desc_en": "Inner tube radius.",
          "type": "Float"
        },
        {
          "name": "h",
          "desc_ru": "Высота трубы.",
          "desc_en": "Tube height.",
          "type": "Float"
        },
        {
          "name": "sector_angle",
          "desc_ru": "Угол сектора.",
          "desc_en": "Sector angle.",
          "type": "Float"
        },
        {
          "name": "sector_start_angle",
          "desc_ru": "Начальный угол сектора.",
          "desc_en": "Sector start angle.",
          "type": "Float"
        },
        {
          "name": "hexahedral_mesh",
          "desc_ru": "Гексаэдральная сетка.",
          "desc_en": "Hexahedral mesh.",
          "type": "Boolean"
        },
        {
          "name": "elem_count_axial",
          "desc_ru": "Количество гексаэдров вдоль оси Z.",
          "desc_en": "Hexahedrons count along the axial direction.",
          "type": "Integer"
        },
        {
          "name": "elem_count_radial",
          "desc_ru": "Количество гексаэдров вдоль радиального направления.",
          "desc_en": "Hexahedrons count along the radial direction.",
          "type": "Integer"
        },
        {
          "name": "elem_count_tangential",
          "desc_ru": "Количество гексаэдров вдоль тангенциального направления.",
          "desc_en": "Hexahedrons count along the tangential direction.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "geometry_load",
      "level": "1",
      "desc_ru": "Загрузка геометрию из файла.",
      "desc_en": "Loading geometry from file.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу с геометрией.",
          "desc_en": "Path to the geometry file.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров объектов загруженной геометрии.",
          "desc_en": "Array of object numbers of loaded geometry.",
          "type": "Enum (ObjectId) array"
        }
      ]
    },
    {
      "name": "geometry_load_extruded_object",
      "level": "1",
      "desc_ru": "Загрузка геометрии типа объекта выдавливания.",
      "desc_en": "Loading the geometry of the extrusion object type.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу с геометрией.",
          "desc_en": "Path to the geometry file.",
          "type": "String"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "depth",
          "desc_ru": "Глубина выдавливания объекта.",
          "desc_en": "Object extrusion depth.",
          "type": "Float"
        },
        {
          "name": "mesh_adapt_koef",
          "desc_ru": "Коэффициент адаптации сетки.",
          "desc_en": "Mesh adaptation coefficient.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "geometry_load_revolved_object",
      "level": "1",
      "desc_ru": "Загрузка геометрии типа развертки.",
      "desc_en": "Loading geometry type to be revolved.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу с геометрией.",
          "desc_en": "Path to the geometry file.",
          "type": "String"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "angle",
          "desc_ru": "Угол поворота.",
          "desc_en": "Rotation angle.",
          "type": "Float"
        },
        {
          "name": "use_x_axis",
          "desc_ru": "Использовать ось x.",
          "desc_en": "To use x axis.",
          "type": "Boolean"
        },
        {
          "name": "mesh_adapt_koef",
          "desc_ru": "Коэффициент адаптации сетки.",
          "desc_en": "Mesh adaptation coefficient.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "geometry_load_single_object",
      "level": "1",
      "desc_ru": "Загрузка геометрии из файла и задание её в качестве объекта.",
      "desc_en": "Loading geometry from file and setting it as an object.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу с геометрией.",
          "desc_en": "Path to the geometry file.",
          "type": "String"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "gravity_positioning",
      "level": "1",
      "desc_ru": "Гравитационное позиционирование заготовки относительно инструмента.",
      "desc_en": "Gravitational positioning of the workpiece relative to the tool.",
      "group": [
        "Позиционирование"
      ],
      "input": [
        {
          "name": "moving_object_type",
          "desc_ru": "Тип перемещаемого объекта.",
          "desc_en": "Moving object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "moving_object_id",
          "desc_ru": "Id перемещаемого объекта.",
          "desc_en": "Moving object id.",
          "type": "Integer"
        },
        {
          "name": "target_object_type",
          "desc_ru": "Тип объекта, относительно которого совершается перемещение.",
          "desc_en": "Target object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "target_object_id",
          "desc_ru": "Id объекта, относительно которого совершается перемещение.",
          "desc_en": "Target object id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "is_windowless_mode",
      "level": "1",
      "desc_ru": "Создание запроса о безоконном режиме работы.",
      "desc_en": "Creating a request for windowless work.",
      "group": [
        "QForm",
        "Интерфейс пользователя"
      ],
      "input": [],
      "output": [
        {
          "name": "value",
          "desc_ru": "Значение.",
          "desc_en": "Value.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "key_names_get",
      "level": "1",
      "desc_ru": "Получение данных о названиях клавиш.",
      "desc_en": "Requesting key names data.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [],
      "output": [
        {
          "name": "names",
          "desc_ru": "Массив из названий клавиш.",
          "desc_en": "Key names.",
          "type": "String array"
        }
      ]
    },
    {
      "name": "key_send",
      "level": "1",
      "desc_ru": "Использовать клавишу.",
      "desc_en": "To use a key.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [
        {
          "name": "key",
          "desc_ru": "Название клавиши.",
          "desc_en": "Key name.",
          "type": "String"
        },
        {
          "name": "ctrl",
          "desc_ru": "CTRL активирован.",
          "desc_en": "CTRL is active.",
          "type": "Boolean"
        },
        {
          "name": "alt",
          "desc_ru": "ALT активирован.",
          "desc_en": "ALT is active.",
          "type": "Boolean"
        },
        {
          "name": "shift",
          "desc_ru": "SHIFT активирован.",
          "desc_en": "SHIFT is active.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "language_get",
      "level": "1",
      "desc_ru": "Запрос языка интерфейса.",
      "desc_en": "Requesting the interface language.",
      "group": [
        "QForm",
        "Интерфейс пользователя"
      ],
      "input": [],
      "output": [
        {
          "name": "language",
          "desc_ru": "Язык.",
          "desc_en": "Language.",
          "type": "Enum (Language)"
        }
      ]
    },
    {
      "name": "language_set",
      "level": "1",
      "desc_ru": "Установка языка интерфейса.",
      "desc_en": "Setting the interface language.",
      "group": [
        "QForm",
        "Интерфейс пользователя"
      ],
      "input": [
        {
          "name": "language",
          "desc_ru": "Язык.",
          "desc_en": "Language.",
          "type": "Enum (Language)"
        }
      ],
      "output": []
    },
    {
      "name": "log_begin",
      "level": "1",
      "desc_ru": "Ввод/вывод файла сведений.",
      "desc_en": "Info file input/output.",
      "group": [
        "QForm"
      ],
      "input": [
        {
          "name": "log_input",
          "desc_ru": "Ввод поля.",
          "desc_en": "Log input.",
          "type": "Boolean"
        },
        {
          "name": "log_output",
          "desc_ru": "Вывод поля.",
          "desc_en": "Log output.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "log_save",
      "level": "1",
      "desc_ru": "Сохранение файла журнала.",
      "desc_en": "Saving the log file.",
      "group": [
        "QForm"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу журнала.",
          "desc_en": "Path to the log file.",
          "type": "String"
        },
        {
          "name": "log_format",
          "desc_ru": "Формат файла журнала.",
          "desc_en": "The log file format.",
          "type": "Enum (LogFormat)"
        }
      ],
      "output": []
    },
    {
      "name": "mesh_apex_get",
      "level": "2",
      "desc_ru": "Запрос данных о вершине сетки.",
      "desc_en": "Requesting the mesh apex data.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс типа сетки.",
          "desc_en": "Mesh type index.",
          "type": "Integer"
        },
        {
          "name": "apex",
          "desc_ru": "Номер вершины.",
          "desc_en": "Apex number.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "node",
          "desc_ru": "Номер узла, к которому относится вершина (?).",
          "desc_en": "The node number to which the apex belongs.",
          "type": "Integer"
        },
        {
          "name": "edges",
          "desc_ru": "Массив номеров ребер к которым относится вершина (?).",
          "desc_en": "An array of edges numbers to which the apex belongs (?).",
          "type": "Enum (MeshApexEdge) array"
        }
      ]
    },
    {
      "name": "mesh_cubics_get",
      "level": "2",
      "desc_ru": "Запрос данных о кубических элементах сетки.",
      "desc_en": "Requesting the brick mesh elements data.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс типа сетки.",
          "desc_en": "Mesh type index.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "node_1",
          "desc_ru": "Узел 1.",
          "desc_en": "Node 1.",
          "type": "Integer array"
        },
        {
          "name": "node_2",
          "desc_ru": "Узел 2.",
          "desc_en": "Node 2.",
          "type": "Integer array"
        },
        {
          "name": "node_3",
          "desc_ru": "Узел 3.",
          "desc_en": "Node 3.",
          "type": "Integer array"
        },
        {
          "name": "node_4",
          "desc_ru": "Узел 4.",
          "desc_en": "Node 4.",
          "type": "Integer array"
        },
        {
          "name": "node_5",
          "desc_ru": "Узел 5.",
          "desc_en": "Node 5.",
          "type": "Integer array"
        },
        {
          "name": "node_6",
          "desc_ru": "Узел 6.",
          "desc_en": "Node 6.",
          "type": "Integer array"
        },
        {
          "name": "node_7",
          "desc_ru": "Узел 7.",
          "desc_en": "Node 7.",
          "type": "Integer array"
        },
        {
          "name": "node_8",
          "desc_ru": "Узел 8.",
          "desc_en": "Node 8.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "mesh_edge_get",
      "level": "2",
      "desc_ru": "Получение данных сетки на ребре.",
      "desc_en": "Mesh properties on an edge.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "edge",
          "desc_ru": "Номер грани.",
          "desc_en": "Edge.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "nodes",
          "desc_ru": "Массив узлов.",
          "desc_en": "Collection of nodes.",
          "type": "Integer array"
        },
        {
          "name": "apex_start",
          "desc_ru": "Начальная вершина.",
          "desc_en": "Start apex.",
          "type": "Integer"
        },
        {
          "name": "apex_end",
          "desc_ru": "Конечная вершина.",
          "desc_en": "End apex.",
          "type": "Integer"
        },
        {
          "name": "adjacent_face_1",
          "desc_ru": "Примыкающая грань 1.",
          "desc_en": "Adjacent face 1.",
          "type": "Integer"
        },
        {
          "name": "adjacent_face_2",
          "desc_ru": "Примыкающая грань 2.",
          "desc_en": "Adjacent face 2.",
          "type": "Integer"
        },
        {
          "name": "adjacent_face_1_bound",
          "desc_ru": "Граница примыкающей грани 1.",
          "desc_en": "Boundary of adjacent face 1.",
          "type": "Integer"
        },
        {
          "name": "adjacent_face_2_bound",
          "desc_ru": "Граница примыкающей грани 1.",
          "desc_en": "Boundary of adjacent face 2.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "mesh_face_get",
      "level": "2",
      "desc_ru": "Получение данных сетки на грани.",
      "desc_en": "Mesh properties on a face.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "face",
          "desc_ru": "Грань.",
          "desc_en": "Face.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "type",
          "desc_ru": "Тип грани.",
          "desc_en": "Face type.",
          "type": "Enum (FaceType)"
        },
        {
          "name": "triangles",
          "desc_ru": "Массив треугольных элементов.",
          "desc_en": "Collection of triangles.",
          "type": "Integer array"
        },
        {
          "name": "quadrangles",
          "desc_ru": "Массив четырехугольных элементов.",
          "desc_en": "Collection of quadrangles.",
          "type": "Integer array"
        },
        {
          "name": "inner_nodes",
          "desc_ru": "Внутренние узлы.",
          "desc_en": "Inner nodes.",
          "type": "Integer array"
        },
        {
          "name": "bound_nodes",
          "desc_ru": "Узлы на границе.",
          "desc_en": "Bound nodes.",
          "type": "Integer array"
        },
        {
          "name": "bounds",
          "desc_ru": "Границы.",
          "desc_en": "Bounds.",
          "type": "Enum (MeshFaceBound) array"
        }
      ]
    },
    {
      "name": "mesh_face_types_get",
      "level": "2",
      "desc_ru": "Возвращает тип сетки на грани.",
      "desc_en": "Returns type of face mash.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "type",
          "desc_ru": "Тип сетки на грани.",
          "desc_en": "Type of face mash.",
          "type": "Enum (FaceType) array"
        }
      ]
    },
    {
      "name": "mesh_lap_points_get",
      "level": "2",
      "desc_ru": "Запрос данных о координатах складок.",
      "desc_en": "Request for data on the coordinates of the laps.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "x",
          "desc_ru": "Координата x.",
          "desc_en": "X.",
          "type": "Float array"
        },
        {
          "name": "y",
          "desc_ru": "Координата y.",
          "desc_en": "Y.",
          "type": "Float array"
        },
        {
          "name": "z",
          "desc_ru": "Координата z.",
          "desc_en": "Z.",
          "type": "Float array"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "mesh_node_owners_get",
      "level": "2",
      "desc_ru": "Возвращает данные о владельцах узлов сетки.",
      "desc_en": "Returns data about mash node owners.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "owner_type",
          "desc_ru": "Массив типов владельцев узлов сетки.",
          "desc_en": "Collection of node owners type.",
          "type": "Enum (MeshNodeOwnerType) array"
        },
        {
          "name": "owner_id",
          "desc_ru": "Массив id владельцев.",
          "desc_en": "Collection of owners id.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "mesh_nodes_get",
      "level": "2",
      "desc_ru": "Запрос данных о координатах узлов сетки.",
      "desc_en": "Requesting data on the coordinates of mesh nodes.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "x",
          "desc_ru": "Координата x.",
          "desc_en": "X.",
          "type": "Float array"
        },
        {
          "name": "y",
          "desc_ru": "Координата y.",
          "desc_en": "Y.",
          "type": "Float array"
        },
        {
          "name": "z",
          "desc_ru": "Координата z.",
          "desc_en": "Z.",
          "type": "Float array"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "mesh_point_get",
      "level": "2",
      "desc_ru": "Запрос данных о точке сетки.",
      "desc_en": "Query mesh point data.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "point_x",
          "desc_ru": "Точка х.",
          "desc_en": "Point x.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Точка y.",
          "desc_en": "Point y.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Точка z.",
          "desc_en": "Point z.",
          "type": "Float"
        },
        {
          "name": "on_surface",
          "desc_ru": "Точка на поверхности.",
          "desc_en": "The point is on the surface.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "x",
          "desc_ru": "Точка х.",
          "desc_en": "Point x.",
          "type": "Float"
        },
        {
          "name": "y",
          "desc_ru": "Точка y.",
          "desc_en": "Point y.",
          "type": "Float"
        },
        {
          "name": "z",
          "desc_ru": "Точка z.",
          "desc_en": "Point z.",
          "type": "Float"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "on_surface",
          "desc_ru": "Точка на поверхности.",
          "desc_en": "The point is on the surface.",
          "type": "Boolean"
        },
        {
          "name": "node",
          "desc_ru": "Коллекция номеров узлов в точке.",
          "desc_en": "Collection of node numbers at a point.",
          "type": "Integer array"
        },
        {
          "name": "node_weight",
          "desc_ru": "Вес узлов.",
          "desc_en": "Node weight.",
          "type": "Float array"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "mesh_properties_get",
      "level": "2",
      "desc_ru": "Запрос данных о свойствах сетки.",
      "desc_en": "Querying mesh properties data.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс типа сетки.",
          "desc_en": "Mesh type index.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "dim",
          "desc_ru": "Тип сетки (2D или 3D).",
          "desc_en": "Mesh type (2D or 3D).",
          "type": "Integer"
        },
        {
          "name": "element_count_volumetric",
          "desc_ru": "Количество объемных элементов в сетке.",
          "desc_en": "Number of volumetric elements in the mesh.",
          "type": "Integer"
        },
        {
          "name": "element_count_surface",
          "desc_ru": "Количество поверхностных элементов в сетке.",
          "desc_en": "Number of surface elements in the mesh.",
          "type": "Integer"
        },
        {
          "name": "node_count",
          "desc_ru": "Количество узлов.",
          "desc_en": "Number of nodes.",
          "type": "Integer"
        },
        {
          "name": "node_count_internal",
          "desc_ru": "Количество внутренних узлов.",
          "desc_en": "Number of internal nodes.",
          "type": "Integer"
        },
        {
          "name": "node_count_surface",
          "desc_ru": "Количество узлов на поверхности.",
          "desc_en": "Number of surface nodes.",
          "type": "Integer"
        },
        {
          "name": "triangle_count",
          "desc_ru": "Количество треугольников.",
          "desc_en": "Number of triangles.",
          "type": "Integer"
        },
        {
          "name": "triangle_quad_count",
          "desc_ru": "Количество четырехугольников.",
          "desc_en": "Number of quads.",
          "type": "Integer"
        },
        {
          "name": "quadrangle_count",
          "desc_ru": "Количество четырехугольников.",
          "desc_en": "Number of quadrangles.",
          "type": "Integer"
        },
        {
          "name": "tetrahedron_count",
          "desc_ru": "Количество тетраэдров.",
          "desc_en": "Number of tetrahedrons.",
          "type": "Integer"
        },
        {
          "name": "cubic_count",
          "desc_ru": "Количество кубов.",
          "desc_en": "Number of cubics.",
          "type": "Integer"
        },
        {
          "name": "face_count",
          "desc_ru": "Количество поверхностей.",
          "desc_en": "Number of surfaces.",
          "type": "Integer"
        },
        {
          "name": "edge_count",
          "desc_ru": "Количество узлов.",
          "desc_en": "Number of edges.",
          "type": "Integer"
        },
        {
          "name": "apex_count",
          "desc_ru": "Количество вершин.",
          "desc_en": "Number of apex.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "mesh_quadrangles_get",
      "level": "2",
      "desc_ru": "Запрос данных о четырёхугольниках в сетке.",
      "desc_en": "Query data about quads at mesh.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "node_1",
          "desc_ru": "Узел 1.",
          "desc_en": "Node 1.",
          "type": "Integer array"
        },
        {
          "name": "node_2",
          "desc_ru": "Узел 2.",
          "desc_en": "Node 2.",
          "type": "Integer array"
        },
        {
          "name": "node_3",
          "desc_ru": "Узел 3.",
          "desc_en": "Node 3.",
          "type": "Integer array"
        },
        {
          "name": "node_4",
          "desc_ru": "Узел 4.",
          "desc_en": "Node 4.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "mesh_thetrahedrons_get",
      "level": "2",
      "desc_ru": "Запрос данных о тетраэдрах в сетке.",
      "desc_en": "Query data about tetrahedra at mesh.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "node_1",
          "desc_ru": "Узел 1.",
          "desc_en": "Node 1.",
          "type": "Integer array"
        },
        {
          "name": "node_2",
          "desc_ru": "Узел 2.",
          "desc_en": "Node 2.",
          "type": "Integer array"
        },
        {
          "name": "node_3",
          "desc_ru": "Узел 3.",
          "desc_en": "Node 3.",
          "type": "Integer array"
        },
        {
          "name": "node_4",
          "desc_ru": "Узел 4.",
          "desc_en": "Node 4.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "mesh_triangles_get",
      "level": "2",
      "desc_ru": "Запрос данных о треугольниках в сетке.",
      "desc_en": "Query data about triangles at mesh.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "node_1",
          "desc_ru": "Узел 1.",
          "desc_en": "Node 1.",
          "type": "Integer array"
        },
        {
          "name": "node_2",
          "desc_ru": "Узел 2.",
          "desc_en": "Node 2.",
          "type": "Integer array"
        },
        {
          "name": "node_3",
          "desc_ru": "Узел 3.",
          "desc_en": "Node 3.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "mouse_click",
      "level": "1",
      "desc_ru": "Отправка клика мышью.",
      "desc_en": "Sending a mouse click.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [
        {
          "name": "button",
          "desc_ru": "Кнопка мыши.",
          "desc_en": "Mouse button.",
          "type": "Enum (MouseButton)"
        },
        {
          "name": "use_current_pos",
          "desc_ru": "Использование текущей позиции мыши.",
          "desc_en": "Using current mouse position.",
          "type": "Boolean"
        },
        {
          "name": "coord_x",
          "desc_ru": "Координата X точки клика.",
          "desc_en": "X-coordinate of click point.",
          "type": "Integer"
        },
        {
          "name": "coord_y",
          "desc_ru": "Координата Y точки клика.",
          "desc_en": "Y-coordinate of click point.",
          "type": "Integer"
        },
        {
          "name": "ctrl",
          "desc_ru": "CTRL активен.",
          "desc_en": "CTRL is active.",
          "type": "Boolean"
        },
        {
          "name": "alt",
          "desc_ru": "ALT активен.",
          "desc_en": "ALT is active.",
          "type": "Boolean"
        },
        {
          "name": "shift",
          "desc_ru": "SHIFT активен.",
          "desc_en": "SHIFT is active.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "mouse_click_capture",
      "level": "1",
      "desc_ru": "Фиксирование клика мышью.",
      "desc_en": "Mouse click capture.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [],
      "output": [
        {
          "name": "button",
          "desc_ru": "Кнопка мыши.",
          "desc_en": "Mouse button.",
          "type": "Enum (MouseButton)"
        },
        {
          "name": "use_current_pos",
          "desc_ru": "Параметр не используется.",
          "desc_en": "The parameter is not used.",
          "type": "Boolean"
        },
        {
          "name": "coord_x",
          "desc_ru": "Координата X точки клика.",
          "desc_en": "X-coordinate of click point.",
          "type": "Integer"
        },
        {
          "name": "coord_y",
          "desc_ru": "Координата Y точки клика.",
          "desc_en": "Y-coordinate of click point.",
          "type": "Integer"
        },
        {
          "name": "ctrl",
          "desc_ru": "CTRL активен.",
          "desc_en": "CTRL is active.",
          "type": "Boolean"
        },
        {
          "name": "alt",
          "desc_ru": "ALT активен.",
          "desc_en": "ALT is active.",
          "type": "Boolean"
        },
        {
          "name": "shift",
          "desc_ru": "SHIFT активен.",
          "desc_en": "SHIFT is active.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "mouse_pos_get",
      "level": "1",
      "desc_ru": "Запрос данных о положении курсора мыши.",
      "desc_en": "Requesting mouse cursor position data.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [],
      "output": [
        {
          "name": "coord_x",
          "desc_ru": "Координата X расположения курсора мыши.",
          "desc_en": "X-coordinate of the mouse cursor.",
          "type": "Integer"
        },
        {
          "name": "coord_y",
          "desc_ru": "Координата Y расположения курсора мыши.",
          "desc_en": "Y-coordinate of the mouse cursor.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "mouse_pos_set",
      "level": "1",
      "desc_ru": "Установка курсора мыши в определенную точку экрана.",
      "desc_en": "Setting the mouse cursor at a specific point on the screen.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [
        {
          "name": "coord_x",
          "desc_ru": "Координата X расположения курсора мыши.",
          "desc_en": "X-coordinate of the mouse cursor.",
          "type": "Integer"
        },
        {
          "name": "coord_y",
          "desc_ru": "Координата Y расположения курсора мыши.",
          "desc_en": "Y-coordinate of the mouse cursor.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "msg_box",
      "level": "1",
      "desc_ru": "Вызов уведомления на экран.",
      "desc_en": "Call a notification on the screen.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [
        {
          "name": "msg",
          "desc_ru": "Сообщение уведомления.",
          "desc_en": "Notification message.",
          "type": "String"
        },
        {
          "name": "button_ok",
          "desc_ru": "Кнопка \"OK\" отображается.",
          "desc_en": "\"OK\" button is displayed.",
          "type": "Boolean"
        },
        {
          "name": "button_cancel",
          "desc_ru": "Кнопка \"Отмена\" отображается.",
          "desc_en": "\"Cancel\" button is displayed.",
          "type": "Boolean"
        },
        {
          "name": "button_yes",
          "desc_ru": "Кнопка \"Да\" отображается.",
          "desc_en": "\"Yes\" button is displayed.",
          "type": "Boolean"
        },
        {
          "name": "button_no",
          "desc_ru": "Кнопка \"Нет\" отображается.",
          "desc_en": "\"No\" button is displayed.",
          "type": "Boolean"
        },
        {
          "name": "button_retry",
          "desc_ru": "Кнопка \"Повторить\" отображается.",
          "desc_en": "\"Retry\" button is displayed.",
          "type": "Boolean"
        },
        {
          "name": "button_continue",
          "desc_ru": "Кнопка \"Продолжить\" отображается.",
          "desc_en": "\"Continue\" button is displayed.",
          "type": "Boolean"
        },
        {
          "name": "button_close",
          "desc_ru": "Кнопка \"Закрыть\" отображается.",
          "desc_en": "\"Close\" button is displayed.",
          "type": "Boolean"
        },
        {
          "name": "button_save_as",
          "desc_ru": "Кнопка \"Сохранить как\" отображается.",
          "desc_en": "\"Save as\" button is displayed.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "button",
          "desc_ru": "Кнопка, которая была нажата.",
          "desc_en": "The button that was pressed.",
          "type": "Enum (DialogButton)"
        }
      ]
    },
    {
      "name": "object_apply_transform",
      "level": "1",
      "desc_ru": "Преобразование объекта.",
      "desc_en": "Object apply transform.",
      "group": [
        "Позиционирование"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "matrix4x4",
          "desc_ru": "Матрица 4х4.",
          "desc_en": "Matrix 4x4.",
          "type": "Float array"
        }
      ],
      "output": []
    },
    {
      "name": "object_axes_get",
      "level": "1",
      "desc_ru": "Запрос данных об осях объекта.",
      "desc_en": "Requesting data about the object axes.",
      "group": [
        "Оси",
        "Списки"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Оси объекта.",
          "desc_en": "Object axes.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "object_bound_conds_get",
      "level": "1",
      "desc_ru": "Запрос данных о граничных условиях объекта.",
      "desc_en": "Requesting data about the object boundary conditions.",
      "group": [
        "Граничные условия",
        "Списки"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров граничных условий объекта.",
          "desc_en": "Array of object boundary conditions numbers.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "object_collections",
      "level": "1",
      "desc_ru": "Коллекции объекта.",
      "desc_en": "Object collections.",
      "group": [
        "Списки"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип.",
          "desc_en": "Type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id коллекции.",
          "desc_en": "Collection id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "collections",
          "desc_ru": "Коллекции.",
          "desc_en": "Collections.",
          "type": "Enum (CollectionId) array"
        }
      ]
    },
    {
      "name": "object_contact",
      "level": "1",
      "desc_ru": "Сведение объектов в контакт в определенном направлении.",
      "desc_en": "Putting objects in contact in a defined direction.",
      "group": [
        "Позиционирование"
      ],
      "input": [
        {
          "name": "moving_object_type",
          "desc_ru": "Тип перемещаемого объекта.",
          "desc_en": "Moving object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "moving_object_id",
          "desc_ru": "Id перемещаемого объекта.",
          "desc_en": "Moving object id.",
          "type": "Integer"
        },
        {
          "name": "target_object_type",
          "desc_ru": "Тип объекта, к которому сводится контакт.",
          "desc_en": "Type of object to which contact is put.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "target_object_id",
          "desc_ru": "Id объекта, к которому сводится контакт.",
          "desc_en": "Id of object to which contact is put.",
          "type": "Integer"
        },
        {
          "name": "direction",
          "desc_ru": "Ось, вдоль которой осуществляется сведение в контакт.",
          "desc_en": "Axis along which contact is made.",
          "type": "Enum (Direction)"
        },
        {
          "name": "reverse_direction",
          "desc_ru": "Обратное направление оси.",
          "desc_en": "Reverse axis direction.",
          "type": "Boolean"
        },
        {
          "name": "move_dependent_objects",
          "desc_ru": "Переместить зависимые объекты.",
          "desc_en": "To move dependent object.",
          "type": "Boolean"
        },
        {
          "name": "move_additional_objects",
          "desc_ru": "Переместить дополнительные объекты.",
          "desc_en": "To move additional objects.",
          "type": "Enum (ObjectId) array"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Расстояние, на которое переместился один из контактирующих объектов.",
          "desc_en": "The distance that one of the contacting objects has moved.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "object_copy",
      "level": "1",
      "desc_ru": "Копирование объекта.",
      "desc_en": "Copying an object.",
      "group": [
        "Объект",
        "Геометрия"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "new_type",
          "desc_ru": "Тип создаваемого объекта.",
          "desc_en": "Type of the object being created.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "new_id",
          "desc_ru": "Id создаваемого объекта.",
          "desc_en": "Id of the object being created.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "object_delete",
      "level": "1",
      "desc_ru": "Удаление объекта.",
      "desc_en": "Deleting an object.",
      "group": [
        "Объект"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "object_display_mode_get",
      "level": "1",
      "desc_ru": "Получение данных о режиме отображения объекта.",
      "desc_en": "Getting data about the object display mode.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mode",
          "desc_ru": "Режим отображения объекта.",
          "desc_en": "Object display mode.",
          "type": "Enum (DisplayModes)"
        },
        {
          "name": "value",
          "desc_ru": "Параметр не используется.",
          "desc_en": "Parameter is not used.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Режим включен.",
          "desc_en": "Mode is enabled.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "object_display_mode_set",
      "level": "1",
      "desc_ru": "Установка режима отображения объекта.",
      "desc_en": "Setting the object display mode.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mode",
          "desc_ru": "Режим отображения объекта.",
          "desc_en": "Object display mode.",
          "type": "Enum (DisplayModes)"
        },
        {
          "name": "value",
          "desc_ru": "Включить режим.",
          "desc_en": "Enable mode.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "object_displayed_name",
      "level": "1",
      "desc_ru": "Запрос отображаемого имени объекта.",
      "desc_en": "Request the displayed name of an object.",
      "group": [
        "Объект"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "name",
          "desc_ru": "Имя объекта.",
          "desc_en": "Object name.",
          "type": "String"
        }
      ]
    },
    {
      "name": "object_domains_get",
      "level": "1",
      "desc_ru": "Запрос данных о граничных условиях в объекте.",
      "desc_en": "Requesting data about domains in the object.",
      "group": [
        "Области",
        "Списки"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив номеров граничных условий в объекте.",
          "desc_en": "Array of object domains numbers.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "object_exists",
      "level": "1",
      "desc_ru": "Проверка существования объекта.",
      "desc_en": "Object existence check.",
      "group": [
        "Объект"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Объект существует.",
          "desc_en": "Object exists.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "object_find_by_color",
      "level": "1",
      "desc_ru": "Поиск единичного объекта по цвету.",
      "desc_en": "Find singular object by color.",
      "group": [
        "Объект"
      ],
      "input": [
        {
          "name": "color_R",
          "desc_ru": "Интенсивность красной составляющей цвета.",
          "desc_en": "The intensity of the color red component.",
          "type": "Integer"
        },
        {
          "name": "color_G",
          "desc_ru": "Интенсивность зеленой составляющей цвета.",
          "desc_en": "The intensity of the color green component.",
          "type": "Integer"
        },
        {
          "name": "color_B",
          "desc_ru": "Интенсивность синей составляющей цвета.",
          "desc_en": "The intensity of the color blue component.",
          "type": "Integer"
        },
        {
          "name": "pick_by_body_color",
          "desc_ru": "Выбрать по цвету тела.",
          "desc_en": "Pick by body color.",
          "type": "Boolean"
        },
        {
          "name": "pick_by_face_color",
          "desc_ru": "Выбрать по цвету грани.",
          "desc_en": "Pick by face color.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "object_find_by_surface_point",
      "level": "1",
      "desc_ru": "Поиск объекта по точке на поверхности.",
      "desc_en": "Finding an object by a point on a surface.",
      "group": [
        "Объект"
      ],
      "input": [
        {
          "name": "point_x",
          "desc_ru": "Координата x точки.",
          "desc_en": "Point x-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата y точки.",
          "desc_en": "Point y-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата z точки.",
          "desc_en": "Point z-coordinate.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "object_inherit",
      "level": "1",
      "desc_ru": "Наследовать объект из предыдущей операции.",
      "desc_en": "Inherit object from previous operation.",
      "group": [
        "Объект",
        "Геометрия"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "object_is_inherited",
      "level": "1",
      "desc_ru": "Получение данных о том, наследован ли объект.",
      "desc_en": "Getting data about whether an object is inherited.",
      "group": [
        "Объект",
        "Геометрия"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Объект унаследован.",
          "desc_en": "Object is inherited.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "object_move",
      "level": "1",
      "desc_ru": "Перемещение объекта.",
      "desc_en": "Moving an object.",
      "group": [
        "Позиционирование"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "vector_x",
          "desc_ru": "Координата x вектора перемещения.",
          "desc_en": "The x-coordinate of the displacement vector.",
          "type": "Float"
        },
        {
          "name": "vector_y",
          "desc_ru": "Координата y вектора перемещения.",
          "desc_en": "The y-coordinate of the displacement vector.",
          "type": "Float"
        },
        {
          "name": "vector_z",
          "desc_ru": "Координата z вектора перемещения.",
          "desc_en": "The z-coordinate of the displacement vector.",
          "type": "Float"
        },
        {
          "name": "move_dependent_objects",
          "desc_ru": "Перемещать зависимые объекты.",
          "desc_en": "To move dependent objects.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "object_move_along_axis",
      "level": "1",
      "desc_ru": "Перемещение объекта вдоль оси.",
      "desc_en": "Moving an object along an axis.",
      "group": [
        "Позиционирование"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "axis",
          "desc_ru": "Id оси объекта.",
          "desc_en": "Object axis id.",
          "type": "Integer"
        },
        {
          "name": "distance",
          "desc_ru": "Расстояние.",
          "desc_en": "Distance.",
          "type": "Float"
        },
        {
          "name": "move_dependent_objects",
          "desc_ru": "Перемещать зависимые объекты.",
          "desc_en": "To move dependent objects.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "object_rotate",
      "level": "1",
      "desc_ru": "Поворот объекта.",
      "desc_en": "Object rotation.",
      "group": [
        "Позиционирование"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "point_x",
          "desc_ru": "Координата x точки, относительно которой происходит вращение.",
          "desc_en": "X-coordinate of the point around which rotation occurs.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата y точки, относительно которой происходит вращение.",
          "desc_en": "Y-coordinate of the point around which rotation occurs.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата z точки, относительно которой происходит вращение.",
          "desc_en": "Z-coordinate of the point around which rotation occurs.",
          "type": "Float"
        },
        {
          "name": "vector_x",
          "desc_ru": "Координата x вектора вращения.",
          "desc_en": "The x-coordinate of the rotation vector.",
          "type": "Float"
        },
        {
          "name": "vector_y",
          "desc_ru": "Координата y вектора вращения.",
          "desc_en": "The y-coordinate of the rotation vector.",
          "type": "Float"
        },
        {
          "name": "vector_z",
          "desc_ru": "Координата z вектора вращения.",
          "desc_en": "The z-coordinate of the rotation vector.",
          "type": "Float"
        },
        {
          "name": "angle",
          "desc_ru": "Угол поворота.",
          "desc_en": "Rotation angle.",
          "type": "Float"
        },
        {
          "name": "rotate_dependent_objects",
          "desc_ru": "Вращать зависимые объекты.",
          "desc_en": "To rotate dependent objects.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "object_rotate_around_axis",
      "level": "1",
      "desc_ru": "Поворот объекта вокруг его оси.",
      "desc_en": "Object rotation around its axis.",
      "group": [
        "Позиционирование"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "axis",
          "desc_ru": "Id оси объекта.",
          "desc_en": "Object axis id.",
          "type": "Integer"
        },
        {
          "name": "angle",
          "desc_ru": "Угол поворота.",
          "desc_en": "Rotation angle.",
          "type": "Float"
        },
        {
          "name": "rotate_dependent_objects",
          "desc_ru": "Вращать зависимые объекты.",
          "desc_en": "To rotate dependent objects.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "object_set_type_by_color",
      "level": "1",
      "desc_ru": "Установка типа единичного объекта по его цвету.",
      "desc_en": "Setting singular object type by its color.",
      "group": [
        "Объект"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Устанавливаемый тип объекта.",
          "desc_en": "Object type to be set.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Устанавливаемый id объекта.",
          "desc_en": "Object id to be set.",
          "type": "Integer"
        },
        {
          "name": "color_R",
          "desc_ru": "Интенсивность красной составляющей цвета.",
          "desc_en": "The intensity of the color red component.",
          "type": "Integer"
        },
        {
          "name": "color_G",
          "desc_ru": "Интенсивность зеленой составляющей цвета.",
          "desc_en": "The intensity of the color green component.",
          "type": "Integer"
        },
        {
          "name": "color_B",
          "desc_ru": "Интенсивность синей составляющей цвета.",
          "desc_en": "The intensity of the color blue component.",
          "type": "Integer"
        },
        {
          "name": "pick_by_body_color",
          "desc_ru": "Выбрать по цвету тела.",
          "desc_en": "Pick by body color.",
          "type": "Boolean"
        },
        {
          "name": "pick_by_face_color",
          "desc_ru": "Выбрать по цвету грани.",
          "desc_en": "Pick by face color.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "object_set_type_by_surface_point",
      "level": "1",
      "desc_ru": "Установка типа объекта по точке на его поверхности.",
      "desc_en": "Setting the type of an object by a point on its surface.",
      "group": [
        "Объект"
      ],
      "input": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "point_x",
          "desc_ru": "Координата X точки на поверхности объекта.",
          "desc_en": "X-coordinate of the point on the object surface.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата Y точки на поверхности объекта.",
          "desc_en": "Y-coordinate of the point on the object surface.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата Z точки на поверхности объекта.",
          "desc_en": "Z-coordinate of the point on the object surface.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "object_type_set",
      "level": "1",
      "desc_ru": "Установка типа объекта.",
      "desc_en": "Setting object type.",
      "group": [
        "Объект"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "new_type",
          "desc_ru": "Новый тип объекта.",
          "desc_en": "New object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "new_id",
          "desc_ru": "Новый id объекта.",
          "desc_en": "New object id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "object_type_set_in_direction",
      "level": "1",
      "desc_ru": "Установка типа объекта по направлению.",
      "desc_en": "Setting object type by direction.",
      "group": [
        "Объект"
      ],
      "input": [
        {
          "name": "vector_x",
          "desc_ru": "Направление вектора нормали вдоль оси X.",
          "desc_en": "Direction of the normal vector along the X-axis.",
          "type": "Float"
        },
        {
          "name": "vector_y",
          "desc_ru": "Направление вектора нормали вдоль оси Y.",
          "desc_en": "Direction of the normal vector along the Y-axis.",
          "type": "Float"
        },
        {
          "name": "vector_z",
          "desc_ru": "Направление вектора нормали вдоль оси Z.",
          "desc_en": "Direction of the normal vector along the Z-axis.",
          "type": "Float"
        },
        {
          "name": "pick_specified_type",
          "desc_ru": "Тип объектов, которые нужно выбирать.",
          "desc_en": "Type of objects to pick.",
          "type": "Boolean"
        },
        {
          "name": "pick_type",
          "desc_ru": "Выбирать определенный тип объектов.",
          "desc_en": "To pick a specific type of objects.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "objects",
          "desc_ru": "Массив из номеров объектов.",
          "desc_en": "Array of objects numbers.",
          "type": "Enum (ObjectId) array"
        }
      ],
      "output": []
    },
    {
      "name": "objects_find_by_color",
      "level": "1",
      "desc_ru": "Поиск объектов по цвету.",
      "desc_en": "Finding objects by color.",
      "group": [
        "Объект"
      ],
      "input": [
        {
          "name": "color_R",
          "desc_ru": "Интенсивность красной составляющей цвета.",
          "desc_en": "The intensity of the color red component.",
          "type": "Integer"
        },
        {
          "name": "color_G",
          "desc_ru": "Интенсивность зеленой составляющей цвета.",
          "desc_en": "The intensity of the color green component.",
          "type": "Integer"
        },
        {
          "name": "color_B",
          "desc_ru": "Интенсивность синей составляющей цвета.",
          "desc_en": "The intensity of the color blue component.",
          "type": "Integer"
        },
        {
          "name": "pick_by_body_color",
          "desc_ru": "Выбрать по цвету тела.",
          "desc_en": "Pick by body color.",
          "type": "Boolean"
        },
        {
          "name": "pick_by_face_color",
          "desc_ru": "Выбрать по цвету грани.",
          "desc_en": "Pick by face color.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров найденных объектов.",
          "desc_en": "Array of found objects numbers.",
          "type": "Enum (ObjectId) array"
        }
      ]
    },
    {
      "name": "objects_get_in_direction",
      "level": "1",
      "desc_ru": "Поиск объектов в заданном направлении.",
      "desc_en": "Finding objects in a user defined direction.",
      "group": [
        "Объект"
      ],
      "input": [
        {
          "name": "vector_x",
          "desc_ru": "Координата x вектора.",
          "desc_en": "The x-coordinate of the vector.",
          "type": "Float"
        },
        {
          "name": "vector_y",
          "desc_ru": "Координата y вектора.",
          "desc_en": "The y-coordinate of the vector.",
          "type": "Float"
        },
        {
          "name": "vector_z",
          "desc_ru": "Координата z вектора.",
          "desc_en": "The z-coordinate of the vector.",
          "type": "Float"
        },
        {
          "name": "pick_specified_type",
          "desc_ru": "Выбрать определенный тип объектов.",
          "desc_en": "Select a specific type of objects.",
          "type": "Boolean"
        },
        {
          "name": "pick_type",
          "desc_ru": "Выбрать тип объектов.",
          "desc_en": "Select type of objects.",
          "type": "Enum (ObjectType)"
        }
      ],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Перечень найденных объектов.",
          "desc_en": "List of found objects.",
          "type": "Enum (ObjectId) array"
        }
      ]
    },
    {
      "name": "operation_chains_get",
      "level": "1",
      "desc_ru": "Получение данных об операциях в цепочке.",
      "desc_en": "Getting data about operations in the chain.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Перечень операций в цепочке.",
          "desc_en": "List of the operations in the chain.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "operation_check",
      "level": "1",
      "desc_ru": "Проверка операции на наличие неисправностей.",
      "desc_en": "Сhecking the operations for defects.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "errors",
          "desc_ru": "Ошибки.",
          "desc_en": "Errors.",
          "type": "String array"
        },
        {
          "name": "warnings",
          "desc_ru": "Предупреждения.",
          "desc_en": "Warnings.",
          "type": "String array"
        }
      ]
    },
    {
      "name": "operation_copy",
      "level": "1",
      "desc_ru": "Копирование операции.",
      "desc_en": "Copy the operation.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id создаваемой операции.",
          "desc_en": "Id of the operation being created.",
          "type": "Integer"
        },
        {
          "name": "source",
          "desc_ru": "Id копируемой операции.",
          "desc_en": "Id of the copied operation.",
          "type": "Integer"
        },
        {
          "name": "name",
          "desc_ru": "Название операции.",
          "desc_en": "Operation name.",
          "type": "String"
        },
        {
          "name": "process_name",
          "desc_ru": "Название процесса (параметр может быть использован, когда создается копия процесса).",
          "desc_en": "Process name (the parameter can be used when a copy of the process is created).",
          "type": "String"
        },
        {
          "name": "make_copy_active",
          "desc_ru": "Сделать созданную копию активной.",
          "desc_en": "Make the created copy active.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id создаваемой операции.",
          "desc_en": "Id of the operation being created.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "operation_copy_from_parent",
      "level": "1",
      "desc_ru": "Копирование данных из предыдущей операции.",
      "desc_en": "Copying data from the previous operation.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        },
        {
          "name": "copy_bound_conds",
          "desc_ru": "Копировать граничные условия.",
          "desc_en": "To copy boundary conditions.",
          "type": "Boolean"
        },
        {
          "name": "copy_tools",
          "desc_ru": "Копировать инструменты.",
          "desc_en": "To copy tools.",
          "type": "Boolean"
        },
        {
          "name": "copy_workpiece",
          "desc_ru": "Копировать заготовку.",
          "desc_en": "To copy the workpiece.",
          "type": "Boolean"
        },
        {
          "name": "inherit_results",
          "desc_ru": "Наследовать результаты расчета.",
          "desc_en": "To inherit calculation results.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "operation_create",
      "level": "1",
      "desc_ru": "Создание операции.",
      "desc_en": "Creating an operation.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        },
        {
          "name": "name",
          "desc_ru": "Наименование операции.",
          "desc_en": "Operation name.",
          "type": "String"
        },
        {
          "name": "parent",
          "desc_ru": "Id родительского процесса (используется при значении InsertAfterParent параметра creation_mode).",
          "desc_en": "Parent process id (used when InsertAfterParent value is set to create_mode).",
          "type": "Integer"
        },
        {
          "name": "creation_mode",
          "desc_ru": "Режим создания операции.",
          "desc_en": "Operation creation mode.",
          "type": "Enum (OperationCreationMode)"
        },
        {
          "name": "process_name",
          "desc_ru": "Наименование процесса (используется при значении CreateAsNewProcess параметра creation_mode).",
          "desc_en": "Process name (used when CreateAsNewProcess value is set to create_mode).",
          "type": "String"
        },
        {
          "name": "parent_defined",
          "desc_ru": "Параметр не используется.",
          "desc_en": "The parameter is not used.",
          "type": ""
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "operation_cut",
      "level": "1",
      "desc_ru": "Вырезать операцию.",
      "desc_en": "Cut operation.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "operation_delete",
      "level": "1",
      "desc_ru": "Удаление выбранной и последующих операций в процессе.",
      "desc_en": "Deleting selected and subsequent operation in the process.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "operation_exists",
      "level": "1",
      "desc_ru": "Проверка существования операции.",
      "desc_en": "Checking if the operation exists.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Существует ли операция.",
          "desc_en": "If operation does exist.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "operation_get",
      "level": "1",
      "desc_ru": "Получение данных об операции.",
      "desc_en": "Getting an operation info.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        },
        {
          "name": "type",
          "desc_ru": "Тип операции.",
          "desc_en": "Operation type.",
          "type": "Enum (OperationType)"
        },
        {
          "name": "name",
          "desc_ru": "Наименование операции.",
          "desc_en": "Operation name.",
          "type": "String"
        },
        {
          "name": "dsc",
          "desc_ru": "Комментарий.",
          "desc_en": "A comment.",
          "type": "String"
        },
        {
          "name": "childs",
          "desc_ru": "Дочерние операции.",
          "desc_en": "Child operations.",
          "type": "Enum (Operation) array"
        }
      ]
    },
    {
      "name": "operation_get_by_uid",
      "level": "1",
      "desc_ru": "Проверка существования операции (?).",
      "desc_en": "Checking for the existence of an operation (?).",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "operation_get_current",
      "level": "1",
      "desc_ru": "Показать текущую операцию.",
      "desc_en": "Show the current operation.",
      "group": [
        "Операция"
      ],
      "input": [],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "operation_graph_get",
      "level": "1",
      "desc_ru": "Получение данных об операции.",
      "desc_en": "Getting an operation info.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "parent_defined",
          "desc_ru": "Определена ли родительская операция.",
          "desc_en": "If parent operation defined.",
          "type": "Boolean"
        },
        {
          "name": "parent",
          "desc_ru": "Родительская операция.",
          "desc_en": "Parent operation.",
          "type": "Integer"
        },
        {
          "name": "childs",
          "desc_ru": "Дочерние операции.",
          "desc_en": "Child operations.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "operation_insert",
      "level": "1",
      "desc_ru": "Вставить предварительную операцию.",
      "desc_en": "Insert a parent operation.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id создаваемой операции.",
          "desc_en": "Id of the created operation.",
          "type": "Integer"
        },
        {
          "name": "name",
          "desc_ru": "Название операции.",
          "desc_en": "Name of the operation.",
          "type": "String"
        },
        {
          "name": "childs",
          "desc_ru": "Операции, перед которыми нужно вставить новую.",
          "desc_en": "Operations that need to be preceded by a new one.",
          "type": "Integer array"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id вставленной операции.",
          "desc_en": "Id of the inserted operation.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "operation_process_get",
      "level": "1",
      "desc_ru": "Определение процесса, к которому относится операция.",
      "desc_en": "Determining the process to which the operation belongs.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "operation_set_current",
      "level": "1",
      "desc_ru": "Установка активной операции.",
      "desc_en": "Setting the active operation.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "operation_set_next_in_chain",
      "level": "1",
      "desc_ru": "Установка следующей операции в цепочке в качестве активной.",
      "desc_en": "Setting the next operation in the chain as active.",
      "group": [
        "Операция"
      ],
      "input": [],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id операции, ставшей активной.",
          "desc_en": "Id of the operation that became active.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "operation_set_prev_in_chain",
      "level": "1",
      "desc_ru": "Установка предыдущей операции в цепочке в качестве активной.",
      "desc_en": "Setting the previous operation in the chain as active.",
      "group": [
        "Операция"
      ],
      "input": [],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id операции, ставшей активной.",
          "desc_en": "Id of the operation that became active.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "operation_template_set",
      "level": "1",
      "desc_ru": "Установка шаблона операции.",
      "desc_en": "Setting an operation template.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "path",
          "desc_ru": "Путь к шаблону операции.",
          "desc_en": "Path to the operation template.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "operation_tree",
      "level": "1",
      "desc_ru": "Получение данных о дереве операций.",
      "desc_en": "Getting data about the operations tree.",
      "group": [
        "Операция"
      ],
      "input": [],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        },
        {
          "name": "type",
          "desc_ru": "Тип операции.",
          "desc_en": "Operation type.",
          "type": "Enum (OperationType)"
        },
        {
          "name": "name",
          "desc_ru": "Название операции.",
          "desc_en": "Operation name.",
          "type": "String"
        },
        {
          "name": "dsc",
          "desc_ru": "Комментарий.",
          "desc_en": "Comment.",
          "type": "String"
        },
        {
          "name": "childs",
          "desc_ru": "Дочерние операции.",
          "desc_en": "Child operations.",
          "type": "Enum (Operation) array"
        }
      ]
    },
    {
      "name": "operation_uid",
      "level": "1",
      "desc_ru": "Возвращает id операции.",
      "desc_en": "Returns the id of the operation.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции в цепочке.",
          "desc_en": "Operaition id in chain.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "panel_positions_get",
      "level": "1",
      "desc_ru": "Запрос данных о положениях панелей.",
      "desc_en": "Requesting panels positions data.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [],
      "output": [
        {
          "name": "frame_x",
          "desc_ru": "Координата X окна программы.",
          "desc_en": "X-coordinate of the program window.",
          "type": "Integer"
        },
        {
          "name": "frame_y",
          "desc_ru": "Координата Y окна программы.",
          "desc_en": "Y-coordinate of the program window.",
          "type": "Integer"
        },
        {
          "name": "view_x",
          "desc_ru": "Координата X окна просмотра результатов.",
          "desc_en": "Results overview window X-coordinate.",
          "type": "Integer"
        },
        {
          "name": "view_y",
          "desc_ru": "Координата Y окна просмотра результатов.",
          "desc_en": "Results overview window Y-coordinate.",
          "type": "Integer"
        },
        {
          "name": "view_width",
          "desc_ru": "Ширина окна просмотра результатов.",
          "desc_en": "Results overview window width.",
          "type": "Integer"
        },
        {
          "name": "view_heigth",
          "desc_ru": "Высота окна просмотра результатов.",
          "desc_en": "Results overview window height.",
          "type": "Integer"
        },
        {
          "name": "left_panel_x",
          "desc_ru": "Координата X панели исходных данных.",
          "desc_en": "Source data control X-coordinate.",
          "type": "Integer"
        },
        {
          "name": "left_panel_y",
          "desc_ru": "Координата Y панели исходных данных.",
          "desc_en": "Source data control Y-coordinate.",
          "type": "Integer"
        },
        {
          "name": "left_panel_width",
          "desc_ru": "Ширина панели исходных данных.",
          "desc_en": "Source data control panel width.",
          "type": "Integer"
        },
        {
          "name": "left_panel_height",
          "desc_ru": "Ширина панели исходных данных.",
          "desc_en": "Source data control panel width.",
          "type": "Integer"
        },
        {
          "name": "right_panel_x",
          "desc_ru": "Координата X правой панели (панель шкалы + панель выбора полей).",
          "desc_en": "Right panel (scale bar + field selection bar) X-coordinate.",
          "type": "Integer"
        },
        {
          "name": "right_panel_y",
          "desc_ru": "Координата Y правой панели (панель шкалы + панель выбора полей).",
          "desc_en": "Right panel (scale bar + field selection bar) Y-coordinate.",
          "type": "Integer"
        },
        {
          "name": "right_panel_width",
          "desc_ru": "Ширина правой панели (панель шкалы + панель выбора полей).",
          "desc_en": "Right panel (scale bar + field selection bar) width.",
          "type": "Integer"
        },
        {
          "name": "right_panel_height",
          "desc_ru": "Высота правой панели (панель шкалы + панель выбора полей).",
          "desc_en": "Right panel (scale bar + field selection bar) height.",
          "type": "Integer"
        },
        {
          "name": "bottom_panel_x",
          "desc_ru": "Координата X панели управления расчетом.",
          "desc_en": "Simulation control panel X-coordinate.",
          "type": "Integer"
        },
        {
          "name": "bottom_panel_y",
          "desc_ru": "Координата Y панели управления расчетом.",
          "desc_en": "Simulation control panel Y-coordinate.",
          "type": "Integer"
        },
        {
          "name": "bottom_panel_width",
          "desc_ru": "Ширина панели управления расчетом.",
          "desc_en": "Simulation control panel width.",
          "type": "Integer"
        },
        {
          "name": "bottom_panel_heigth",
          "desc_ru": "Высота панели управления расчетом.",
          "desc_en": "Simulation control panel height.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "panel_sizes_get",
      "level": "1",
      "desc_ru": "Запрос данных о размерах панелей.",
      "desc_en": "Requesting panel sizes data.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [],
      "output": [
        {
          "name": "view_heigth",
          "desc_ru": "Высота окна просмотра результатов.",
          "desc_en": "Results overview window height.",
          "type": "Integer"
        },
        {
          "name": "view_width",
          "desc_ru": "Ширина окна просмотра результатов.",
          "desc_en": "Results overview window width.",
          "type": "Integer"
        },
        {
          "name": "left_panel_width",
          "desc_ru": "Ширина панели исходных данных.",
          "desc_en": "Source data control panel width.",
          "type": "Integer"
        },
        {
          "name": "right_panel_width",
          "desc_ru": "Ширина правой панели (панель шкалы + панель выбора полей).",
          "desc_en": "Right panel (scale bar + field selection bar) width.",
          "type": "Integer"
        },
        {
          "name": "bottom_panel_heigth",
          "desc_ru": "Высота панели управления расчетом.",
          "desc_en": "Simulation control panel height.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "panel_sizes_set",
      "level": "1",
      "desc_ru": "Установка размеров панелей.",
      "desc_en": "Setting the size of panels.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [
        {
          "name": "view_heigth",
          "desc_ru": "Высота окна просмотра результатов.",
          "desc_en": "Results overview window height.",
          "type": "Integer"
        },
        {
          "name": "view_width",
          "desc_ru": "Ширина окна просмотра результатов.",
          "desc_en": "Results overview window width.",
          "type": "Integer"
        },
        {
          "name": "left_panel_width",
          "desc_ru": "Ширина панели исходных данных.",
          "desc_en": "Source data control panel width.",
          "type": "Integer"
        },
        {
          "name": "right_panel_width",
          "desc_ru": "Ширина правой панели (панель шкалы + панель выбора полей).",
          "desc_en": "Right panel (scale bar + field selection bar) width.",
          "type": "Integer"
        },
        {
          "name": "bottom_panel_heigth",
          "desc_ru": "Высота панели управления расчетом.",
          "desc_en": "Simulation control panel height.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "print",
      "level": "0",
      "desc_ru": "Вывод сообщения в журнал расчета.",
      "desc_en": "Message output to the simulation message log.",
      "group": [
        "Средства отладки",
        "QForm",
        "Интерфейс пользователя"
      ],
      "input": [
        {
          "name": "msg",
          "desc_ru": "Сообщение.",
          "desc_en": "Message.",
          "type": "String"
        },
        {
          "name": "type",
          "desc_ru": "Тип сообщения.",
          "desc_en": "Message type.",
          "type": "Enum (MessageType)"
        }
      ],
      "output": []
    },
    {
      "name": "process_chain_get_current",
      "level": "1",
      "desc_ru": "Запрос данных о последней операции в активной цепочке текущего процесса.",
      "desc_en": "Requesting last operation data in active chain of the current process.",
      "group": [
        "Операция"
      ],
      "input": [],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "process_chain_get_current_operations",
      "level": "1",
      "desc_ru": "Запрос данных об операциях в активной цепочке текущего процесса.",
      "desc_en": "Requesting operations data in active chain of the current process.",
      "group": [
        "Операция"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из id операций в активной цепочке текущего процесса.",
          "desc_en": "An array of operations id of the current process.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "process_chain_get_operations",
      "level": "1",
      "desc_ru": "Запрос данных об операциях, предшествующих в цепочке данной.",
      "desc_en": "Requesting data on operations preceding this one in the chain.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив, составленный из id данной операции и id операций, предшествовавших ей в цепочке.",
          "desc_en": "An array composed of this operation id and ids of operations preceding it in the chain.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "process_chain_set_current",
      "level": "1",
      "desc_ru": "Установка текущей цепочки операций.",
      "desc_en": "Setting the current operations chains.",
      "group": [
        "Операция"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "processes_get",
      "level": "1",
      "desc_ru": "Запрос данных о всех процессах в проекте.",
      "desc_en": "Requesting data about all processes in the project.",
      "group": [
        "Операция",
        "Списки"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров процессов в проекте.",
          "desc_en": "An array of process numbers in the project.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "project_ask_save",
      "level": "1",
      "desc_ru": "Запрос на сохранение проекта.",
      "desc_en": "Request to save the project.",
      "group": [
        "Проект"
      ],
      "input": [],
      "output": [
        {
          "name": "value",
          "desc_ru": "Успешно или нет.",
          "desc_en": "Successful or not.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "project_file_get",
      "level": "1",
      "desc_ru": "Запрос данных о пути текущего *.qform-файла.",
      "desc_en": "Requesting information about the path of the current *.qform file.",
      "group": [
        "Проект"
      ],
      "input": [],
      "output": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу с проектом.",
          "desc_en": "Path to the project file.",
          "type": "String"
        }
      ]
    },
    {
      "name": "project_new",
      "level": "1",
      "desc_ru": "Создание нового проекта.",
      "desc_en": "Creating a new project.",
      "group": [
        "Проект"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "project_open",
      "level": "0",
      "desc_ru": "Открытие проекта.",
      "desc_en": "Project opening.",
      "group": [
        "Проект"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу с проектом.",
          "desc_en": "Path to the project file.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "project_open_as_copy",
      "level": "0",
      "desc_ru": "Открытие копии проекта.",
      "desc_en": "Opening a copy of the project.",
      "group": [
        "Проект"
      ],
      "input": [
        {
          "name": "source_path",
          "desc_ru": "Путь к существующему файлу с проектом.",
          "desc_en": "Path to the existing project file.",
          "type": "String"
        },
        {
          "name": "target_path",
          "desc_ru": "Путь расположения создаваемой копии проекта.",
          "desc_en": "The path of the project copy to be created.",
          "type": "String"
        },
        {
          "name": "copy_simulation_results",
          "desc_ru": "Копировать ли результаты симуляции.",
          "desc_en": "Whether to copy simulation results.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "project_open_or_create",
      "level": "0",
      "desc_ru": "Открыть проект или создать новый.",
      "desc_en": "Open a project or create a new one.",
      "group": [
        "Проект"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь к файлу с проектом.",
          "desc_en": "Path to the project file.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "project_path_get",
      "level": "1",
      "desc_ru": "Получение пути к папке, где содержится файл с проектом.",
      "desc_en": "Getting the path to the project file folder.",
      "group": [
        "Проект"
      ],
      "input": [],
      "output": [
        {
          "name": "file",
          "desc_ru": "Путь к папке с файлом проекта.",
          "desc_en": "Path to the project file folder.",
          "type": "String"
        }
      ]
    },
    {
      "name": "project_save",
      "level": "1",
      "desc_ru": "Сохранение проекта.",
      "desc_en": "Project saving.",
      "group": [
        "Проект"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "project_save_as",
      "level": "1",
      "desc_ru": "Сохранение проекта как.",
      "desc_en": "Saving project as.",
      "group": [
        "Проект"
      ],
      "input": [
        {
          "name": "file",
          "desc_ru": "Путь, куда будет сохранен проект.",
          "desc_en": "The path where the project will be saved.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "project_save_as_template",
      "level": "1",
      "desc_ru": "Сохранение проекта в качестве шаблона.",
      "desc_en": "Saving the project as a template.",
      "group": [
        "Проект",
        "База данных"
      ],
      "input": [
        {
          "name": "path",
          "desc_ru": "Путь, куда будет сохранен шаблон.",
          "desc_en": "The path where the template will be saved.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "property_get",
      "level": "1",
      "desc_ru": "Получение значения свойства.",
      "desc_en": "Property get.",
      "group": [
        "Свойства"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "path",
          "desc_ru": "Путь к свойству.",
          "desc_en": "Property path.",
          "type": "String"
        },
        {
          "name": "property_type",
          "desc_ru": "Тип свойства.",
          "desc_en": "Property type.",
          "type": "Enum (PropertyType)"
        },
        {
          "name": "value",
          "desc_ru": "Значение.",
          "desc_en": "Value.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "property_type",
          "desc_ru": "Тип свойства.",
          "desc_en": "Property type.",
          "type": "Enum (PropertyType)"
        },
        {
          "name": "value",
          "desc_ru": "Значение.",
          "desc_en": "Value.",
          "type": "String"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "property_get_array_of_real",
      "level": "1",
      "desc_ru": "Получения свойств из массива.",
      "desc_en": "Property get from array of real.",
      "group": [
        "Свойства"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "path",
          "desc_ru": "Путь к свойству.",
          "desc_en": "Property path.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "values",
          "desc_ru": "Значения.",
          "desc_en": "Values.",
          "type": "Float array"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "property_get_object",
      "level": "1",
      "desc_ru": "Получение значений объекта.",
      "desc_en": "Property get object.",
      "group": [
        "Свойства"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип свойства.",
          "desc_en": "Property type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта свойства.",
          "desc_en": "Property object id.",
          "type": "Integer"
        },
        {
          "name": "path",
          "desc_ru": "Путь к свойству.",
          "desc_en": "Property path.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "property_set",
      "level": "1",
      "desc_ru": "Установка значений свойства.",
      "desc_en": "Property set.",
      "group": [
        "Свойства"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "path",
          "desc_ru": "Путь к свойству.",
          "desc_en": "Property path.",
          "type": "String"
        },
        {
          "name": "property_type",
          "desc_ru": "Тип свойства.",
          "desc_en": "Property type.",
          "type": "Enum (PropertyType)"
        },
        {
          "name": "value",
          "desc_ru": "Значение.",
          "desc_en": "Value.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "property_set_array_of_real",
      "level": "1",
      "desc_ru": "Установка значений свойств массивом.",
      "desc_en": "Set property in array of real.",
      "group": [
        "Свойства"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "path",
          "desc_ru": "Путь к свойству.",
          "desc_en": "Property set.",
          "type": "String"
        },
        {
          "name": "values",
          "desc_ru": "Значения.",
          "desc_en": "Values.",
          "type": "Float array"
        }
      ],
      "output": []
    },
    {
      "name": "property_set_object",
      "level": "1",
      "desc_ru": "Установка значений свойства в виде объекта.",
      "desc_en": "Property set by object.",
      "group": [
        "Свойства"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип свойства.",
          "desc_en": "Property type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id свойства.",
          "desc_en": "Property id.",
          "type": "Integer"
        },
        {
          "name": "path",
          "desc_ru": "Путь к свойству.",
          "desc_en": "Property path.",
          "type": "String"
        },
        {
          "name": "value_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "value_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "qform_attach_to",
      "level": "0",
      "desc_ru": "Подключиться к сессии QForm.",
      "desc_en": "Connect to a QForm session.",
      "group": [
        "QForm"
      ],
      "input": [
        {
          "name": "session_id",
          "desc_ru": "Id сессии QForm.",
          "desc_en": "QForm session id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "qform_process_id",
      "level": "0",
      "desc_ru": "Запрос сведений об ID процесса.",
      "desc_en": "Request for information about the process ID.",
      "group": [
        "Средства отладки",
        "QForm"
      ],
      "input": [],
      "output": [
        {
          "name": "pid",
          "desc_ru": "Id процесса QForm.",
          "desc_en": "QForm process id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "qform_reconnect",
      "level": "0",
      "desc_ru": "Переподключение к QForm (?).",
      "desc_en": "Reconnecting to QForm (?).",
      "group": [
        "QForm"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "qform_version",
      "level": "0",
      "desc_ru": "Запрос данных о версии QForm.",
      "desc_en": "Requesting QForm version data.",
      "group": [
        "QForm"
      ],
      "input": [],
      "output": [
        {
          "name": "v1",
          "desc_ru": "1-я составляющая номера версии QForm.",
          "desc_en": "QForm version number 1st component.",
          "type": "Integer"
        },
        {
          "name": "v2",
          "desc_ru": "2-я составляющая номера версии QForm.",
          "desc_en": "QForm version number 2nd component.",
          "type": "Integer"
        },
        {
          "name": "v3",
          "desc_ru": "3-я составляющая номера версии QForm.",
          "desc_en": "QForm version number 3rd component.",
          "type": "Integer"
        },
        {
          "name": "v4",
          "desc_ru": "4-я составляющая номера версии QForm.",
          "desc_en": "QForm version number 4th component.",
          "type": "Integer"
        },
        {
          "name": "is_cloud",
          "desc_ru": "Версия - облачная.",
          "desc_en": "Version is cloud.",
          "type": "Boolean"
        },
        {
          "name": "is_viewer",
          "desc_ru": "В режиме просмотра.",
          "desc_en": "In viewer mode.",
          "type": "Boolean"
        },
        {
          "name": "configuration",
          "desc_ru": "Конфигурация.",
          "desc_en": "Configuration.",
          "type": "String"
        }
      ]
    },
    {
      "name": "qform_window_id",
      "level": "0",
      "desc_ru": "Получении информации об окне QForm.",
      "desc_en": "Requesting QForm window data.",
      "group": [
        "QForm"
      ],
      "input": [],
      "output": [
        {
          "name": "hwnd",
          "desc_ru": "Id окна QForm.",
          "desc_en": "QForm window id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "qform_window_pos_get",
      "level": "1",
      "desc_ru": "Запрос данных о положении окна QForm.",
      "desc_en": "Requsting QForm window position data.",
      "group": [
        "QForm"
      ],
      "input": [],
      "output": [
        {
          "name": "x",
          "desc_ru": "Координата X окна QForm.",
          "desc_en": "X-coordinate of QForm window.",
          "type": "Integer"
        },
        {
          "name": "y",
          "desc_ru": "Координата Y окна QForm.",
          "desc_en": "Y-coordinate of QForm window.",
          "type": "Integer"
        },
        {
          "name": "width",
          "desc_ru": "Ширина окна QForm.",
          "desc_en": "QForm window width.",
          "type": "Integer"
        },
        {
          "name": "height",
          "desc_ru": "Высота окна QForm.",
          "desc_en": "QForm window height.",
          "type": "Integer"
        },
        {
          "name": "maximized",
          "desc_ru": "Открыто на полный экран.",
          "desc_en": "Opened in full screen mode.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "qform_window_pos_set",
      "level": "1",
      "desc_ru": "Установка положения окна QForm.",
      "desc_en": "Setting QForm window position.",
      "group": [
        "QForm"
      ],
      "input": [
        {
          "name": "x",
          "desc_ru": "Координата X окна QForm.",
          "desc_en": "X-coordinate of QForm window.",
          "type": "Integer"
        },
        {
          "name": "y",
          "desc_ru": "Координата Y окна QForm.",
          "desc_en": "Y-coordinate of QForm window.",
          "type": "Integer"
        },
        {
          "name": "width",
          "desc_ru": "Ширина окна QForm.",
          "desc_en": "QForm window width.",
          "type": "Integer"
        },
        {
          "name": "height",
          "desc_ru": "Высота окна QForm.",
          "desc_en": "QForm window height.",
          "type": "Integer"
        },
        {
          "name": "maximized",
          "desc_ru": "Открыто на полный экран.",
          "desc_en": "Opened in full screen mode.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "record_get",
      "level": "1",
      "desc_ru": "Получение номера текущего шага расчета.",
      "desc_en": "Getting the number of the сurrent simulation step.",
      "group": [
        "Результаты расчета"
      ],
      "input": [],
      "output": [
        {
          "name": "record",
          "desc_ru": "Номер шага расчета.",
          "desc_en": "Simulation step number.",
          "type": "Float"
        }
      ]
    },
    {
      "name": "record_get_last",
      "level": "1",
      "desc_ru": "Получение номера последнего шага расчета.",
      "desc_en": "Getting the number of the last simmulation step.",
      "group": [
        "Результаты расчета"
      ],
      "input": [],
      "output": [
        {
          "name": "record",
          "desc_ru": "Номер шага расчета.",
          "desc_en": "Simulation step number.",
          "type": "Float"
        }
      ]
    },
    {
      "name": "record_set",
      "level": "1",
      "desc_ru": "Установка текущего шага расчёта.",
      "desc_en": "Setting the current simulation step.",
      "group": [
        "Результаты расчета"
      ],
      "input": [
        {
          "name": "record",
          "desc_ru": "Номер шага расчета.",
          "desc_en": "Simulation step number.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "results_truncate",
      "level": "1",
      "desc_ru": "Удаление шагов расчета после заданного.",
      "desc_en": "Deleting simulation steps after defined one.",
      "group": [
        "Результаты расчета"
      ],
      "input": [
        {
          "name": "record",
          "desc_ru": "Номер шага расчета.",
          "desc_en": "Simulation step number.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "section_mesh_get",
      "level": "2",
      "desc_ru": "Запрос данных о сетке в сечении.",
      "desc_en": "Request for mesh data in a cross cut plane.",
      "group": [
        "Сетка"
      ],
      "input": [
        {
          "name": "point_x",
          "desc_ru": "Точка х.",
          "desc_en": "Point x.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Точка y.",
          "desc_en": "Point y.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Точка z.",
          "desc_en": "Point z.",
          "type": "Float"
        },
        {
          "name": "normal_x",
          "desc_ru": "Нормаль по оси х.",
          "desc_en": "X-axis normal.",
          "type": "Float"
        },
        {
          "name": "normal_y",
          "desc_ru": "Нормаль по оси y.",
          "desc_en": "Y-axis normal.",
          "type": "Float"
        },
        {
          "name": "normal_z",
          "desc_ru": "Нормаль по оси z.",
          "desc_en": "Z-axis normal.",
          "type": "Float"
        },
        {
          "name": "defined",
          "desc_ru": "Определенность.",
          "desc_en": "Is defined.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        },
        {
          "name": "u_vector_defined",
          "desc_ru": "Определенный  u вектор.",
          "desc_en": "U vector defined.",
          "type": "Boolean"
        },
        {
          "name": "u_vector_x",
          "desc_ru": "U вектор по оси х.",
          "desc_en": "X-axis u vector.",
          "type": "Float"
        },
        {
          "name": "u_vector_y",
          "desc_ru": "U вектор по оси y.",
          "desc_en": "Y-axis u vector.",
          "type": "Float"
        },
        {
          "name": "u_vector_z",
          "desc_ru": "U вектор по оси z.",
          "desc_en": "Z-axis u vector.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "meshes",
          "desc_ru": "Сетки.",
          "desc_en": "Meshes.",
          "type": "Enum (SectionMesh) array"
        },
        {
          "name": "area",
          "desc_ru": "Площадь.",
          "desc_en": "Area.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "section_plane_get",
      "level": "1",
      "desc_ru": "Запрос данных о плоскости сечения.",
      "desc_en": "Section plane data request.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": [
        {
          "name": "point_x",
          "desc_ru": "Координата X точки, через которую проходит плоскость.",
          "desc_en": "The X-coordinate of the point which the plane goes through.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата Y точки, через которую проходит плоскость.",
          "desc_en": "The Y-coordinate of the point which the plane goes through.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата Z точки, через которую проходит плоскость.",
          "desc_en": "The Z-coordinate of the point which the plane goes through.",
          "type": "Float"
        },
        {
          "name": "normal_x",
          "desc_ru": "Направление вектора нормали вдоль оси X.",
          "desc_en": "Direction of the normal vector along the X-axis.",
          "type": "Float"
        },
        {
          "name": "normal_y",
          "desc_ru": "Направление вектора нормали вдоль оси Y.",
          "desc_en": "Direction of the normal vector along the Y-axis.",
          "type": "Float"
        },
        {
          "name": "normal_z",
          "desc_ru": "Направление вектора нормали вдоль оси Z.",
          "desc_en": "Direction of the normal vector along the Z-axis.",
          "type": "Float"
        },
        {
          "name": "defined",
          "desc_ru": "Определенность.",
          "desc_en": "Is defined.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "section_plane_reset",
      "level": "1",
      "desc_ru": "Сброс данных плоскости сечения.",
      "desc_en": "Reset section plane data.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "section_plane_set",
      "level": "1",
      "desc_ru": "Задание плоскости сечения по точке и нормали.",
      "desc_en": "Specifying the section planes by a point and a normal.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "point_x",
          "desc_ru": "Координата X точки, через которую проходит плоскость.",
          "desc_en": "The X-coordinate of the point which the plane goes through.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата Y точки, через которую проходит плоскость.",
          "desc_en": "The Y-coordinate of the point which the plane goes through.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата Z точки, через которую проходит плоскость.",
          "desc_en": "The Z-coordinate of the point which the plane goes through.",
          "type": "Float"
        },
        {
          "name": "normal_x",
          "desc_ru": "Направление вектора нормали вдоль оси X.",
          "desc_en": "Direction of the normal vector along the X-axis.",
          "type": "Float"
        },
        {
          "name": "normal_y",
          "desc_ru": "Направление вектора нормали вдоль оси Y.",
          "desc_en": "Direction of the normal vector along the Y-axis.",
          "type": "Float"
        },
        {
          "name": "normal_z",
          "desc_ru": "Направление вектора нормали вдоль оси Z.",
          "desc_en": "Direction of the normal vector along the Z-axis.",
          "type": "Float"
        },
        {
          "name": "defined",
          "desc_ru": "Параметр не используется.",
          "desc_en": "The parameter is not used.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Параметр не используется.",
          "desc_en": "The parameter is not used.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "section_plane_set_3p",
      "level": "1",
      "desc_ru": "Задание плоскости сечения по трём точкам.",
      "desc_en": "Setting the section planes by three points.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "x1",
          "desc_ru": "Координата X точки 1 плоскости сечения.",
          "desc_en": "The X-coordinate of section plane's point 1.",
          "type": "Float"
        },
        {
          "name": "y1",
          "desc_ru": "Координата Y точки 1 плоскости сечения.",
          "desc_en": "The Y-coordinate of section plane's point 1.",
          "type": "Float"
        },
        {
          "name": "z1",
          "desc_ru": "Координата Z точки 1 плоскости сечения.",
          "desc_en": "The Z-coordinate of section plane's point 1.",
          "type": "Float"
        },
        {
          "name": "x2",
          "desc_ru": "Координата X точки 2 плоскости сечения.",
          "desc_en": "The X-coordinate of section plane's point 2.",
          "type": "Float"
        },
        {
          "name": "y2",
          "desc_ru": "Координата Y точки 2 плоскости сечения.",
          "desc_en": "The Y-coordinate of section plane's point 2.",
          "type": "Float"
        },
        {
          "name": "z2",
          "desc_ru": "Координата Z точки 2 плоскости сечения.",
          "desc_en": "The Z-coordinate of section plane's point 2.",
          "type": "Float"
        },
        {
          "name": "x3",
          "desc_ru": "Координата X точки 3 плоскости сечения.",
          "desc_en": "The X-coordinate of section plane's point 3.",
          "type": "Float"
        },
        {
          "name": "y3",
          "desc_ru": "Координата Y точки 3 плоскости сечения.",
          "desc_en": "The Y-coordinate of section plane's point 3.",
          "type": "Float"
        },
        {
          "name": "z3",
          "desc_ru": "Координата Z точки 3 плоскости сечения.",
          "desc_en": "The Z-coordinate of section plane's point 3.",
          "type": "Float"
        },
        {
          "name": "offset",
          "desc_ru": "Смещение по направлению вектора нормали от начала координат.",
          "desc_en": "Offset along the normal vector from the origin.",
          "type": "Float"
        },
        {
          "name": "reverse_cut",
          "desc_ru": "Обратный разрез.",
          "desc_en": "Reverse cut.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "section_plane_set_pn",
      "level": "1",
      "desc_ru": "Задание плоскости сечения по точке и нормали.",
      "desc_en": "Specifying the section planes by a point and a normal.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "point_x",
          "desc_ru": "Координата X точки, через которую проходит плоскость.",
          "desc_en": "The X-coordinate of the point which the plane goes through.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата Y точки, через которую проходит плоскость.",
          "desc_en": "The Y-coordinate of the point which the plane goes through.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата Z точки, через которую проходит плоскость.",
          "desc_en": "The Z-coordinate of the point which the plane goes through.",
          "type": "Float"
        },
        {
          "name": "normal_x",
          "desc_ru": "Направление вектора нормали вдоль оси X.",
          "desc_en": "Direction of the normal vector along the X-axis.",
          "type": "Float"
        },
        {
          "name": "normal_y",
          "desc_ru": "Направление вектора нормали вдоль оси Y.",
          "desc_en": "Direction of the normal vector along the Y-axis.",
          "type": "Float"
        },
        {
          "name": "normal_z",
          "desc_ru": "Направление вектора нормали вдоль оси Z.",
          "desc_en": "Direction of the normal vector along the Z-axis.",
          "type": "Float"
        },
        {
          "name": "offset",
          "desc_ru": "Смещение по направлению вектора нормали от начала координат.",
          "desc_en": "Offset along the normal vector from the origin.",
          "type": "Float"
        },
        {
          "name": "reverse_cut",
          "desc_ru": "Обратный разрез.",
          "desc_en": "Reverse cut.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "selected_object_get",
      "level": "1",
      "desc_ru": "Запрос данных о выбранном объекте.",
      "desc_en": "Requesting selected object data.",
      "group": [
        "Объект",
        "Списки"
      ],
      "input": [],
      "output": [
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "session_id",
      "level": "0",
      "desc_ru": "Запрос данных о id текущей сессии.",
      "desc_en": "Requesting data about current session id.",
      "group": [
        "QForm"
      ],
      "input": [],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id сессии.",
          "desc_en": "Session id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "session_info",
      "level": "0",
      "desc_ru": "Информация о текущей сессии.",
      "desc_en": "Information about the current session.",
      "group": [
        "QForm"
      ],
      "input": [],
      "output": [
        {
          "name": "session_id",
          "desc_ru": "Id сессии.",
          "desc_en": "Session id.",
          "type": "Integer"
        },
        {
          "name": "process_id",
          "desc_ru": "Id процесса QForm.",
          "desc_en": "QForm process id.",
          "type": "Integer"
        },
        {
          "name": "is_api_connected",
          "desc_ru": "Подключен ли API.",
          "desc_en": "If API is connected.",
          "type": "Boolean"
        },
        {
          "name": "is_started_by_api",
          "desc_ru": "Запущен из АПИ.",
          "desc_en": "Is started by API.",
          "type": "Boolean"
        },
        {
          "name": "last_api_connected_app",
          "desc_ru": "Путь к последнему приложению, подлюченному по API.",
          "desc_en": "Path to the last application connected via API.",
          "type": "String"
        },
        {
          "name": "last_api_connected_app_pid",
          "desc_ru": "Id последнего приложения, подключенного к QForm через API.",
          "desc_en": "Id of the last application connected to the QForm via API.",
          "type": "Integer"
        },
        {
          "name": "window_id",
          "desc_ru": "Id окна программы.",
          "desc_en": "Program window id.",
          "type": "Integer"
        },
        {
          "name": "last_window_activation_time",
          "desc_ru": "Последнее время активации окна.",
          "desc_en": "Last window activation time.",
          "type": "Float"
        },
        {
          "name": "last_window_deactivation_time",
          "desc_ru": "Последнее время деактивации окна.",
          "desc_en": "Last window deactivation time.",
          "type": "Float"
        },
        {
          "name": "is_visible",
          "desc_ru": "Включен ли режим без отображения пользовательского интерфейса.",
          "desc_en": "Background mod check.",
          "type": "Boolean"
        },
        {
          "name": "is_simulation_running",
          "desc_ru": "Запущена ли симуляция.",
          "desc_en": "If simulation is running.",
          "type": "Boolean"
        },
        {
          "name": "opened_project",
          "desc_ru": "Путь к открытому файлу с проектом.",
          "desc_en": "Path to the opened project file.",
          "type": "String"
        },
        {
          "name": "qform_dir",
          "desc_ru": "Путь к папке с установленным QForm.",
          "desc_en": "Path to the folder where QForm installed.",
          "type": "String"
        }
      ]
    },
    {
      "name": "session_info_by_id",
      "level": "0",
      "desc_ru": "Информация о текущей сессии по id.",
      "desc_en": "Information about the current session by id.",
      "group": [
        "QForm"
      ],
      "input": [
        {
          "name": "session_id",
          "desc_ru": "Id сессии.",
          "desc_en": "Session id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "session_id",
          "desc_ru": "Id сессии.",
          "desc_en": "Session id.",
          "type": "Integer"
        },
        {
          "name": "process_id",
          "desc_ru": "Id процесса QForm.",
          "desc_en": "QForm process id.",
          "type": "Integer"
        },
        {
          "name": "is_api_connected",
          "desc_ru": "Подключен ли API.",
          "desc_en": "Is API is connected.",
          "type": "Boolean"
        },
        {
          "name": "is_started_by_api",
          "desc_ru": "Запущен из АПИ.",
          "desc_en": "Is started by API.",
          "type": "Boolean"
        },
        {
          "name": "last_api_connected_app",
          "desc_ru": "Путь к последнему приложению, подлюченному по API.",
          "desc_en": "Path to the last application connected via API.",
          "type": "String"
        },
        {
          "name": "last_api_connected_app_pid",
          "desc_ru": "Id последнего приложения, подключенного к QForm через API.",
          "desc_en": "Id of the last application connected to the QForm via API.",
          "type": "Integer"
        },
        {
          "name": "window_id",
          "desc_ru": "Id окна программы.",
          "desc_en": "Program window id.",
          "type": "Integer"
        },
        {
          "name": "last_window_activation_time",
          "desc_ru": "Последнее время активации окна.",
          "desc_en": "Last window activation time.",
          "type": "Float"
        },
        {
          "name": "last_window_deactivation_time",
          "desc_ru": "Последнее время деактивации окна.",
          "desc_en": "Last window deactivation time.",
          "type": "Float"
        },
        {
          "name": "is_visible",
          "desc_ru": "Включен ли режим без отображения пользовательского интерфейса.",
          "desc_en": "Background mod check.",
          "type": "Boolean"
        },
        {
          "name": "is_simulation_running",
          "desc_ru": "Запущена ли симуляция.",
          "desc_en": "If simulation is running.",
          "type": "Boolean"
        },
        {
          "name": "opened_project",
          "desc_ru": "Путь к открытому файлу с проектом.",
          "desc_en": "Path to the opened project file.",
          "type": "String"
        },
        {
          "name": "qform_dir",
          "desc_ru": "Путь к папке с установленным QForm.",
          "desc_en": "Path to the folder where QForm installed.",
          "type": "String"
        }
      ]
    },
    {
      "name": "session_list",
      "level": "0",
      "desc_ru": "Информация о запущенных на компьютере сессиях.",
      "desc_en": "Information about sessions running on the computer.",
      "group": [
        "QForm"
      ],
      "input": [],
      "output": [
        {
          "name": "sessions",
          "desc_ru": "Массив из id сессий.",
          "desc_en": "Array of session ids.",
          "type": "Enum (Session) array"
        }
      ]
    },
    {
      "name": "session_max_count",
      "level": "0",
      "desc_ru": "Максимальное количество сессий.",
      "desc_en": "Session max count.",
      "group": [
        "QForm"
      ],
      "input": [],
      "output": [
        {
          "name": "count",
          "desc_ru": "Количество.",
          "desc_en": "Cout.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "simulation_objects_get",
      "level": "1",
      "desc_ru": "Запрос данных об объектах из текущей операции.",
      "desc_en": "Requesting data about objects from the current operation.",
      "group": [
        "Списки"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из объектов в текущей операции.",
          "desc_en": "An array of the current operation objects.",
          "type": "Enum (ObjectId) array"
        }
      ]
    },
    {
      "name": "sleep",
      "level": "1",
      "desc_ru": "Сон.",
      "desc_en": "Sleep.",
      "group": [
        "Интерфейс пользователя"
      ],
      "input": [
        {
          "name": "seconds",
          "desc_ru": "Время сна.",
          "desc_en": "Sleeping time.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "start_simulation",
      "level": "1",
      "desc_ru": "Запуск расчета.",
      "desc_en": "Start simulation.",
      "group": [
        "Расчет"
      ],
      "input": [],
      "output": [
        {
          "name": "status",
          "desc_ru": "Статус выполнения расчета.",
          "desc_en": "Simulation execution status.",
          "type": "Enum (StatusCode)"
        },
        {
          "name": "finished_calculation_unit",
          "desc_ru": "Параметр, при достижении которого завершился расчёт.",
          "desc_en": "Parameter upon reaching which the calculation was completed.",
          "type": "Enum (CalculationUnit)"
        }
      ]
    },
    {
      "name": "start_simulation_advanced",
      "level": "1",
      "desc_ru": "Расширенный запуск расчета.",
      "desc_en": "Start simulation advanced.",
      "group": [
        "Расчет"
      ],
      "input": [
        {
          "name": "start_from_record",
          "desc_ru": "Номер шага, с которого нужно начать расчет.",
          "desc_en": "Step number to start calculation from.",
          "type": "Integer"
        },
        {
          "name": "remesh_tools",
          "desc_ru": "Переразбить инструменты.",
          "desc_en": "To remesh tools.",
          "type": "Boolean"
        },
        {
          "name": "stop_at_record",
          "desc_ru": "Номер шага, на котором нужно остановиться.",
          "desc_en": "Step number to stop simulation at.",
          "type": "Integer"
        },
        {
          "name": "max_records",
          "desc_ru": "Максимальное количество шагов расчета.",
          "desc_en": "Maximum number of simulation steps.",
          "type": "Integer"
        },
        {
          "name": "stop_at_process_time",
          "desc_ru": "Время расчета процесса, когда произойдет остановка симуляции.",
          "desc_en": "Process calculation time when the simulation will stop.",
          "type": "Float"
        },
        {
          "name": "max_process_time",
          "desc_ru": "Максимальное время расчета процесса.",
          "desc_en": "Maximum process calculation time.",
          "type": "Float"
        },
        {
          "name": "max_calculation_time",
          "desc_ru": "Максимальное время расчета моделирования.",
          "desc_en": "Maximum calculation time of the simulation.",
          "type": "Integer"
        },
        {
          "name": "calculation_mode",
          "desc_ru": "Режим расчета.",
          "desc_en": "Calculation mode.",
          "type": "Enum (CalculationMode)"
        }
      ],
      "output": [
        {
          "name": "status",
          "desc_ru": "Статус выполнения расчета.",
          "desc_en": "Simulation execution status.",
          "type": "Enum (StatusCode)"
        },
        {
          "name": "finished_calculation_unit",
          "desc_ru": "Параметр, при достижении которого завершился расчёт.",
          "desc_en": "Parameter upon reaching which the calculation was completed.",
          "type": "Enum (CalculationUnit)"
        }
      ]
    },
    {
      "name": "state_blow",
      "level": "2",
      "desc_ru": "Состояние расчета удара.",
      "desc_en": "Blow calculation state.",
      "group": [
        "Статус расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id удара.",
          "desc_en": "Blow id.",
          "type": "Integer"
        },
        {
          "name": "operation",
          "desc_ru": "Номер операции.",
          "desc_en": "Operation number.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "simulation_completed",
          "desc_ru": "Проверка завершения расчета.",
          "desc_en": "Simulation completed check.",
          "type": "Boolean"
        },
        {
          "name": "process_chain",
          "desc_ru": "Технологическая цепочка.",
          "desc_en": "Process chain.",
          "type": "Integer"
        },
        {
          "name": "operation_index_in_chain",
          "desc_ru": "Номер операции в цепочке.",
          "desc_en": "Operation index in chain.",
          "type": "Integer"
        },
        {
          "name": "operation",
          "desc_ru": "Номер операции.",
          "desc_en": "Operation number.",
          "type": "Integer"
        },
        {
          "name": "blow",
          "desc_ru": "Номер удара.",
          "desc_en": "Blow number.",
          "type": "Integer"
        },
        {
          "name": "blow_record_count",
          "desc_ru": "Количество шагов расчета в ударе.",
          "desc_en": "Number of simulation steps in blow.",
          "type": "Integer"
        },
        {
          "name": "blow_progress",
          "desc_ru": "Прогресс расчета удара.",
          "desc_en": "Blow progress.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "state_extrusion",
      "level": "2",
      "desc_ru": "Остояние расчета экструзии.",
      "desc_en": "Extrusion state.",
      "group": [
        "Статус расчета"
      ],
      "input": [
        {
          "name": "record",
          "desc_ru": "Номер шага расчета.",
          "desc_en": "Simulation step.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "force",
          "desc_ru": "Сила.",
          "desc_en": "Force.",
          "type": "Float"
        },
        {
          "name": "fill_time",
          "desc_ru": "Время заполнения.",
          "desc_en": "Fill time.",
          "type": "Float"
        },
        {
          "name": "euler_min_z",
          "desc_ru": "Минимальный угол Эйлера по оси z.",
          "desc_en": "Z-axis Euler's minimum angle.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "state_mesh",
      "level": "2",
      "desc_ru": "Запрос данных о сетке объекта на шаге расчета.",
      "desc_en": "Request for data on the object mesh at the simulation step.",
      "group": [
        "Статус расчета"
      ],
      "input": [
        {
          "name": "record",
          "desc_ru": "Шаг расчета.",
          "desc_en": "Simulation step.",
          "type": "Float"
        },
        {
          "name": "id",
          "desc_ru": "Номер объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс сетки.",
          "desc_en": "Mesh index.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "volumetric_elements",
          "desc_ru": "Количество объемных элементов.",
          "desc_en": "Number of volumetric elements.",
          "type": "Integer"
        },
        {
          "name": "surface_elements",
          "desc_ru": "Количество поверхностных элементов.",
          "desc_en": "Number of surface elements.",
          "type": "Integer"
        },
        {
          "name": "internal_nodes",
          "desc_ru": "Количество внутренних узлов.",
          "desc_en": "Number of internal nodes.",
          "type": "Integer"
        },
        {
          "name": "surface_nodes",
          "desc_ru": "Количество узлов на поверхности.",
          "desc_en": "Number of surface nodes.",
          "type": "Integer"
        },
        {
          "name": "total_nodes",
          "desc_ru": "Всего узлов.",
          "desc_en": "Total nodes.",
          "type": "Integer"
        },
        {
          "name": "dim",
          "desc_ru": "Количество пространственных измерений.",
          "desc_en": "Number of dimensions.",
          "type": "Integer"
        },
        {
          "name": "record",
          "desc_ru": "Шаг расчета.",
          "desc_en": "Simulation step.",
          "type": "Float"
        }
      ]
    },
    {
      "name": "state_operation",
      "level": "2",
      "desc_ru": "Состояние операции.",
      "desc_en": "State operation.",
      "group": [
        "Статус расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "simulation_completed",
          "desc_ru": "Проверка завершения расчета.",
          "desc_en": "Simulation completed check.",
          "type": "Boolean"
        },
        {
          "name": "process_chain",
          "desc_ru": "Технологическая цепочка.",
          "desc_en": "Process chain.",
          "type": "Integer"
        },
        {
          "name": "operation_index_in_chain",
          "desc_ru": "Индекс операции в технологической цепочке.",
          "desc_en": "Operation index in chain.",
          "type": "Integer"
        },
        {
          "name": "operation",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        },
        {
          "name": "blow",
          "desc_ru": "Номер удара.",
          "desc_en": "Blow number.",
          "type": "Integer"
        },
        {
          "name": "blow_record_count",
          "desc_ru": "Количество шагов расчета в ударе.",
          "desc_en": "Number of simulation steps in blow.",
          "type": "Integer"
        },
        {
          "name": "blow_progress",
          "desc_ru": "Процент завершения в ударе.",
          "desc_en": "Blow progress.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "state_process_chain",
      "level": "2",
      "desc_ru": "Состояние технологической цепочки.",
      "desc_en": "Process chain state.",
      "group": [
        "Статус расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "simulation_completed",
          "desc_ru": "Проверка завершения расчета.",
          "desc_en": "Simulation completed check.",
          "type": "Boolean"
        },
        {
          "name": "process_chain",
          "desc_ru": "Технологическая цепочка.",
          "desc_en": "Process chain.",
          "type": "Integer"
        },
        {
          "name": "operation_index_in_chain",
          "desc_ru": "Индекс операции в технологической цепочке.",
          "desc_en": "Operation index in chain.",
          "type": "Integer"
        },
        {
          "name": "operation",
          "desc_ru": "Id операции.",
          "desc_en": "Operation id.",
          "type": "Integer"
        },
        {
          "name": "blow",
          "desc_ru": "Номер удара.",
          "desc_en": "Blow number.",
          "type": "Integer"
        },
        {
          "name": "blow_record_count",
          "desc_ru": "Количество шагов расчета в ударе.",
          "desc_en": "Number of simulation steps in blow.",
          "type": "Integer"
        },
        {
          "name": "blow_progress",
          "desc_ru": "Процент завершения в ударе.",
          "desc_en": "Blow progress.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "state_system",
      "level": "2",
      "desc_ru": "Запрос данных о текущем шаге расчета.",
      "desc_en": "Request for data on the current simulation step.",
      "group": [
        "Статус расчета"
      ],
      "input": [
        {
          "name": "record",
          "desc_ru": "Шаг расчета.",
          "desc_en": "Simulation step.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "record",
          "desc_ru": "Текущий шаг расчета.",
          "desc_en": "Current simulation step.",
          "type": "Float"
        },
        {
          "name": "time",
          "desc_ru": "Время.",
          "desc_en": "Time.",
          "type": "Float"
        },
        {
          "name": "process_time",
          "desc_ru": "Время процесса.",
          "desc_en": "Process time.",
          "type": "Float"
        },
        {
          "name": "time_step",
          "desc_ru": "Время шага.",
          "desc_en": "Time step.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        },
        {
          "name": "iteration_count",
          "desc_ru": "Количество итераций.",
          "desc_en": "Iteration count.",
          "type": "Integer"
        },
        {
          "name": "calculation_time",
          "desc_ru": "Время расчета.",
          "desc_en": "Calculation time.",
          "type": "Float"
        },
        {
          "name": "total_calculation_time",
          "desc_ru": "Общее время расчета.",
          "desc_en": "Total calculation time.",
          "type": "Float"
        },
        {
          "name": "progress",
          "desc_ru": "Прогресс выполения расчета.",
          "desc_en": "Simulation progress.",
          "type": "Float"
        }
      ]
    },
    {
      "name": "state_tool",
      "level": "2",
      "desc_ru": "Запрос данных о свойствах заготовки на шаге расчёта.",
      "desc_en": "Request for workpiece properties data on the simulation step.",
      "group": [
        "Статус расчета"
      ],
      "input": [
        {
          "name": "record",
          "desc_ru": "Шаг расчета.",
          "desc_en": "Simulation step.",
          "type": "Float"
        },
        {
          "name": "id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        }
      ],
      "output": [
        {
          "name": "record",
          "desc_ru": "Шаг расчета.",
          "desc_en": "Simulation step.",
          "type": "Float"
        },
        {
          "name": "load",
          "desc_ru": "Сила в направлении движения инструмента.",
          "desc_en": "Load in the direction of tool motion.",
          "type": "Float"
        },
        {
          "name": "energy",
          "desc_ru": "Эффективная энергия инструмента.",
          "desc_en": "Effective energy of the tool.",
          "type": "Float"
        },
        {
          "name": "displacement",
          "desc_ru": "Перемещение в направлении движения инструмента.",
          "desc_en": "Displacement in the direction of tool motion.",
          "type": "Float"
        },
        {
          "name": "power",
          "desc_ru": "Мощность.",
          "desc_en": "Power.",
          "type": "Float"
        },
        {
          "name": "torque_1",
          "desc_ru": "Момент 1.",
          "desc_en": "Момент 2.",
          "type": "Float"
        },
        {
          "name": "torque_2",
          "desc_ru": "Крутящий момент вокруг оси типа 2.",
          "desc_en": "Torque around type 2 axis.",
          "type": "Float"
        },
        {
          "name": "work",
          "desc_ru": "Работа.",
          "desc_en": "Work.",
          "type": "Float"
        },
        {
          "name": "velocity",
          "desc_ru": "Скорость в направлении движении инструмента.",
          "desc_en": "Velocity in the direction of tool motion.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "state_workpiece",
      "level": "2",
      "desc_ru": "Запрос данных о свойствах заготовки на шаге расчёта.",
      "desc_en": "Request for workpiece properties data on the calculation step.",
      "group": [
        "Статус расчета"
      ],
      "input": [
        {
          "name": "record",
          "desc_ru": "Шаг расчета.",
          "desc_en": "Simulation step.",
          "type": "Float"
        },
        {
          "name": "object_id",
          "desc_ru": "Id заготовки.",
          "desc_en": "Workpiece id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "record",
          "desc_ru": "Шаг расчета.",
          "desc_en": "Simulation step.",
          "type": "Float"
        },
        {
          "name": "volume",
          "desc_ru": "Объем заготовки.",
          "desc_en": "Workpiece volume.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        },
        {
          "name": "with_laps",
          "desc_ru": "Присутствуют ли складки.",
          "desc_en": "If there are laps.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "stop_cond_create",
      "level": "1",
      "desc_ru": "Создание условия остановки расчета.",
      "desc_en": "Stop condition creation.",
      "group": [
        "Условия остановки расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        },
        {
          "name": "type",
          "desc_ru": "Тип условия остановки.",
          "desc_en": "Stop condition type.",
          "type": "Enum (StopCondType)"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "stop_cond_create_distance",
      "level": "1",
      "desc_ru": "Cоздание условия остановки - расстояние.",
      "desc_en": "Сreating a stop condition - distance.",
      "group": [
        "Условия остановки расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        },
        {
          "name": "distance",
          "desc_ru": "Расстояние.",
          "desc_en": "Distance.",
          "type": "Float"
        },
        {
          "name": "object_1_type",
          "desc_ru": "Тип объекта 1.",
          "desc_en": "Object 1 type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_1_id",
          "desc_ru": "Id объекта 1.",
          "desc_en": "Object 1 id.",
          "type": "Integer"
        },
        {
          "name": "object_2_type",
          "desc_ru": "Тип объекта 2.",
          "desc_en": "Object 2 type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_2_id",
          "desc_ru": "Id объекта 2.",
          "desc_en": "Object 2 id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "stop_cond_create_final_pos",
      "level": "1",
      "desc_ru": "Cоздание условия остановки - конечное положение.",
      "desc_en": "Сreating a stop condition - final position.",
      "group": [
        "Условия остановки расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        },
        {
          "name": "tool_type",
          "desc_ru": "Тип инструмента.",
          "desc_en": "Tool type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "tool_number",
          "desc_ru": "Номер инструмента.",
          "desc_en": "Tool number.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "stop_cond_create_max_load",
      "level": "1",
      "desc_ru": "Cоздание условия остановки - максимальная сила.",
      "desc_en": "Creating a stop condition - maximum load.",
      "group": [
        "Условия остановки расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        },
        {
          "name": "tool_type",
          "desc_ru": "Тип инструмента.",
          "desc_en": "Tool type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "tool_number",
          "desc_ru": "Номер инструмента.",
          "desc_en": "Tool number.",
          "type": "Integer"
        },
        {
          "name": "max_load",
          "desc_ru": "Максимальная сила.",
          "desc_en": "Maximum load.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "stop_cond_create_rotation",
      "level": "1",
      "desc_ru": "Создание условия остановки - поворот инструмента.",
      "desc_en": "Creating a stop condition - tool rotation.",
      "group": [
        "Условия остановки расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        },
        {
          "name": "tool_type",
          "desc_ru": "Тип инструмента.",
          "desc_en": "Tool type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "tool_number",
          "desc_ru": "Номер инструмента.",
          "desc_en": "Tool number.",
          "type": "Integer"
        },
        {
          "name": "angle",
          "desc_ru": "Угол поворота инструмента.",
          "desc_en": "Tool rotation angle.",
          "type": "Float"
        },
        {
          "name": "axis",
          "desc_ru": "Тип оси.",
          "desc_en": "Axis type.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "stop_cond_create_stroke",
      "level": "1",
      "desc_ru": "Создание условия остановки - перемещение инструмента.",
      "desc_en": "Creating a stop condition - tool stroke.",
      "group": [
        "Условия остановки расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        },
        {
          "name": "tool_type",
          "desc_ru": "Тип инструмента.",
          "desc_en": "Tool type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "tool_number",
          "desc_ru": "Номер инструмента.",
          "desc_en": "Tool number.",
          "type": "Integer"
        },
        {
          "name": "stroke",
          "desc_ru": "Перемещение инструмента.",
          "desc_en": "Tool stroke.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "stop_cond_create_time",
      "level": "1",
      "desc_ru": "Создание условия остановки - время.",
      "desc_en": "Creating a stop condition - time.",
      "group": [
        "Условия остановки расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        },
        {
          "name": "time",
          "desc_ru": "Время.",
          "desc_en": "Time.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "stop_cond_delete",
      "level": "1",
      "desc_ru": "Удаление условия остановки.",
      "desc_en": "Removing the stop condition.",
      "group": [
        "Условия остановки расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "stop_cond_get",
      "level": "1",
      "desc_ru": "Получение данных об условии остановки.",
      "desc_en": "Getting data about the stop condition.",
      "group": [
        "Условия остановки расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop conditiong id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "type",
          "desc_ru": "Тип условия остановки.",
          "desc_en": "Stop condition type.",
          "type": "Enum (StopCondType)"
        }
      ]
    },
    {
      "name": "stop_cond_type",
      "level": "1",
      "desc_ru": "Получение данных о типе условия остановки.",
      "desc_en": "Getting data about the stop condition type.",
      "group": [
        "Условия остановки расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id условия остановки.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "type",
          "desc_ru": "Тип условия остановки.",
          "desc_en": "Stop condition type.",
          "type": "Enum (StopCondType)"
        }
      ]
    },
    {
      "name": "stop_condition_create_field_value",
      "level": "1",
      "desc_ru": "Создание условия остановки - значение поля.",
      "desc_en": "Creating a stop condition - field value.",
      "group": [
        "Условия остановки расчета"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "bound_value",
          "desc_ru": "Граничное значение.",
          "desc_en": "Bound value.",
          "type": "Float"
        },
        {
          "name": "bound_type",
          "desc_ru": "Тип границы.",
          "desc_en": "Bound type.",
          "type": "Enum (SolidBodyNodeValueCondition_ValueType)"
        },
        {
          "name": "region_in_object",
          "desc_ru": "Область в объекте.",
          "desc_en": "Region in object.",
          "type": "Enum (SolidBodyNodeValueCondition_ValueRegionInBody)"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id граничного условия.",
          "desc_en": "Stop condition id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "stop_conds_get",
      "level": "1",
      "desc_ru": "Запрос данных о всех условиях остановки.",
      "desc_en": "Data request for all stop conditions.",
      "group": [
        "Условия остановки расчета",
        "Списки"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров условий остановки.",
          "desc_en": "Array of stop conditions numbers.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "subroutine_create",
      "level": "1",
      "desc_ru": "Создание подпрограммы.",
      "desc_en": "Subroutine creation.",
      "group": [
        "Подпрограммы"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id подпрограммы.",
          "desc_en": "Subroutine id.",
          "type": "Integer"
        },
        {
          "name": "type",
          "desc_ru": "Тип подпрограммы.",
          "desc_en": "Subroutine type.",
          "type": "Enum (SubRoutineType)"
        },
        {
          "name": "file",
          "desc_ru": "Путь к файлу с подпрограммой.",
          "desc_en": "Path to the subroutine file.",
          "type": "String"
        },
        {
          "name": "solve_in_process",
          "desc_ru": "Выполнять в процессе расчета.",
          "desc_en": "Execute during simulation.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id подпрограммы.",
          "desc_en": "Subroutine id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "subroutine_delete",
      "level": "1",
      "desc_ru": "Удаление подпрограммы.",
      "desc_en": "Delete the subroutine.",
      "group": [
        "Подпрограммы"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id подпрограммы.",
          "desc_en": "Subroutine id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "subroutine_get",
      "level": "1",
      "desc_ru": "Запрос данных о подпрограмме.",
      "desc_en": "Subroutine data request.",
      "group": [
        "Подпрограммы"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id подпрограммы.",
          "desc_en": "Subroutine id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "used_subroutines",
          "desc_ru": "Используемые подпрограммы.",
          "desc_en": "Used subroutines.",
          "type": "Integer array"
        },
        {
          "name": "parameters",
          "desc_ru": "Параметры подпрограммы.",
          "desc_en": "Subroutine parameters.",
          "type": "String array"
        },
        {
          "name": "input_fields",
          "desc_ru": "Входные поля.",
          "desc_en": "Input fields.",
          "type": "String array"
        },
        {
          "name": "output_fields",
          "desc_ru": "Выходные поля.",
          "desc_en": "Output fields.",
          "type": "String array"
        },
        {
          "name": "type",
          "desc_ru": "Тип подпрограммы.",
          "desc_en": "Subroutine type.",
          "type": "Enum (SubRoutineType)"
        },
        {
          "name": "file",
          "desc_ru": "Путь к файлу с подпрограммой.",
          "desc_en": "Path to the subroutine file.",
          "type": "String"
        },
        {
          "name": "solve_in_process",
          "desc_ru": "Выполнять в процессе расчета.",
          "desc_en": "Execute during simulation.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "subroutine_parameter_get",
      "level": "1",
      "desc_ru": "Получение значения параметра подпрограммы.",
      "desc_en": "Getting the value of a subroutine parameter.",
      "group": [
        "Подпрограммы"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id подпрограммы.",
          "desc_en": "Subroutine id.",
          "type": "Integer"
        },
        {
          "name": "parameter",
          "desc_ru": "Параметр подпрограммы.",
          "desc_en": "Subroutine parameter.",
          "type": "String"
        },
        {
          "name": "value",
          "desc_ru": "Параметр не используется.",
          "desc_en": "Parameter is not used.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Значение параметра.",
          "desc_en": "Parameter value.",
          "type": "Float"
        },
        {
          "name": "is_null",
          "desc_ru": "Параметру не присвоено значение.",
          "desc_en": "Parameter has not value.",
          "type": "Boolean"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "subroutine_parameter_set",
      "level": "1",
      "desc_ru": "Установка значения параметра подпрограммы.",
      "desc_en": "Setting the value of a subroutine parameter.",
      "group": [
        "Подпрограммы"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id подпрограммы.",
          "desc_en": "Subroutine id.",
          "type": "Integer"
        },
        {
          "name": "parameter",
          "desc_ru": "Параметр подрограммы.",
          "desc_en": "Subroutine parameter.",
          "type": "String"
        },
        {
          "name": "value",
          "desc_ru": "Значение параметра.",
          "desc_en": "Parameter value.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "subroutines_get",
      "level": "1",
      "desc_ru": "Запрос данных о всех подпрограммах.",
      "desc_en": "All subroutines data request.",
      "group": [
        "Подпрограммы",
        "Списки"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров подпрограмм.",
          "desc_en": "Array of subroutines numbers.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "sym_plane_create",
      "level": "1",
      "desc_ru": "Задать плоскость симметрии.",
      "desc_en": "Set plane of symmetry.",
      "group": [
        "Плоскости симметрии"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id плоскости симметрии.",
          "desc_en": "Plane of symmetry id.",
          "type": "Integer"
        },
        {
          "name": "point_x",
          "desc_ru": "Координата x положения плоскости.",
          "desc_en": "Plane position x-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата y положения плоскости.",
          "desc_en": "Plane position y-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата z положения плоскости.",
          "desc_en": "Plane position z-coordinate.",
          "type": "Float"
        },
        {
          "name": "normal_x",
          "desc_ru": "Направление вектора нормали вдоль оси x.",
          "desc_en": "Direction of the normal vector along the x-axis.",
          "type": "Float"
        },
        {
          "name": "normal_y",
          "desc_ru": "Направление вектора нормали вдоль оси y.",
          "desc_en": "Direction of the normal vector along the y-axis.",
          "type": "Float"
        },
        {
          "name": "normal_z",
          "desc_ru": "Направление вектора нормали вдоль оси z.",
          "desc_en": "Direction of the normal vector along the z-axis.",
          "type": "Float"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id плоскости симметрии.",
          "desc_en": "Plane of symmetry id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "sym_plane_create_by_close_point",
      "level": "1",
      "desc_ru": "Создание плоскости симметрии по ближайшей точке.",
      "desc_en": "Creating a plane of symmetry from the nearest point.",
      "group": [
        "Плоскости симметрии"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id плоскости симметрии.",
          "desc_en": "Plane of symmetry id.",
          "type": "Integer"
        },
        {
          "name": "point_x",
          "desc_ru": "Координата x точки.",
          "desc_en": "Point x-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата y точки.",
          "desc_en": "Point y-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата z точки.",
          "desc_en": "Point z-coordinate.",
          "type": "Float"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id плоскости симметрии.",
          "desc_en": "Plane of symmetry id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "sym_plane_create_by_face_color",
      "level": "1",
      "desc_ru": "Создание плоскости симметрии по цвету грани.",
      "desc_en": "Creating a plane of symmetry by face color.",
      "group": [
        "Плоскости симметрии"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id плоскости симметрии.",
          "desc_en": "Plane of symmetry id.",
          "type": "Integer"
        },
        {
          "name": "color_R",
          "desc_ru": "Интенсивность красной составляющей цвета.",
          "desc_en": "The intensity of the color red component.",
          "type": "Integer"
        },
        {
          "name": "color_G",
          "desc_ru": "Интенсивность зеленой составляющей цвета.",
          "desc_en": "The intensity of the color green component.",
          "type": "Integer"
        },
        {
          "name": "color_B",
          "desc_ru": "Интенсивность синей составляющей цвета.",
          "desc_en": "The intensity of the color blue component.",
          "type": "Integer"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id плоскости симметрии.",
          "desc_en": "Plane of symmetry id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "sym_plane_delete",
      "level": "1",
      "desc_ru": "Удаление плоскости симметрии.",
      "desc_en": "Plane of symmetry removal.",
      "group": [
        "Плоскости симметрии"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id плоскости симметрии.",
          "desc_en": "Plane of symmetry id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "sym_plane_get",
      "level": "1",
      "desc_ru": "Получение данных о плоскости симметрии.",
      "desc_en": "Getting data about the plane of symmetry.",
      "group": [
        "Плоскости симметрии"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id плоскости симметрии.",
          "desc_en": "Plane of symmetry id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "vector_x",
          "desc_ru": "Направление вектора нормали вдоль оси x.",
          "desc_en": "Direction of the normal vector along the x-axis.",
          "type": "Float"
        },
        {
          "name": "vector_y",
          "desc_ru": "Направление вектора нормали вдоль оси y.",
          "desc_en": "Direction of the normal vector along the y-axis.",
          "type": "Float"
        },
        {
          "name": "vector_z",
          "desc_ru": "Направление вектора нормали вдоль оси z.",
          "desc_en": "Direction of the normal vector along the z-axis.",
          "type": "Float"
        },
        {
          "name": "point_x",
          "desc_ru": "Координата x положения плоскости.",
          "desc_en": "Plane position x-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата y положения плоскости.",
          "desc_en": "Plane position y-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата z положения плоскости.",
          "desc_en": "Plane position z-coordinate.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "sym_planes_create_auto",
      "level": "1",
      "desc_ru": "Создать плоскости симметрии автоматически.",
      "desc_en": "Set planes of symmetry automatically.",
      "group": [
        "Плоскости симметрии"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров созданных плоскостей симметрии.",
          "desc_en": "Array of created symmetry planes numbers.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "sym_planes_get",
      "level": "1",
      "desc_ru": "Получение данных о всех плоскостях симметрии.",
      "desc_en": "Getting data about all planes of symmetry.",
      "group": [
        "Плоскости симметрии",
        "Списки"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров плоскостей симметрии.",
          "desc_en": "Array of symmetry planes numbers.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "system_of_units_get",
      "level": "1",
      "desc_ru": "Запрос данных о системе единиц измерения.",
      "desc_en": "Request for data about the system of units of measurement.",
      "group": [
        "QForm",
        "Интерфейс пользователя"
      ],
      "input": [],
      "output": [
        {
          "name": "system",
          "desc_ru": "Система единиц измерения.",
          "desc_en": "System of units of measurement.",
          "type": "Enum (SystemOfUnits)"
        }
      ]
    },
    {
      "name": "system_of_units_set",
      "level": "1",
      "desc_ru": "Установка системы единиц измерения до закрытия окна QForm.",
      "desc_en": "Setting the system of units of measurement until the QForm windows closed.",
      "group": [
        "QForm",
        "Интерфейс пользователя"
      ],
      "input": [
        {
          "name": "system",
          "desc_ru": "Система единиц измерения.",
          "desc_en": "System of units of measurement.",
          "type": "Enum (SystemOfUnits)"
        }
      ],
      "output": []
    },
    {
      "name": "system_of_units_set_for_program",
      "level": "1",
      "desc_ru": "Установка система единиц измерения на момент действия скрипта.",
      "desc_en": "Setting the system of units of measurement while the script is running.",
      "group": [
        "QForm",
        "Интерфейс пользователя"
      ],
      "input": [
        {
          "name": "system",
          "desc_ru": "Система единиц измерения.",
          "desc_en": "System of units of measurement.",
          "type": "Enum (SystemOfUnits)"
        }
      ],
      "output": []
    },
    {
      "name": "tracking_contour_create",
      "level": "1",
      "desc_ru": "Задание траектории трассируемого контура.",
      "desc_en": "Setting the tracking contour path.",
      "group": [
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "index",
          "desc_ru": "Id траектории трассируемого контура.",
          "desc_en": "Tracking contour path id.",
          "type": "Integer"
        },
        {
          "name": "tracking_contours_id",
          "desc_ru": "Id трассируемого контура.",
          "desc_en": "Tracking contour id.",
          "type": "Integer"
        },
        {
          "name": "point_x",
          "desc_ru": "Массив из координат точек трассируемого контура по оси X.",
          "desc_en": "An array of traced contour points coordinates along the X axis.",
          "type": "Float array"
        },
        {
          "name": "point_y",
          "desc_ru": "Массив из координат точек трассируемого контура по оси Y.",
          "desc_en": "An array of traced contour points coordinates along the Y axis.",
          "type": "Float array"
        },
        {
          "name": "point_z",
          "desc_ru": "Массив из координат точек трассируемого контура по оси Z.",
          "desc_en": "An array of traced contour points coordinates along the Z axis.",
          "type": "Float array"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id траектории трассируемого контура.",
          "desc_en": "Tracking contour path id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "tracking_contours_create",
      "level": "1",
      "desc_ru": "Создание трассируемого контура.",
      "desc_en": "Creating a tracking contour.",
      "group": [
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id трассируемого контура.",
          "desc_en": "Tracking contour id.",
          "type": "Integer"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id трассируемого контура.",
          "desc_en": "Tracking contour id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "tracking_group_create",
      "level": "1",
      "desc_ru": "Создание трассируемой группы.",
      "desc_en": "Creating a tracking group.",
      "group": [
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id трассируемой группы.",
          "desc_en": "Tracking group id.",
          "type": "Integer"
        },
        {
          "name": "name",
          "desc_ru": "Название трассируемой группы.",
          "desc_en": "Tracking group name.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id трассируемой группы.",
          "desc_en": "Tracking group id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "tracking_line_create",
      "level": "1",
      "desc_ru": "Создание трассируемой линии.",
      "desc_en": "Creating a tracking line.",
      "group": [
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id трассируемой линии.",
          "desc_en": "Tracking line id.",
          "type": "Integer"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "point1_x",
          "desc_ru": "Координата x точки 1.",
          "desc_en": "X-coordinate of point 1.",
          "type": "Float"
        },
        {
          "name": "point1_y",
          "desc_ru": "Координата y точки 1.",
          "desc_en": "Y-coordinate of point 1.",
          "type": "Float"
        },
        {
          "name": "point1_z",
          "desc_ru": "Координата z точки 1.",
          "desc_en": "Z-coordinate of point 1.",
          "type": "Float"
        },
        {
          "name": "point2_x",
          "desc_ru": "Координата x точки 2.",
          "desc_en": "X-coordinate of point 2.",
          "type": "Float"
        },
        {
          "name": "point2_y",
          "desc_ru": "Координата y точки 2.",
          "desc_en": "Y-coordinate of point 2.",
          "type": "Float"
        },
        {
          "name": "point2_z",
          "desc_ru": "Координата z точки 2.",
          "desc_en": "Z-coordinate of point 2.",
          "type": "Float"
        },
        {
          "name": "on_surface",
          "desc_ru": "Находится на поверхности.",
          "desc_en": "Is located on the surface.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id трассируемой линии.",
          "desc_en": "Tracking line id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "tracking_line_get",
      "level": "2",
      "desc_ru": "Запрос данных о трассируемой линии.",
      "desc_en": "Request for tracking line data.",
      "group": [
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id трассируемой линии.",
          "desc_en": "Tracking line id.",
          "type": "Integer"
        },
        {
          "name": "operation",
          "desc_ru": "Номер операции.",
          "desc_en": "Operation number.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "points",
          "desc_ru": "Массив из координат точек трассируемой линии.",
          "desc_en": "An array of tracking line points coordinates.",
          "type": "Enum (MeshPoint) array"
        }
      ]
    },
    {
      "name": "tracking_lines_get",
      "level": "1",
      "desc_ru": "Запрос данных о трассируемых линиях.",
      "desc_en": "Request for tracking lines data.",
      "group": [
        "Списки",
        "Трассируемые точки"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров трассируемых линий.",
          "desc_en": "Array of tracking lines numbers.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "tracking_lines_get_for_chain",
      "level": "1",
      "desc_ru": "Запрос данных о трассируемых линиях во всей цепочке.",
      "desc_en": "Request data for tracking lines in the entire chain.",
      "group": [
        "Списки",
        "Трассируемые точки"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров трассируемых линий.",
          "desc_en": "Array of tracking lines numbers.",
          "type": "Enum (GlobalItemId) array"
        }
      ]
    },
    {
      "name": "tracking_point_create",
      "level": "1",
      "desc_ru": "Создание трассируемой точки.",
      "desc_en": "Creating tracking point.",
      "group": [
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id трассируемой точки.",
          "desc_en": "Tracking point id.",
          "type": "Integer"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "point_x",
          "desc_ru": "Координата x трассируемой точки.",
          "desc_en": "Tracking point x-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата y трассируемой точки.",
          "desc_en": "Tracking point y-coordinate.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата z трассируемой точки.",
          "desc_en": "Tracking point z-coordinate.",
          "type": "Float"
        },
        {
          "name": "on_surface",
          "desc_ru": "Находится на поверхности.",
          "desc_en": "Is located on the surface.",
          "type": "Boolean"
        },
        {
          "name": "group",
          "desc_ru": "Id трассируемой группы.",
          "desc_en": "Tracking group id.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id трассируемой точки.",
          "desc_en": "Tracking point id.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "tracking_point_get",
      "level": "2",
      "desc_ru": "Запрос данных о трассируемой точке.",
      "desc_en": "Request data for tracking point.",
      "group": [
        "Трассируемые точки"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id трассируемой точки.",
          "desc_en": "Tracking point id.",
          "type": "Integer"
        },
        {
          "name": "operation",
          "desc_ru": "Номер операции.",
          "desc_en": "Operation number.",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "x",
          "desc_ru": "Координата x трассируемой точки.",
          "desc_en": "Tracking point x-coordinate.",
          "type": "Float"
        },
        {
          "name": "y",
          "desc_ru": "Координата y трассируемой точки.",
          "desc_en": "Tracking point y-coordinate.",
          "type": "Float"
        },
        {
          "name": "z",
          "desc_ru": "Координата z трассируемой точки.",
          "desc_en": "Tracking point z-coordinate.",
          "type": "Float"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс типа сетки.",
          "desc_en": "Mesh type index.",
          "type": "Integer"
        },
        {
          "name": "on_surface",
          "desc_ru": "Находится на поверхности.",
          "desc_en": "Is located on the surface.",
          "type": "Boolean"
        },
        {
          "name": "node",
          "desc_ru": "Массив из трех номеров узлов элемента, внутри которого находится трассируемая точка.",
          "desc_en": "An array of three node numbers of the element that contains the tracking point.",
          "type": "Integer array"
        },
        {
          "name": "node_weight",
          "desc_ru": "Массив из значений веса трассируемой точки в зависимости от расстояния между ней и каждым из узлов элемента.",
          "desc_en": "An array of tracking point weight values ​​depending on the distance between it and each of the element nodes.",
          "type": "Float array"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "tracking_points_get",
      "level": "1",
      "desc_ru": "Запрос данных о трассируемых точках.",
      "desc_en": "Request data for tracking points.",
      "group": [
        "Списки",
        "Трассируемые точки"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров трассируемых точек.",
          "desc_en": "Array of tracking points numbers.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "tracking_points_get_for_chain",
      "level": "1",
      "desc_ru": "Запрос данных о трассируемых точках во всей цепочке.",
      "desc_en": "Request data for tracking points in the entire chain.",
      "group": [
        "Списки",
        "Трассируемые точки"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив из номеров трассируемых точек.",
          "desc_en": "Array of tracking points numbers.",
          "type": "Enum (GlobalItemId) array"
        }
      ]
    },
    {
      "name": "view_back",
      "level": "1",
      "desc_ru": "Установка вида объектов сзади.",
      "desc_en": "Setting the view of objects from behind.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "view_bottom",
      "level": "1",
      "desc_ru": "Установка вида объектов снизу.",
      "desc_en": "Setting the bottom view of objects.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "view_front",
      "level": "1",
      "desc_ru": "Установка вида объектов спереди.",
      "desc_en": "Setting the front view of objects.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "view_get",
      "level": "1",
      "desc_ru": "Получение информации о позиции вида.",
      "desc_en": "Getting information about the position of the view.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": [
        {
          "name": "point_x",
          "desc_ru": "Координата на оси x.",
          "desc_en": "X-axis coordinate.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата на оси y.",
          "desc_en": "Y-axis coordinate.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата на оси z.",
          "desc_en": "Z-axis coordinate.",
          "type": "Float"
        },
        {
          "name": "vector_x",
          "desc_ru": "Проекция длины вектора на ось x.",
          "desc_en": "Projection of the length of the vector on the x axis.",
          "type": "Float"
        },
        {
          "name": "vector_y",
          "desc_ru": "Проекция длины вектора на ось y.",
          "desc_en": "Projection of the length of the vector on the y axis.",
          "type": "Float"
        },
        {
          "name": "vector_z",
          "desc_ru": "Проекция длины вектора на ось z.",
          "desc_en": "Projection of the length of the vector on the z axis.",
          "type": "Float"
        }
      ]
    },
    {
      "name": "view_left",
      "level": "1",
      "desc_ru": "Установка вида объектов слева.",
      "desc_en": "Setting the view of objects on the left.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "view_on_bottom_90",
      "level": "1",
      "desc_ru": "Установка вида объектов снизу и поворот против часовой стрелки на 90 град.",
      "desc_en": "Set the view of objects from the bottom and rotation counterclockwise by 90 degrees.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "view_on_top_90",
      "level": "1",
      "desc_ru": "Установка вида объектов сверху и поворот против часовой стрелки на 90 град.",
      "desc_en": "Set the view of objects from top and rotation counterclockwise by 90 degrees.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "view_option_get",
      "level": "1",
      "desc_ru": "Запрос данных об отображении результатов моделирования.",
      "desc_en": "Requesting data for displaying simulation results.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "option",
          "desc_ru": "Способ отображения результатов моделирования.",
          "desc_en": "Type of simulation results display.",
          "type": "Enum (ViewOptions)"
        },
        {
          "name": "value",
          "desc_ru": "Параметр не используется.",
          "desc_en": "The parameter is not used.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Способ используется.",
          "desc_en": "The type is used.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "view_option_set",
      "level": "1",
      "desc_ru": "Установка способа отображения результатов моделирование.",
      "desc_en": "Setting how simulation results are displayed.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "option",
          "desc_ru": "Способ отображения результатов моделирования.",
          "desc_en": "Type of simulation results display.",
          "type": "Enum (ViewOptions)"
        },
        {
          "name": "value",
          "desc_ru": "Использовать способ.",
          "desc_en": "To use the type.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "view_right",
      "level": "1",
      "desc_ru": "Установка вида объектов справа.",
      "desc_en": "Setting the view of objects on the right.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "view_set",
      "level": "1",
      "desc_ru": "Установка вида на объекты с определенной точки.",
      "desc_en": "Setting the view on objects from a certain point.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "point_x",
          "desc_ru": "Координата на оси x.",
          "desc_en": "X-axis coordinate.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата на оси y.",
          "desc_en": "Y-axis coordinate.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата на оси z.",
          "desc_en": "Z-axis coordinate.",
          "type": "Float"
        },
        {
          "name": "vector_x",
          "desc_ru": "Проекция длины вектора на ось x.",
          "desc_en": "Projection of the length of the vector on the x axis.",
          "type": "Float"
        },
        {
          "name": "vector_y",
          "desc_ru": "Проекция длины вектора на ось y.",
          "desc_en": "Projection of the length of the vector on the y axis.",
          "type": "Float"
        },
        {
          "name": "vector_z",
          "desc_ru": "Проекция длины вектора на ось z.",
          "desc_en": "Projection of the length of the vector on the z axis.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "view_top",
      "level": "1",
      "desc_ru": "Установка вида объектов сверху.",
      "desc_en": "Setting the view of objects from top.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "work_dir_get",
      "level": "1",
      "desc_ru": "Запрос данных о расположении корневых файлов программы.",
      "desc_en": "Requesting information about the location of the root files of the applications.",
      "group": [
        "QForm"
      ],
      "input": [],
      "output": [
        {
          "name": "path",
          "desc_ru": "Расположение файлов.",
          "desc_en": "Files directory.",
          "type": "String"
        }
      ]
    },
    {
      "name": "work_dir_set",
      "level": "1",
      "desc_ru": "Задание адреса к исполнительному файлу QForm.",
      "desc_en": "Setting the address to the QForm executable file.",
      "group": [
        "QForm"
      ],
      "input": [
        {
          "name": "path",
          "desc_ru": "Расположение файлов.",
          "desc_en": "Files directory.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "zoom_to_fit",
      "level": "1",
      "desc_ru": "Отображение объектов по размеру рабочего окна.",
      "desc_en": "Displaying the objects by the size of the working window.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": []
    },
    {
      "name": "bound_cond_set_sprayer_polar_array",
      "level": "1",
      "desc_ru": "Добавление спреера в полярных координатах.",
      "desc_en": "Adding a sprayer in polar array.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Идентификационный номер граничного условия.",
          "desc_en": "Id boundary condition.",
          "type": "Integer"
        },
        {
          "name": "angle",
          "desc_ru": "Угол.",
          "desc_en": "Angle.",
          "type": "Float"
        },
        {
          "name": "d",
          "desc_ru": "Диаметр.",
          "desc_en": "Diameter.",
          "type": "Float"
        },
        {
          "name": "h",
          "desc_ru": "Высота.",
          "desc_en": "Height.",
          "type": "Float"
        },
        {
          "name": "SectorRadius",
          "desc_ru": "Радиус сектора.",
          "desc_en": "Sector radius.",
          "type": "Float"
        },
        {
          "name": "SectorAngle",
          "desc_ru": "Угол сектора.",
          "desc_en": "Sector angle.",
          "type": "Float"
        },
        {
          "name": "CountConesInSector",
          "desc_ru": "Количество конусов в секторе.",
          "desc_en": "Count cones in sector.",
          "type": "Integer"
        },
        {
          "name": "CountLayers",
          "desc_ru": "Количество слоев.",
          "desc_en": "Count layers.",
          "type": "Integer"
        },
        {
          "name": "DistanceBetweenLayers",
          "desc_ru": "Расстояние между слоями.",
          "desc_en": "Distance between layers.",
          "type": "Float"
        },
        {
          "name": "AngleBetweenConeAxisAndLayerPlane",
          "desc_ru": "Угол между осью конуса и плоскостью слоя.",
          "desc_en": "Angle between cone axis and layer plane.",
          "type": "Float"
        },
        {
          "name": "TwistAngle",
          "desc_ru": "Угол поворота.",
          "desc_en": "Twist angle.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_set_sprayer_polar_array_db",
      "level": "1",
      "desc_ru": "Добавление спреера в полярных координатах в базу данных.",
      "desc_en": "Adding a sprayer in polar array in database.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Идентификационный номер граничного условия.",
          "desc_en": "Id boundary condition.",
          "type": "Integer"
        },
        {
          "name": "SectorRadius",
          "desc_ru": "Радиус сектора.",
          "desc_en": "Sector radius.",
          "type": "Float"
        },
        {
          "name": "SectorAngle",
          "desc_ru": "Угол сектора.",
          "desc_en": "Sector angle.",
          "type": "Float"
        },
        {
          "name": "CountConesInSector",
          "desc_ru": "Количество конусов в секторе.",
          "desc_en": "Count cone in sector.",
          "type": "Integer"
        },
        {
          "name": "CountLayers",
          "desc_ru": "Количество слоев.",
          "desc_en": "Count layers.",
          "type": "Integer"
        },
        {
          "name": "DistanceBetweenLayers",
          "desc_ru": "Расстояние между слоями.",
          "desc_en": "Distance between layers.",
          "type": "Float"
        },
        {
          "name": "AngleBetweenConeAxisAndLayerPlane",
          "desc_ru": "Угол между осью конуса и плоскостью слоя.",
          "desc_en": "Angle between cone axis and layer plane.",
          "type": "Float"
        },
        {
          "name": "TwistAngle",
          "desc_ru": "Угол поворота.",
          "desc_en": "Twist angle.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_set_sprayer_rect_array",
      "level": "1",
      "desc_ru": "Добавление спреера в прямоугольных координатах.",
      "desc_en": "Adding a sprayer in rectangular array.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Идентификационный номер граничного условия.",
          "desc_en": "Id boundary condition.",
          "type": "Integer"
        },
        {
          "name": "angle",
          "desc_ru": "Угол.",
          "desc_en": "Angle.",
          "type": "Float"
        },
        {
          "name": "d",
          "desc_ru": "Диаметр.",
          "desc_en": "Diameter.",
          "type": "Float"
        },
        {
          "name": "h",
          "desc_ru": "Высота.",
          "desc_en": "Height.",
          "type": "Float"
        },
        {
          "name": "CountConesDir1",
          "desc_ru": "Конус по направлению 1.",
          "desc_en": "Count cones in direction 1.",
          "type": "Integer"
        },
        {
          "name": "CountConesDir2",
          "desc_ru": "Конус по направлению 2.",
          "desc_en": "Count cones in direction 2.",
          "type": "Integer"
        },
        {
          "name": "DistanceDir1",
          "desc_ru": "Расстояние по направлению 1.",
          "desc_en": "Distance in direction 1.",
          "type": "Float"
        },
        {
          "name": "DistanceDir2",
          "desc_ru": "Расстояние по направлению 2.",
          "desc_en": "Distance in direction 2.",
          "type": "Float"
        },
        {
          "name": "TwistAngle",
          "desc_ru": "Угол поворота.",
          "desc_en": "Twist angle.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "bound_cond_set_sprayer_rect_array_db",
      "level": "1",
      "desc_ru": "Добавление спреера в прямоугольных координатах в базу данных.",
      "desc_en": "Adding a sprayer in rectangular array in database.",
      "group": [
        "Граничные условия"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Идентификационный номер граничного условия.",
          "desc_en": "Id boundary condition.",
          "type": "Integer"
        },
        {
          "name": "CountConesDir1",
          "desc_ru": "Количество конусов по направлению 1.",
          "desc_en": "Count cones in direction 1.",
          "type": "Integer"
        },
        {
          "name": "CountConesDir2",
          "desc_ru": "Количество конусов по направлению 2.",
          "desc_en": "Count cones in direction 2.",
          "type": "Integer"
        },
        {
          "name": "DistanceDir1",
          "desc_ru": "Расстояние по направлению 1.",
          "desc_en": "Distance in direction 1.",
          "type": "Float"
        },
        {
          "name": "DistanceDir2",
          "desc_ru": "Расстояние по направлению 2.",
          "desc_en": "Distance in direction 2.",
          "type": "Float"
        },
        {
          "name": "TwistAngle",
          "desc_ru": "Угол поворота.",
          "desc_en": "Twist angle.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "available_fields_get",
      "level": "2",
      "desc_ru": "Получение списка доступных полей в группе.",
      "desc_en": "Getting a collection of available fields in group.",
      "group": [
        "Поля"
      ],
      "input": [
        {
          "name": "group",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (FieldGroup)"
        }
      ],
      "output": [
        {
          "name": "fields",
          "desc_ru": "Коллекция доступных полей.",
          "desc_en": "Avaliable fields collection.",
          "type": "Enum (FieldId) array"
        }
      ]
    },
    {
      "name": "db_arbitrary_drive_get_records",
      "level": "1",
      "desc_ru": "Получение данных о движении произвольного привода.",
      "desc_en": "Getting data on the movement of an arbitrary drive.",
      "group": [
        "База данных",
        "Свойства"
      ],
      "input": [
        {
          "name": "db_path",
          "desc_ru": "Путь к приводу в базе данных.",
          "desc_en": "Drive path in database.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "db_path",
          "desc_ru": "Путь к приводу в базе данных.",
          "desc_en": "Drive path in database.",
          "type": "String"
        },
        {
          "name": "records",
          "desc_ru": "Массив данных движения привода.",
          "desc_en": "Drive motion data array.",
          "type": "Enum (DbArbitraryDriveRecord) array"
        }
      ]
    },
    {
      "name": "db_arbitrary_drive_set_records",
      "level": "1",
      "desc_ru": "Установка данных о движении произвольного привода.",
      "desc_en": "Setting data on the movement of an arbitrary drive.",
      "group": [
        "База данных",
        "Свойства"
      ],
      "input": [
        {
          "name": "db_path",
          "desc_ru": "Путь к приводу в базе данных.",
          "desc_en": "Drive path in database.",
          "type": "String"
        },
        {
          "name": "records",
          "desc_ru": "Массив данных движения привода.",
          "desc_en": "Drive motion data array.",
          "type": "Enum (DbArbitraryDriveRecord) array"
        }
      ],
      "output": []
    },
    {
      "name": "export_records",
      "level": "1",
      "desc_ru": "Экспорт шагов расчета.",
      "desc_en": "Export records.",
      "group": [
        "Результаты расчета",
        "Экспорт"
      ],
      "input": [
        {
          "name": "mode",
          "desc_ru": "Выбор типа экспорта.",
          "desc_en": "Selecting an export type.",
          "type": "Enum (RecordsExportMode)"
        },
        {
          "name": "output_directory",
          "desc_ru": "Директория для экспорта.",
          "desc_en": "Output directory.",
          "type": "String"
        }
      ],
      "output": []
    },
    {
      "name": "section_plane_create_3p",
      "level": "1",
      "desc_ru": "Содание плоскости сечения по трем точкам.",
      "desc_en": "Creating a section plane using three points.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "x1",
          "desc_ru": "Координата по оси X (1 точка).",
          "desc_en": "X coordinate (1 point).",
          "type": "Float"
        },
        {
          "name": "y1",
          "desc_ru": "Координата по оси Y (1 точка).",
          "desc_en": "Y coordinate (1 point).",
          "type": "Float"
        },
        {
          "name": "z1",
          "desc_ru": "Координата по оси Z (1 точка).",
          "desc_en": "Z coordinate (1 point).",
          "type": "Float"
        },
        {
          "name": "x2",
          "desc_ru": "Координата по оси X (2 точка).",
          "desc_en": "X coordinate (2 point).",
          "type": "Float"
        },
        {
          "name": "y2",
          "desc_ru": "Координата по оси Y (2 точка).",
          "desc_en": "Y coordinate (2 point).",
          "type": "Float"
        },
        {
          "name": "z2",
          "desc_ru": "Координата по оси Z (2 точка).",
          "desc_en": "Z coordinate (2 point).",
          "type": "Float"
        },
        {
          "name": "x3",
          "desc_ru": "Координата по оси X (3 точка).",
          "desc_en": "X coordinate (3 point).",
          "type": "Float"
        },
        {
          "name": "y3",
          "desc_ru": "Координата по оси Y (3 точка).",
          "desc_en": "Y coordinate (3 point).",
          "type": "Float"
        },
        {
          "name": "z3",
          "desc_ru": "Координата по оси Z (3 точка).",
          "desc_en": "Z coordinate (3 point).",
          "type": "Float"
        },
        {
          "name": "id",
          "desc_ru": "Id созданной плоскости.",
          "desc_en": "Id of the created plane.",
          "type": "Integer"
        },
        {
          "name": "offset",
          "desc_ru": "Смещение по нормали к плоскости сечения.",
          "desc_en": "Section plane offset.",
          "type": "Float"
        },
        {
          "name": "reverse_cut",
          "desc_ru": "Сечение с обратной стороны.",
          "desc_en": "Cross section from the reverse side.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id созданной плоскости.",
          "desc_en": "Id of the created plane.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "section_plane_create_pn",
      "level": "1",
      "desc_ru": "Содание плоскости сечения по точке и вектору нормальному к плоскости сечения.",
      "desc_en": "Creating a section plane using a point and a vector normal to the section plane.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "point_x",
          "desc_ru": "Координата точки по оси X.",
          "desc_en": "X coordinate.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата точки по оси Y.",
          "desc_en": "Y coordinate.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата точки по оси Z.",
          "desc_en": "Z coordinate.",
          "type": "Float"
        },
        {
          "name": "normal_x",
          "desc_ru": "Координата вектора нормали по оси X.",
          "desc_en": "Normal vector coordinate along the X axis.",
          "type": "Float"
        },
        {
          "name": "normal_y",
          "desc_ru": "Координата вектора нормали по оси Y.",
          "desc_en": "Normal vector coordinate along the Y axis.",
          "type": "Float"
        },
        {
          "name": "normal_z",
          "desc_ru": "Координата вектора нормали по оси Z.",
          "desc_en": "Normal vector coordinate along the Z axis.",
          "type": "Float"
        },
        {
          "name": "id",
          "desc_ru": "Id созданной плоскости.",
          "desc_en": "Id of the created plane.",
          "type": "Integer"
        },
        {
          "name": "offset",
          "desc_ru": "Смещение по нормали к плоскости сечения.",
          "desc_en": "Section plane offset.",
          "type": "Float"
        },
        {
          "name": "reverse_cut",
          "desc_ru": "Сечение с обратной стороны.",
          "desc_en": "Cross section from the reverse side.",
          "type": "Boolean"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id созданной плоскости.",
          "desc_en": "Id of the created plane.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "section_plane_delete",
      "level": "1",
      "desc_ru": "Удаление плоскости сечения.",
      "desc_en": "Deleting a section plane.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id плоскости сечения.",
          "desc_en": "Section plane id.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "section_planes_get",
      "level": "1",
      "desc_ru": "Получение массива id плоскостей сечения.",
      "desc_en": "Getting an array of section plane id.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив id плоскостей сечения.",
          "desc_en": "Array of section plane id.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "db_object_exists",
      "level": "1",
      "desc_ru": "Функция для определения наличия объекта в базе данных.",
      "desc_en": "Function to check existence of object in database.",
      "group": [
        "База данных"
      ],
      "input": [
        {
          "name": "path",
          "desc_ru": "Путь к объекту в базе данных.",
          "desc_en": "Path to the object in the database.",
          "type": "String"
        }
      ],
      "output": [
        {
          "name": "value",
          "desc_ru": "Результат (есть, нет).",
          "desc_en": "Result (True, False).",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "camera_direction_get",
      "level": "1",
      "desc_ru": "Получение направления осей камеры (видового куба). Где forward - направление оси в сторону экрана, а up - направление оси вверх.",
      "desc_en": "Getting the direction of the camera axes (view cube). Where forward is the direction of the axis towards the screen, and up is the direction of the axis up.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": [
        {
          "name": "forward_dir_x",
          "desc_ru": "Координата оси в сторону экрана X.",
          "desc_en": "Coordinate of the axis towards the screen X.",
          "type": "Float"
        },
        {
          "name": "forward_dir_y",
          "desc_ru": "Координата оси в сторону экрана Y.",
          "desc_en": "Coordinate of the axis towards the screen Y.",
          "type": "Float"
        },
        {
          "name": "forward_dir_z",
          "desc_ru": "Координата оси в сторону экрана Z.",
          "desc_en": "Coordinate of the axis towards the screen Z.",
          "type": "Float"
        },
        {
          "name": "up_dir_x",
          "desc_ru": "Координата оси вверх X.",
          "desc_en": "Coordinate of the axis up X.",
          "type": "Float"
        },
        {
          "name": "up_dir_y",
          "desc_ru": "Координата оси вверх Y.",
          "desc_en": "Coordinate of the axis up Y.",
          "type": "Float"
        },
        {
          "name": "up_dir_z",
          "desc_ru": "Координата оси вверх Z.",
          "desc_en": "Coordinate of the axis up Z.",
          "type": "Float"
        }
      ]
    },
    {
      "name": "camera_direction_set",
      "level": "1",
      "desc_ru": "Установка направления осей камеры (видового куба). Где forward - направление оси в сторону экрана, а up - направление оси вверх.",
      "desc_en": "Setting the direction of the camera axes (view cube). Where forward is the direction of the axis towards the screen, and up is the direction of the axis up.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "forward_dir_x",
          "desc_ru": "Координата оси в сторону экрана X.",
          "desc_en": "Coordinate of the axis towards the screen X.",
          "type": "Float"
        },
        {
          "name": "forward_dir_y",
          "desc_ru": "Координата оси в сторону экрана Y.",
          "desc_en": "Coordinate of the axis towards the screen Y.",
          "type": "Float"
        },
        {
          "name": "forward_dir_z",
          "desc_ru": "Координата оси в сторону экрана Z.",
          "desc_en": "Coordinate of the axis towards the screen Z.",
          "type": "Float"
        },
        {
          "name": "up_dir_x",
          "desc_ru": "Координата оси вверх X.",
          "desc_en": "Coordinate of the axis up X.",
          "type": "Float"
        },
        {
          "name": "up_dir_y",
          "desc_ru": "Координата оси вверх Y.",
          "desc_en": "Coordinate of the axis up Y.",
          "type": "Float"
        },
        {
          "name": "up_dir_z",
          "desc_ru": "Координата оси вверх Y.",
          "desc_en": "Coordinate of the axis up Z.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "extrusion_bearings_z",
      "level": "2",
      "desc_ru": "Функция возвращает координаты начала и конца пояска.",
      "desc_en": "The function returns the coordinates of beginning and end of bearings.",
      "group": [
        "Прессование профилей",
        "Результаты расчета"
      ],
      "input": [],
      "output": [
        {
          "name": "z_min",
          "desc_ru": "Координата начала пояска.",
          "desc_en": "The coordinate of the beginning of the bearing.",
          "type": "Float"
        },
        {
          "name": "z_max",
          "desc_ru": "Координата конца пояска.",
          "desc_en": "The coordinate of the end of the bearing.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "section_plane_enable",
      "level": "1",
      "desc_ru": "Функция изменяет состояние плоскости сечение (сечение включено или выключено).",
      "desc_en": "The function modifies the state of the section plane.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id плоскости сечения.",
          "desc_en": "Section plane id.",
          "type": "Integer"
        },
        {
          "name": "enabled",
          "desc_ru": "Статус плоскости сечения (true - сечение включено, false - сечение выключено).",
          "desc_en": "The status of the section plane (true - section enabled, false - section disabled).",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "section_plane_show",
      "level": "1",
      "desc_ru": "Изменение отображения плоскости сечения.",
      "desc_en": "Changing the display of the section plane.",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id плоскости сечения.",
          "desc_en": "Section plane id.",
          "type": "Integer"
        },
        {
          "name": "visible",
          "desc_ru": "Статус отображения (true - отображается, false - не отображается).",
          "desc_en": "Display status (true - visible, false - invisible).",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "operation_set_first_in_chain",
      "level": "1",
      "desc_ru": "Функция делает активной первую операцию в цепочке операций.",
      "desc_en": "The function makes the first operation in the chain active.",
      "group": [
        "Операция"
      ],
      "input": [],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id активной операции.",
          "desc_en": "Id the active operation.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "operation_set_last_in_chain",
      "level": "1",
      "desc_ru": "Функция делает активной последнюю операцию в цепочке операций.",
      "desc_en": "The function makes the last operation in the chain active.",
      "group": [
        "Операция"
      ],
      "input": [],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id активной операции.",
          "desc_en": "Id the active operation.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "view_overall_dimensions",
      "level": "1",
      "desc_ru": "Функция выводит значения габаритной рамки.",
      "desc_en": "The function outputs the values of the overall dimensions frame.",
      "group": [
        "Вид"
      ],
      "input": [],
      "output": [
        {
          "name": "height",
          "desc_ru": "Размер по высоте.",
          "desc_en": "Height dimension.",
          "type": "Float"
        },
        {
          "name": "width",
          "desc_ru": "Размер по ширине.",
          "desc_en": "Width dimension.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "export_section_contour",
      "level": "2",
      "desc_ru": "Экспорт контура сечения.",
      "desc_en": "Exporting a cross-sectional outline.",
      "group": [
        "Экспорт"
      ],
      "input": [
        {
          "name": "point_x",
          "desc_ru": "Координата Х через которую проходит плоскость сечения.",
          "desc_en": "The X coordinate through which the section plane passes.",
          "type": "Float"
        },
        {
          "name": "point_y",
          "desc_ru": "Координата Y через которую проходит плоскость сечения.",
          "desc_en": "The Y coordinate through which the section plane passes.",
          "type": "Float"
        },
        {
          "name": "point_z",
          "desc_ru": "Координата Z через которую проходит плоскость сечения.",
          "desc_en": "The Z coordinate through which the section plane passes.",
          "type": "Float"
        },
        {
          "name": "normal_x",
          "desc_ru": "Проекция вектора нормали на плоскость X.",
          "desc_en": "Projection of the normal vector on the X-axis.",
          "type": "Float"
        },
        {
          "name": "normal_y",
          "desc_ru": "Проекция вектора нормали на плоскость Y.",
          "desc_en": "Projection of the normal vector on the Y-axis.",
          "type": "Float"
        },
        {
          "name": "normal_z",
          "desc_ru": "Проекция вектора нормали на плоскость X.",
          "desc_en": "Direction of the normal vector along the Z-axis.",
          "type": "Float"
        },
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type.",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "mesh_index",
          "desc_ru": "Индекс типа сетки.",
          "desc_en": "Mesh type index.",
          "type": "Integer"
        },
        {
          "name": "u_vector_defined",
          "desc_ru": "Вектор, задающий локальную систему координат, задан.",
          "desc_en": "The vector defining the local coordinate system is set.",
          "type": "Boolean"
        },
        {
          "name": "u_vector_x",
          "desc_ru": "Направление вектора локальной системы координат по нормали вдоль оси X.",
          "desc_en": "Direction of the local coordinate system vector in normal direction along the X-axis.",
          "type": "Float"
        },
        {
          "name": "u_vector_y",
          "desc_ru": "Направление вектора локальной системы координат по нормали вдоль оси Y.",
          "desc_en": "Direction of the local coordinate system vector in normal direction along the Y-axis.",
          "type": "Float"
        },
        {
          "name": "u_vector_z",
          "desc_ru": "Направление вектора локальной системы координат по нормали вдоль оси Z.",
          "desc_en": "Direction of the local coordinate system vector in normal direction along the Z-axis.",
          "type": "Float"
        },
        {
          "name": "file",
          "desc_ru": "Путь к файлу.",
          "desc_en": "File path.",
          "type": "String"
        },
        {
          "name": "format",
          "desc_ru": "Формат файла.",
          "desc_en": "File format.",
          "type": "Enum (SectionContourFormat)"
        },
        {
          "name": "mesh_units",
          "desc_ru": "Единицы измерения в сетке.",
          "desc_en": "Mesh units.",
          "type": "Enum (LengthUnit)"
        }
      ],
      "output": []
    },
    {
      "name": "extrusion_ports_section_z",
      "level": "2",
      "desc_ru": "Функция возвращает координату z плоскости, секущей все питатели.",
      "desc_en": "The function returns the z-coordinate of the plane that crosses all the ports.",
      "group": [
        "Прессование профилей",
        "Результаты расчета"
      ],
      "input": [],
      "output": [
        {
          "name": "value",
          "desc_ru": "Значение координаты.",
          "desc_en": "The coordinate value.",
          "type": "Float"
        },
        {
          "name": "units",
          "desc_ru": "Единицы измерения.",
          "desc_en": "Units.",
          "type": "String"
        }
      ]
    },
    {
      "name": "geometry_generate_quad_mesh",
      "level": "1",
      "desc_ru": "Функция для создания сетки четырехугольников с помощью встроенного генератора.",
      "desc_en": "A function for generating quad mesh using the built-in generator.",
      "group": [
        "Геометрия"
      ],
      "input": [
        {
          "name": "object_type",
          "desc_ru": "Тип объекта.",
          "desc_en": "Object type .",
          "type": "Enum (ObjectType)"
        },
        {
          "name": "object_id",
          "desc_ru": "Id объекта.",
          "desc_en": "Object id.",
          "type": "Integer"
        },
        {
          "name": "penalty_angle_min",
          "desc_ru": "Минимальный штрафной угол - это минимальный угол, при котором алгоритм пытается распределить значения по всем углам сетки. Алгоритм старается не допускать углов меньше чем указанный.",
          "desc_en": "The minimum penalty angle is the minimum angle at which the algorithm attempts to distribute values across all corners of the mesh.",
          "type": "Float"
        },
        {
          "name": "penalty_angle_max",
          "desc_ru": "Максимальный штрафной угол - это максимальный угол, при котором алгоритм пытается распределить значения по всем углам сетки. Алгоритм старается не допускать углов меньше чем указанный.",
          "desc_en": "The maximum penalty angle is the maximum angle at which the algorithm attempts to distribute values across all corners of the mesh.",
          "type": "Float"
        },
        {
          "name": "max_split_level",
          "desc_ru": "Параметр определяет максимальный уровень разбиения исходной сетки для учета всех изгибов в геометрии.",
          "desc_en": "Parameter specifies the maximum level of subdivision of the initial mesh to account for all bends in the geometry. .",
          "type": "Integer"
        },
        {
          "name": "min_initial_side",
          "desc_ru": "Количество элементов вдоль меньшей из сторон исходной прямоугольной сетки.",
          "desc_en": "The parameter is the number of elements along the smaller of the sides of the initial rectangular mesh.",
          "type": "Integer"
        },
        {
          "name": "min_closing_level",
          "desc_ru": "Параметр, отвечающий за приближение сетки к исходной геометрии.",
          "desc_en": "The parameter that is responsible for bringing the mesh closer to the initial geometry.",
          "type": "Integer"
        },
        {
          "name": "can_be_simplified",
          "desc_ru": "Режим упрощенной генерации сетки.",
          "desc_en": "Simplified mesh generation mode.",
          "type": "Boolean"
        },
        {
          "name": "duglas_peucker_eps",
          "desc_ru": "Относительное допустимое отклонение контура.",
          "desc_en": "Relative permissible deviation of the contour.",
          "type": "Float"
        }
      ],
      "output": []
    },
    {
      "name": "multithreading_settings_get",
      "level": "1",
      "desc_ru": "Получения сведений о количестве используемых для расчета потоков и режиме совместимости.",
      "desc_en": "Getting information about the number of threads used for calculation and the compatibility mode status.",
      "group": [
        "Расчет",
        "QForm"
      ],
      "input": [],
      "output": [
        {
          "name": "computation_thread_count",
          "desc_ru": "Количество используемых потоков.",
          "desc_en": "Number of threads used.",
          "type": "Integer"
        },
        {
          "name": "computation_reproducibility",
          "desc_ru": "Статус режима совместимости.",
          "desc_en": "The compatibility mode status.",
          "type": "Boolean"
        }
      ]
    },
    {
      "name": "multithreading_settings_set",
      "level": "1",
      "desc_ru": "Установка количества используемых для расчета потоков и режима совместимости.",
      "desc_en": "Setting the number of threads used for calculation and compatibility mode.",
      "group": [
        "Расчет",
        "QForm"
      ],
      "input": [
        {
          "name": "computation_thread_count",
          "desc_ru": "Количество используемых потоков.",
          "desc_en": "Number of threads used.",
          "type": "Integer"
        },
        {
          "name": "computation_reproducibility",
          "desc_ru": "Активация режима совместимости.",
          "desc_en": "The compatibility mode activation.",
          "type": "Boolean"
        }
      ],
      "output": []
    },
    {
      "name": "spring_between_tools_create",
      "level": "1",
      "desc_ru": "Создание пружины между инструментами.",
      "desc_en": "Creating a spring between tools.",
      "group": [
        "Пружины между инструментами"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id пружины между инструментами (опционально).",
          "desc_en": "Id spring between tools (optional).",
          "type": "Integer"
        }
      ],
      "output": [
        {
          "name": "id",
          "desc_ru": "Id созданной пружины.",
          "desc_en": "Id of the created spring.",
          "type": "Integer"
        }
      ]
    },
    {
      "name": "spring_between_tools_delete",
      "level": "1",
      "desc_ru": "Удаление пружины между инструментами.",
      "desc_en": "Deleting a spring between tools.",
      "group": [
        "Пружины между инструментами"
      ],
      "input": [
        {
          "name": "id",
          "desc_ru": "Id пружины между инструментами .",
          "desc_en": "Id of the created spring.",
          "type": "Integer"
        }
      ],
      "output": []
    },
    {
      "name": "springs_between_tools_get",
      "level": "1",
      "desc_ru": "Получение массива id пружин между инструментами.",
      "desc_en": "Getting an array of spring ids between tools.",
      "group": [
        "Пружины между инструментами",
        "Списки"
      ],
      "input": [],
      "output": [
        {
          "name": "objects",
          "desc_ru": "Массив id.",
          "desc_en": "Array of ids.",
          "type": "Integer array"
        }
      ]
    },
    {
      "name": "zoom_to_frame",
      "level": "1",
      "desc_ru": "",
      "desc_en": "",
      "group": [
        "Вид"
      ],
      "input": [
        {
          "name": "scale",
          "desc_ru": "",
          "desc_en": "",
          "type": "Float"
        }
      ],
      "output": []
    }
  ]
}